!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
<A-j>	.\vimrc.vim	/^nnoremap <A-j> :cn<CR>$/;"	m
<A-k>	.\vimrc.vim	/^nnoremap <A-k> :cp<CR>$/;"	m
<C-R>	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^noremap <buffer><silent> <C-R> <C-R>:PyflakesUpdate<CR>$/;"	m
<C-Space>	.\vimrc.vim	/^inoremap <C-Space> <C-x><C-o>$/;"	m
<C-f>	.\vimrc.vim	/^nnoremap <C-f> :bnext<CR>$/;"	m
<C-h>	.\vimrc.vim	/^nnoremap <C-h> :wincmd h<CR>$/;"	m
<C-j>	.\vimrc.vim	/^nnoremap <C-j> :wincmd j<CR>$/;"	m
<C-k>	.\vimrc.vim	/^nnoremap <C-k> :wincmd k<CR>$/;"	m
<C-l>	.\vimrc.vim	/^nnoremap <C-l> :wincmd l<CR>$/;"	m
<C-s>	.\vimrc.vim	/^nnoremap <C-s> :bprev<CR>$/;"	m
<F11>	.\vimrc.vim	/^nnoremap <F11> :NERDTreeToggle<CR>$/;"	m
<F12>	.\vimrc.vim	/^nnoremap <F12> :set nonumber!<CR>:set foldcolumn=0<CR>$/;"	m
<F4>	.\ftplugin\python.vim	/^nnoremap <F4> :call UpdateTags()<CR>$/;"	m
<F6>!python	.\ftplugin\python.vim	/^nnoremap <F6>!python %<CR>$/;"	m
<F8>	.\ftplugin\python.vim	/^nnoremap <F8> :TlistToggle<CR>$/;"	m
<Plug>SuperTabBackward	.\bundle\supertab\plugin\supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	.\bundle\supertab\plugin\supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<SID>xx	.\plugin\taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<SwipeLeft>	.\vimrc.vim	/^        nmap <SwipeLeft> :bN<CR>$/;"	m
<SwipeRight>	.\vimrc.vim	/^        nmap <SwipeRight> :bn<CR>$/;"	m
<c-r><tab>	.\bundle\snipmate\after\plugin\snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<c-x>	.\bundle\supertab\plugin\supertab.vim	/^  imap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	.\bundle\supertab\plugin\supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<s-tab>	.\bundle\snipmate\after\plugin\snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<space>	.\vimrc.vim	/^nnoremap <space> zA$/;"	m
<space>	.\vimrc.vim	/^vnoremap <space> zF$/;"	m
<tab>	.\bundle\snipmate\after\plugin\snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
ASSIGN	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def ASSIGN(self, node):$/;"	m	class:Checker
AUGASSIGN	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def AUGASSIGN(self, node):$/;"	m	class:Checker
AbstractClass	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class AbstractClass(PyObject):$/;"	c
AbstractFunction	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class AbstractFunction(PyObject):$/;"	c
AbstractModule	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class AbstractModule(PyObject):$/;"	c
ActivatePyflakesQuickFixWindow	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    function s:ActivatePyflakesQuickFixWindow()$/;"	f
AddModeExtra	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:AddModeExtra(mode, extra, beg, end) "{{{3$/;"	f
AddingVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class AddingVisitor(ImportInfoVisitor):$/;"	c
AllBuffStr	.\plugin\statusline.vim	/^function! AllBuffStr()$/;"	f
AltFiletype	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:AltFiletype(filetype) "{{{3$/;"	f
Argument	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class Argument(Binding):$/;"	c
ArgumentAdder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class ArgumentAdder(_ArgumentChanger):$/;"	c
ArgumentDefaultInliner	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class ArgumentDefaultInliner(_ArgumentChanger):$/;"	c
ArgumentMapping	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^class ArgumentMapping(object):$/;"	c
ArgumentNormalizer	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class ArgumentNormalizer(_ArgumentChanger):$/;"	c
ArgumentRemover	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class ArgumentRemover(_ArgumentChanger):$/;"	c
ArgumentReorderer	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class ArgumentReorderer(_ArgumentChanger):$/;"	c
Arguments	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^class Arguments(object):$/;"	c
ArrayLinesAdapter	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^class ArrayLinesAdapter(object):$/;"	c
AssignedName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class AssignedName(PyName):$/;"	c
AssignedName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^class AssignedName(pynames.AssignedName):$/;"	c
Assignment	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class Assignment(Binding):$/;"	c
AssignmentValue	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class AssignmentValue(object):$/;"	c
AttributeNotFoundError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class AttributeNotFoundError(RopeError):$/;"	c
AutoImport	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^class AutoImport(object):$/;"	c
BackwardsSnippet	.\bundle\snipmate\plugin\snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BadIdentifierError	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^BadIdentifierError = exceptions.BadIdentifierError$/;"	v
BadIdentifierError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class BadIdentifierError(RopeError):$/;"	c
BadNameInCheckError	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class BadNameInCheckError(exceptions.RefactoringError):$/;"	c
Binding	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class Binding(object):$/;"	c
Blame	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlockGetCommentRx	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:BlockGetCommentRx(cdef)$/;"	f
BlockGetCommentString	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:BlockGetCommentString(cdef)$/;"	f
BlockGetMiddleString	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:BlockGetMiddleString(cdef)$/;"	f
BlockStarter	.\bundle\vim-python-pep8-indent\indent\python.vim	/^function! s:BlockStarter(lnum, block_start_re)$/;"	f
Bookmark.AddBookmark	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.activate(...)$/;"	f
Bookmark.compareTo	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.open(...)$/;"	f
Bookmark.openInNewTab	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Boolean	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^class Boolean(Data):$/;"	c
Browse	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufReadIndex	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufWriteIndexFile	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
BuildTabStops	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
BuiltinClass	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class BuiltinClass(_BuiltinElement, pyobjects.AbstractClass):$/;"	c
BuiltinFunction	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class BuiltinFunction(_BuiltinElement, pyobjects.AbstractFunction):$/;"	c
BuiltinFunction_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def BuiltinFunction_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
BuiltinModule	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class BuiltinModule(pyobjects.AbstractModule):$/;"	c
BuiltinName	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class BuiltinName(pynames.PyName):$/;"	c
BuiltinObject	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class BuiltinObject(BuiltinClass):$/;"	c
BuiltinType	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class BuiltinType(BuiltinClass):$/;"	c
BuiltinUnknown	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class BuiltinUnknown(_BuiltinElement, pyobjects.PyObject):$/;"	c
CLASSDEF	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def CLASSDEF(self, node):$/;"	m	class:Checker
CUR_PRJ	.\vimrc.vim	/^    let CUR_PRJ=$PRJ . "\/" . $PRJ$/;"	v
CachingLogicalLineFinder	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^class CachingLogicalLineFinder(object):$/;"	c
CallInfo	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^class CallInfo(object):$/;"	c
CallInfo	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^class CallInfo(object):$/;"	c
CallsFilter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class CallsFilter(object):$/;"	c
CanSelect	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^        class CanSelect(object):$/;"	c	function:_MoveTools.remove_old_imports
CaptureKeyPresses	.\bundle\supertab\plugin\supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
Change	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class Change(object):$/;"	c
ChangeCollector	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^class ChangeCollector(object):$/;"	c
ChangeContents	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class ChangeContents(Change):$/;"	c
ChangeIndicator	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^class ChangeIndicator(object):$/;"	c
ChangeOccurrences	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^class ChangeOccurrences(object):$/;"	c
ChangeSet	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class ChangeSet(Change):$/;"	c
ChangeSignature	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class ChangeSignature(object):$/;"	c
ChangeSignature	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class ChangeSignature(Refactoring):$/;"	c
ChangeStack	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\changestack.py	/^class ChangeStack(object):$/;"	c
ChangeToData	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class ChangeToData(object):$/;"	c
CheckTests	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^class CheckTests(TestCase):$/;"	c
Checker	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class Checker(object):$/;"	c
ChooseSnippet	.\bundle\snipmate\plugin\snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
CircBuf	.\plugin\statusline.vim	/^function! CircBuf(size, value, inc)$/;"	f
ClassScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class ClassScope(Scope):$/;"	c
ClassScope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^class ClassScope(Scope):$/;"	c
ClearPyflakes	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    function s:ClearPyflakes()$/;"	f
Close	.\bundle\snipmate\ftplugin\html_snip_helper.vim	/^fun! Close()$/;"	f
ClosePreview	.\bundle\supertab\plugin\supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
CodeAssistProposal	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^CodeAssistProposal = CompletionProposal$/;"	v
CodeTemplate	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class CodeTemplate(object):$/;"	c
CommandLineCompletion	.\bundle\supertab\plugin\supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
CommentBlock	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:CommentBlock(beg, end, commentMode, uncomment, checkRx, cdef, indentStr)$/;"	f
CommentDef	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:CommentDef(beg, end, checkRx, commentMode, cstart, cend)$/;"	f
Commit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompletionProposal	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^class CompletionProposal(object):$/;"	c
CompletionReset	.\bundle\supertab\plugin\supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
ConstructFromComments	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:ConstructFromComments(commentMode)$/;"	f
ContextCompletion	.\bundle\supertab\plugin\supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextDiscover	.\bundle\supertab\plugin\supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextText	.\bundle\supertab\plugin\supertab.vim	/^function! s:ContextText() " {{{$/;"	f
Count	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
CreateFile	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class CreateFile(CreateResource):$/;"	c
CreateFolder	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class CreateFolder(CreateResource):$/;"	c
CreateResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class CreateResource(Change):$/;"	c
Creator.BufNamePrefix	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreatePrimary	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.CreatePrimary(name)$/;"	f
Creator.CreateSecondary	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.CreateSecondary(dir)$/;"	f
Creator.New	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.New()$/;"	f
Creator.TogglePrimary	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.TogglePrimary(dir)$/;"	f
Creator._bindMappings	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createTreeWin	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._nextBufferName	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._setCommonBufOptions	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator.createMirror	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createPrimary	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.createPrimary(name)$/;"	f
Creator.createSecondary	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.createSecondary(dir)$/;"	f
Creator.togglePrimary	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^function! s:Creator.togglePrimary(dir)$/;"	f
DICTCOMP	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def DICTCOMP(self, node):$/;"	m	class:Checker
DOITextualToPyObject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^class DOITextualToPyObject(TextualToPyObject):$/;"	c
DROPBOX	.\vimrc.vim	/^    let DROPBOX="~\/Dropbox\/"$/;"	v
DROPBOX	.\vimrc.vim	/^    let DROPBOX=$USERPROFILE . "\/Dropbox\/"$/;"	v
DV	.\vimrc.vim	/^let DV=DROPBOX . "dotfiles\/vim\/"$/;"	v
DarcsCommands	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^class DarcsCommands(object):$/;"	c
Data	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^class Data(object):$/;"	c
DataToChange	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class DataToChange(object):$/;"	c
DefaultValue	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:DefaultValue(option)$/;"	f
DefaultWildcard	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^class DefaultWildcard(object):$/;"	c
DefineSnips	.\bundle\snipmate\plugin\snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
DefinedName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class DefinedName(PyName):$/;"	c
DefinitionInfo	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^class DefinitionInfo(object):$/;"	c
DeleteMatch	.\autoload\ShowTrailingWhitespace.vim	/^function! s:DeleteMatch()$/;"	f
DetectAll	.\autoload\ShowTrailingWhitespace.vim	/^function! s:DetectAll()$/;"	f
Dict	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class Dict(BuiltinClass):$/;"	c
Dict_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def Dict_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
Diff	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Diff(bang,...)$/;"	f
DirComplete	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DoReplacements	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:DoReplacements(text, tokens, replacements) "{{{3$/;"	f
DuplicateArgument	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class DuplicateArgument(Message):$/;"	c
Edit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EmptyImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^class EmptyImport(ImportInfo):$/;"	c
EnableLongestEnhancement	.\bundle\supertab\plugin\supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EncapsulateField	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^class EncapsulateField(object):$/;"	c
EncodeCommentPart	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:EncodeCommentPart(string)$/;"	f
EndColRx	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:EndColRx(pos)$/;"	f
EndLineRx	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:EndLineRx(pos)$/;"	f
EndPosRx	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:EndPosRx(mode, line, col)$/;"	f
Environment	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^class Environment(object):$/;"	c
Error	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^class Error(object):$/;"	c
EvaluatedName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class EvaluatedName(PyName):$/;"	c
ExecuteInTree	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExpandMap	.\bundle\supertab\plugin\supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
ExpandModulePath	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^function s:ExpandModulePath()$/;"	f
ExpandStarsVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class ExpandStarsVisitor(ImportInfoVisitor):$/;"	c
ExportBinding	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class ExportBinding(Binding):$/;"	c
ExpressionMatch	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class ExpressionMatch(Match):$/;"	c
ExtendCDef	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:ExtendCDef(beg, end, commentMode, cdef, args)$/;"	f
ExtractCommentsPart	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:ExtractCommentsPart(key)$/;"	f
ExtractMethod	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class ExtractMethod(_ExtractRefactoring):$/;"	c
ExtractMethod	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class ExtractMethod(_Extract):$/;"	c
ExtractSnips	.\bundle\snipmate\plugin\snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	.\bundle\snipmate\plugin\snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
ExtractVariable	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class ExtractVariable(_ExtractRefactoring):$/;"	c
ExtractVariable	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class ExtractVariable(_Extract):$/;"	c
FOR	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def FOR(self, node):$/;"	m	class:Checker
FUNCTIONDEF	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def FUNCTIONDEF(self, node):$/;"	m	class:Checker
File	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class File(BuiltinClass):$/;"	c
File	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^class File(Resource):$/;"	c
FileDict	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^class FileDict(UserDict.DictMixin):$/;"	c
FileInfo	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^class FileInfo(objectdb.FileInfo):$/;"	c
FileInfo	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^class FileInfo(UserDict.DictMixin):$/;"	c
FileListObserver	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^class FileListObserver(object):$/;"	c
FileRead	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:FileRead()$/;"	f
FileSystemCommands	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^class FileSystemCommands(object):$/;"	c
File_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def File_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
Filename	.\bundle\snipmate\autoload\snipMate.vim	/^fun! Filename(...)$/;"	f
Filetype	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:Filetype(...) "{{{3$/;"	f
FilteredResourceObserver	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^class FilteredResourceObserver(object):$/;"	c
FilteringVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class FilteringVisitor(ImportInfoVisitor):$/;"	c
Findcomplete	.\autoload\pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
Finder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class Finder(object):$/;"	c
FinishCommit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:FinishCommit()$/;"	f
FixModuleNames	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixmodnames.py	/^class FixModuleNames(object):$/;"	c
FixSyntax	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^class FixSyntax(object):$/;"	c
Folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^class Folder(Resource):$/;"	c
FromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^class FromImport(ImportInfo):$/;"	c
FunctionDefinition	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class FunctionDefinition(Binding):$/;"	c
FunctionScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class FunctionScope(Scope):$/;"	c
FunctionScope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^class FunctionScope(Scope):$/;"	c
GF	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GITCommands	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^class GITCommands(object):$/;"	c
GLOBAL	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def GLOBAL(self, node):$/;"	m	class:Checker
GenerateClass	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^class GenerateClass(_Generate):$/;"	c
GenerateClass	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class GenerateClass(_GenerateElement):$/;"	c
GenerateFunction	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^class GenerateFunction(_Generate):$/;"	c
GenerateFunction	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class GenerateFunction(_GenerateElement):$/;"	c
GenerateModule	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^class GenerateModule(_Generate):$/;"	c
GenerateModule	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class GenerateModule(_GenerateElement):$/;"	c
GeneratePackage	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^class GeneratePackage(_Generate):$/;"	c
GeneratePackage	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class GeneratePackage(_GenerateElement):$/;"	c
GenerateVariable	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^class GenerateVariable(_Generate):$/;"	c
GenerateVariable	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class GenerateVariable(_GenerateElement):$/;"	c
Generator	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class Generator(pyobjects.AbstractClass):$/;"	c
Generator_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def Generator_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
GetCommentDefinition	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GetCommentDefinition(beg, end, commentMode, ...)$/;"	f
GetCommentDefinitionForType	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GetCommentDefinitionForType(beg, end, commentMode, filetype) "{{{3$/;"	f
GetCommentReplace	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GetCommentReplace(cdef, cms0)$/;"	f
GetCustomCommentString	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GetCustomCommentString(ft, commentMode, ...)$/;"	f
GetIndentString	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GetIndentString(line, start)$/;"	f
GetPyflakesMessage	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    function s:GetPyflakesMessage()$/;"	f
GetPythonPEPIndent	.\bundle\vim-python-pep8-indent\indent\python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetQuickFixStackCount	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    function s:GetQuickFixStackCount()$/;"	f
GetSnippet	.\bundle\snipmate\plugin\snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	.\bundle\snipmate\plugin\snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetStartEnd	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GetStartEnd(beg, end, commentMode) "{{{3$/;"	f
GetSyntaxName	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GetSyntaxName(lnum, col) "{{{3$/;"	f
GetterSetterRenameInModule	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^class GetterSetterRenameInModule(object):$/;"	c
Git	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
GlobalScope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^class GlobalScope(Scope):$/;"	c
Grep	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GuessCommentMode	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GuessCommentMode(commentMode) "{{{3$/;"	f
GuessCurrentCommentString	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GuessCurrentCommentString(commentMode)$/;"	f
GuessFileType	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:GuessFileType(beg, end, commentMode, filetype, ...)$/;"	f
Helptags	.\autoload\pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
History	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^class History(object):$/;"	c
HistoryError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class HistoryError(RopeError):$/;"	c
IMPORT	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def IMPORT(self, node):$/;"	m	class:Checker
IMPORTFROM	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def IMPORTFROM(self, node):$/;"	m	class:Checker
INFO	.\bundle\ropevim\ftplugin\python\libs\rope\__init__.py	/^INFO = __doc__$/;"	v
INFO	.\bundle\ropevim\ftplugin\python\libs\ropemode\__init__.py	/^INFO = __doc__$/;"	v
ImportContext	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^class ImportContext(object):$/;"	c
ImportInfo	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^class ImportInfo(object):$/;"	c
ImportInfoVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class ImportInfoVisitor(object):$/;"	c
ImportOrganizer	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^class ImportOrganizer(object):$/;"	c
ImportShadowedByLoopVar	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class ImportShadowedByLoopVar(Message):$/;"	c
ImportStarUsed	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class ImportStarUsed(Message):$/;"	c
ImportStatement	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^class ImportStatement(object):$/;"	c
ImportTools	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^class ImportTools(object):$/;"	c
Importation	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class Importation(Binding):$/;"	c
ImportedModule	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class ImportedModule(PyName):$/;"	c
ImportedName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class ImportedName(PyName):$/;"	c
InHierarchyFilter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class InHierarchyFilter(object):$/;"	c
Init	.\bundle\supertab\plugin\supertab.vim	/^function! s:Init() " {{{$/;"	f
InitBuffer	.\bundle\supertab\plugin\supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
Inline	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class Inline(Refactoring):$/;"	c
InlineMethod	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^class InlineMethod(_Inliner):$/;"	c
InlineParameter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^class InlineParameter(_Inliner):$/;"	c
InlineReplacement	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:InlineReplacement(text, rx, tokens, replacements) "{{{3$/;"	f
InlineVariable	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^class InlineVariable(_Inliner):$/;"	c
InterruptedTaskError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class InterruptedTaskError(RopeError):$/;"	c
IntroduceFactory	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^class IntroduceFactory(object):$/;"	c
IntroduceFactory	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class IntroduceFactory(Refactoring):$/;"	c
IntroduceFactoryRefactoring	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^IntroduceFactoryRefactoring = IntroduceFactory$/;"	v
IntroduceParameter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_parameter.py	/^class IntroduceParameter(object):$/;"	c
IsBeingInferredError	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class IsBeingInferredError(exceptions.RopeError):$/;"	c
IsForcedShow	.\autoload\ShowTrailingWhitespace\Filter.vim	/^function! s:IsForcedShow()$/;"	f
IsPersistedBuffer	.\autoload\ShowTrailingWhitespace\Filter.vim	/^function! s:IsPersistedBuffer()$/;"	f
IsPreviewOpen	.\bundle\supertab\plugin\supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
IsScratchBuffer	.\autoload\ShowTrailingWhitespace\Filter.vim	/^function! s:IsScratchBuffer()$/;"	f
Iterator	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class Iterator(pyobjects.AbstractClass):$/;"	c
Iterator_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def Iterator_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
JobSet	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^class JobSet(object):$/;"	c
JumpInit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:JumpInit() abort$/;"	f
KeyMap.Add	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
LAMBDA	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def LAMBDA(self, node):$/;"	m	class:Checker
LISTCOMP	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def LISTCOMP(self, node):$/;"	m	class:Checker
Lambda	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class Lambda(pyobjects.AbstractFunction):$/;"	c
LateFutureImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class LateFutureImport(Message):$/;"	c
LinesToReadline	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^class LinesToReadline(object):$/;"	c
List	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class List(BuiltinClass):$/;"	c
List_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def List_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
LocalToField	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\localtofield.py	/^class LocalToField(object):$/;"	c
Location	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^class Location(object):$/;"	c
Location	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^class Location(object):$/;"	c
Log	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
Logger	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^class Logger(object):$/;"	c
LogicalLineFinder	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^class LogicalLineFinder(object):$/;"	c
LongImportVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class LongImportVisitor(ImportInfoVisitor):$/;"	c
MakeSnip	.\bundle\snipmate\plugin\snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
ManualCompletionEnter	.\bundle\supertab\plugin\supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
Match	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class Match(object):$/;"	c
MemoryDB	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^class MemoryDB(objectdb.FileDict):$/;"	c
MenuController.New	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
MercurialCommands	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^class MercurialCommands(object):$/;"	c
Message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class Message(object):$/;"	c
MethodObject	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\method_object.py	/^class MethodObject(object):$/;"	c
MethodObject	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class MethodObject(Refactoring):$/;"	c
MismatchedTokenError	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^class MismatchedTokenError(exceptions.RopeError):$/;"	c
MixedArguments	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^class MixedArguments(object):$/;"	c
ModuleDecodeError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class ModuleDecodeError(RopeError):$/;"	c
ModuleImports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^class ModuleImports(object):$/;"	c
ModuleNotFoundError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class ModuleNotFoundError(RopeError):$/;"	c
ModuleScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class ModuleScope(Scope):$/;"	c
ModuleSkipRenamer	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^class ModuleSkipRenamer(object):$/;"	c
ModuleSkipRenamerHandle	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^class ModuleSkipRenamerHandle(object):$/;"	c
ModuleSyntaxError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class ModuleSyntaxError(RopeError):$/;"	c
ModuleToPackage	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\topackage.py	/^class ModuleToPackage(object):$/;"	c
ModuleToPackage	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class ModuleToPackage(Refactoring):$/;"	c
Move	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class Move(Refactoring):$/;"	c
Move	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Move(force,destination)$/;"	f
MoveComplete	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MoveCurrentModule	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class MoveCurrentModule(Move):$/;"	c
MoveGlobal	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^class MoveGlobal(object):$/;"	c
MoveMethod	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^class MoveMethod(object):$/;"	c
MoveModule	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^class MoveModule(object):$/;"	c
MoveResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class MoveResource(Change):$/;"	c
MultiProjectRefactoring	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^class MultiProjectRefactoring(object):$/;"	c
MyStatusline	.\plugin\statusline.vim	/^function! MyStatusline()$/;"	f
NAME	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def NAME(self, node):$/;"	m	class:Checker
NERDTree	.\bundle\nerdtree\plugin\NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	.\bundle\nerdtree\plugin\NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeAddKeyMap	.\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	.\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	.\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	.\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	.\bundle\nerdtree\plugin\NERD_tree.vim	/^command! -n=0 -bar NERDTreeCWD call NERDTreeCWD()$/;"	c
NERDTreeCWD	.\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeClose	.\bundle\nerdtree\plugin\NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call nerdtree#closeTreeIfOpen()$/;"	c
NERDTreeCopyNode	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	.\bundle\nerdtree\nerdtree_plugin\exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	.\bundle\nerdtree\nerdtree_plugin\exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	.\bundle\nerdtree\plugin\NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call nerdtree#findAndRevealPath()$/;"	c
NERDTreeFocus	.\bundle\nerdtree\plugin\NERD_tree.vim	/^command! -n=0 -bar NERDTreeFocus call NERDTreeFocus()$/;"	c
NERDTreeFocus	.\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeFromBookmark	.\bundle\nerdtree\plugin\NERD_tree.vim	/^command! -n=1 -complete=customlist,nerdtree#completeBookmarks -bar NERDTreeFromBookmark call g:NERDTreeCreator.CreatePrimary('<args>')$/;"	c
NERDTreeHijackNetrw	.\bundle\nerdtree\plugin\NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	.\bundle\nerdtree\plugin\NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call g:NERDTreeCreator.CreateMirror()$/;"	c
NERDTreeMoveNode	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	.\bundle\nerdtree\plugin\NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeToggle	.\bundle\nerdtree\plugin\NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call g:NERDTreeCreator.TogglePrimary('<args>')$/;"	c
NameNotFoundError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class NameNotFoundError(RopeError):$/;"	c
NameTests	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^class NameTests(TestCase):$/;"	c
NamedParamProposal	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^class NamedParamProposal(CompletionProposal):$/;"	c
NoImportsFilter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class NoImportsFilter(object):$/;"	c
NoProject	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^class NoProject(_Project):$/;"	c
NodeTransformer	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^class NodeTransformer(NodeVisitor):$/;"	c
NodeVisitor	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^class NodeVisitor(object):$/;"	c
NormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^class NormalImport(ImportInfo):$/;"	c
NullJobSet	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^class NullJobSet(object):$/;"	c
NullTaskHandle	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^class NullTaskHandle(object):$/;"	c
Number	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    Number = object()$/;"	v	class:_PatchingASTWalker
ObjectArguments	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^class ObjectArguments(object):$/;"	c
ObjectDB	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^class ObjectDB(object):$/;"	c
ObjectInfoManager	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^class ObjectInfoManager(object):$/;"	c
Occurrence	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class Occurrence(object):$/;"	c
Opener.New	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._checkToCloseTree	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._gotoTargetWin	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._newSplit	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^function! s:Opener.open(target)$/;"	f
OrganizeImports	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class OrganizeImports(Refactoring):$/;"	c
PY_ENV	.\ftplugin\python.vim	/^    let PY_ENV="" "XXX: Fix me on Mac\/Linux$/;"	v
PY_ENV	.\ftplugin\python.vim	/^    let PY_ENV=$VIRTUAL_ENV$/;"	v
ParameterName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class ParameterName(PyName):$/;"	c
ParameterName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^class ParameterName(pynames.ParameterName):$/;"	c
ParseArgs	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:ParseArgs(beg, end, commentMode, arglist) "{{{3$/;"	f
Path.AbsolutePathFor	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._ignorePatternMatches	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	.\bundle\nerdtree\lib\nerdtree\path.vim	/^function! s:Path.tabnr()$/;"	f
Pep8	.\bundle\pep8\plugin\pep8.vim	/^function! <SID>Pep8()$/;"	f
PerformMappings	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^function s:PerformMappings()$/;"	f
Prefs	.\bundle\ropevim\ftplugin\python\libs\rope\base\prefs.py	/^class Prefs(object):$/;"	c
ProcessFile	.\bundle\snipmate\plugin\snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessLine	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:ProcessLine(uncomment, match, checkRx, replace)$/;"	f
ProcessSnippet	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
Project	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^class Project(_Project):$/;"	c
Property	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class Property(BuiltinClass):$/;"	c
PyClass	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class PyClass(PyDefinedObject, AbstractClass):$/;"	c
PyClass	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class PyClass(pyobjects.PyClass):$/;"	c
PyClass_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def PyClass_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
PyCore	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^class PyCore(object):$/;"	c
PyDefinedObject	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class PyDefinedObject(object):$/;"	c
PyDocExtractor	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^class PyDocExtractor(object):$/;"	c
PyFunction	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class PyFunction(PyDefinedObject, AbstractFunction):$/;"	c
PyFunction	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class PyFunction(pyobjects.PyFunction):$/;"	c
PyFunction_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def PyFunction_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
PyModule	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class PyModule(_PyModule):$/;"	c
PyModule	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class PyModule(pyobjects.PyModule):$/;"	c
PyModule_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def PyModule_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
PyName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class PyName(object):$/;"	c
PyNameFilter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class PyNameFilter(object):$/;"	c
PyObject	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class PyObject(object):$/;"	c
PyObjectToTextual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^class PyObjectToTextual(object):$/;"	c
PyObject_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def PyObject_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
PyPackage	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class PyPackage(_PyModule):$/;"	c
PyPackage	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class PyPackage(pyobjects.PyPackage):$/;"	c
PyPackage_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def PyPackage_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
Pydoc	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^command -nargs=1 Pydoc       :call s:ShowPyDoc('<args>', 1)$/;"	c
PydocSearch	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^command -nargs=* PydocSearch :call s:ShowPyDoc('<args>', 0)$/;"	c
PyflakesUpdate	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    function s:PyflakesUpdate()$/;"	f
PyflakesUpdate	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^  command PyflakesUpdate :call s:PyflakesUpdate()$/;"	c
Python25Test	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^class Python25Test(harness.Test):$/;"	c
Python26Tests	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^class Python26Tests(harness.Test):$/;"	c
Python27Test	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^class Python27Test(harness.Test):$/;"	c
PythonFileRunner	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^class PythonFileRunner(object):$/;"	c
RawSimilarFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class RawSimilarFinder(object):$/;"	c
RedefinedFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class RedefinedFunction(Message):$/;"	c
RedefinedWhileUnused	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class RedefinedWhileUnused(Message):$/;"	c
Refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class Refactoring(object):$/;"	c
RefactoringError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class RefactoringError(RopeError):$/;"	c
RelativeToAbsoluteVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class RelativeToAbsoluteVisitor(ImportInfoVisitor):$/;"	c
ReleaseKeyPresses	.\bundle\supertab\plugin\supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
ReloadAllSnippets	.\bundle\snipmate\plugin\snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	.\bundle\snipmate\plugin\snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
Remove	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Remove(force)$/;"	f
RemovePyNameVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class RemovePyNameVisitor(ImportInfoVisitor):$/;"	c
RemoveResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class RemoveResource(Change):$/;"	c
RemoveSnippet	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RemovingVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class RemovingVisitor(ImportInfoVisitor):$/;"	c
Rename	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^class Rename(object):$/;"	c
Rename	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class Rename(Refactoring):$/;"	c
RenameCurrentModule	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class RenameCurrentModule(Rename):$/;"	c
RepeatCommentstring	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:RepeatCommentstring(cdef) "{{{3$/;"	f
ReplaceCmd	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceInLine	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:ReplaceInLine(text) "{{{3$/;"	f
ResetAllSnippets	.\bundle\snipmate\plugin\snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetSnippets	.\bundle\snipmate\plugin\snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
Resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^class Resource(object):$/;"	c
ResourceNotFoundError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class ResourceNotFoundError(RopeError):$/;"	c
ResourceObserver	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^class ResourceObserver(object):$/;"	c
Restructure	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^class Restructure(object):$/;"	c
Restructure	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class Restructure(Refactoring):$/;"	c
RopeError	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^class RopeError(Exception):$/;"	c
RopeMode	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^class RopeMode(object):$/;"	c
RunPyflakes	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    function s:RunPyflakes()$/;"	f
RunTask	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class RunTask(object):$/;"	c
SID	.\bundle\nerdtree\autoload\nerdtree.vim	/^function s:SID()$/;"	f
SOAVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^class SOAVisitor(object):$/;"	c
Scope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class Scope(dict):$/;"	c
Scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^class Scope(object):$/;"	c
ScopeInfo	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^class ScopeInfo(objectdb.ScopeInfo):$/;"	c
ScopeInfo	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^class ScopeInfo(object):$/;"	c
ScopeNameFinder	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^class ScopeNameFinder(object):$/;"	c
SearchParensPair	.\bundle\vim-python-pep8-indent\indent\python.vim	/^function! s:SearchParensPair()$/;"	f
SelectCompletion	.\bundle\supertab\plugin\supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectWord	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:SelectWord()$/;"	f
SelfImportVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class SelfImportVisitor(ImportInfoVisitor):$/;"	c
Set	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class Set(BuiltinClass):$/;"	c
SetCompletionType	.\bundle\supertab\plugin\supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetDefaultCompletionType	.\bundle\supertab\plugin\supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetWhitespaceMode	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:SetWhitespaceMode(cdef) "{{{3$/;"	f
Set_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def Set_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
ShowAvailableSnips	.\bundle\snipmate\plugin\snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowPyDoc	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^function s:ShowPyDoc(name, type)$/;"	f
ShowTrailingWhitespace	.\plugin\ShowTrailingWhitespace.vim	/^augroup ShowTrailingWhitespace$/;"	a
ShowTrailingWhitespace#Detect	.\autoload\ShowTrailingWhitespace.vim	/^function! ShowTrailingWhitespace#Detect( isInsertMode )$/;"	f
ShowTrailingWhitespace#Filter#Default	.\autoload\ShowTrailingWhitespace\Filter.vim	/^function! ShowTrailingWhitespace#Filter#Default()$/;"	f
ShowTrailingWhitespace#IsSet	.\autoload\ShowTrailingWhitespace.vim	/^function! ShowTrailingWhitespace#IsSet()$/;"	f
ShowTrailingWhitespace#NotFiltered	.\autoload\ShowTrailingWhitespace.vim	/^function! ShowTrailingWhitespace#NotFiltered()$/;"	f
ShowTrailingWhitespace#Pattern	.\autoload\ShowTrailingWhitespace.vim	/^function! ShowTrailingWhitespace#Pattern( isInsertMode )$/;"	f
ShowTrailingWhitespace#Reset	.\autoload\ShowTrailingWhitespace.vim	/^function! ShowTrailingWhitespace#Reset()$/;"	f
ShowTrailingWhitespace#Set	.\autoload\ShowTrailingWhitespace.vim	/^function! ShowTrailingWhitespace#Set( isTurnOn, isGlobal )$/;"	f
ShowTrailingWhitespace#SetLocalExtraPattern	.\autoload\ShowTrailingWhitespace.vim	/^function! ShowTrailingWhitespace#SetLocalExtraPattern( pattern )$/;"	f
ShowTrailingWhitespace#Toggle	.\autoload\ShowTrailingWhitespace.vim	/^function! ShowTrailingWhitespace#Toggle( isGlobal )$/;"	f
SimilarFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class SimilarFinder(object):$/;"	c
SortingVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^class SortingVisitor(ImportInfoVisitor):$/;"	c
SourceLinesAdapter	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^class SourceLinesAdapter(object):$/;"	c
StageDiff	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageNext(count)$/;"	f
StagePatch	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StagePrevious(count)$/;"	f
StageReloadSeek	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StarImport	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class StarImport(object):$/;"	c
StartColRx	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:StartColRx(pos)$/;"	f
StartLineRx	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:StartLineRx(pos)$/;"	f
StartPosRx	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:StartPosRx(mode, line, col)$/;"	f
StatementEvaluator	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^class StatementEvaluator(object):$/;"	c
StatementMatch	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class StatementMatch(Match):$/;"	c
StatementStart	.\bundle\vim-python-pep8-indent\indent\python.vim	/^function! s:StatementStart(lnum)$/;"	f
Status	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Status() abort$/;"	f
Str	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class Str(BuiltinClass):$/;"	c
Str_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def Str_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
String	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    String = object()$/;"	v	class:_PatchingASTWalker
SubversionCommands	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^class SubversionCommands(object):$/;"	c
Suite	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^class Suite(object):$/;"	c
SuperTab	.\bundle\supertab\plugin\supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTabAlternateCompletion	.\bundle\supertab\plugin\supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabChain	.\bundle\supertab\plugin\supertab.vim	/^function! SuperTabChain(completefunc, completekeys) " {{{$/;"	f
SuperTabCodeComplete	.\bundle\supertab\plugin\supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabHelp	.\bundle\supertab\plugin\supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	.\bundle\supertab\plugin\supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabLongestHighlight	.\bundle\supertab\plugin\supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabSetCompletionType	.\bundle\supertab\plugin\supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	.\bundle\supertab\plugin\supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
Suspect	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^class Suspect(object):$/;"	c
TComment	.\bundle\tcomment_vim\plugin\tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TComment$/;"	c
TCommentAs	.\bundle\tcomment_vim\plugin\tcomment.vim	/^command! -bang -complete=customlist,tcomment#Complete -range -nargs=+ TCommentAs $/;"	c
TCommentBlock	.\bundle\tcomment_vim\plugin\tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentBlock$/;"	c
TCommentInline	.\bundle\tcomment_vim\plugin\tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentInline$/;"	c
TCommentMaybeInline	.\bundle\tcomment_vim\plugin\tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentMaybeInline$/;"	c
TCommentRight	.\bundle\tcomment_vim\plugin\tcomment.vim	/^command! -bang -range -nargs=* -complete=customlist,tcomment#CompleteArgs TCommentRight$/;"	c
TagList_IsValid	.\plugin\taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	.\plugin\taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	.\plugin\taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	.\plugin\taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TaskHandle	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^class TaskHandle(object):$/;"	c
Template	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^class Template(object):$/;"	c
TemplateProposal	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^class TemplateProposal(CodeAssistProposal):$/;"	c
TemporaryScope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^class TemporaryScope(Scope):$/;"	c
Test	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\harness.py	/^class Test(unittest.TestCase):$/;"	c
Test	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^class Test(harness.Test):$/;"	c
Test	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^class Test(harness.Test):$/;"	c
Test	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^class Test(harness.Test):$/;"	c
TestSpecialAll	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^class TestSpecialAll(harness.Test):$/;"	c
TestSuperTabCodeComplete	.\bundle\supertab\plugin\supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
TestUnusedAssignment	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^class TestUnusedAssignment(harness.Test):$/;"	c
TextualToPyObject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^class TextualToPyObject(object):$/;"	c
TextualValidation	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^class TextualValidation(object):$/;"	c
Tlist	.\plugin\taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	.\plugin\taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	.\plugin\taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	.\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	.\plugin\taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	.\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	.\plugin\taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	.\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	.\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	.\plugin\taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	.\plugin\taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	.\plugin\taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	.\plugin\taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	.\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	.\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	.\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	.\plugin\taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	.\plugin\taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	.\plugin\taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	.\plugin\taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	.\plugin\taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	.\plugin\taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	.\plugin\taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	.\plugin\taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	.\plugin\taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	.\plugin\taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	.\plugin\taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	.\plugin\taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_	.\plugin\taglist.vim	/^            let Tlist_Ctags_ Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	.\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	.\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	.\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	.\plugin\taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	.\plugin\taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	.\plugin\taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	.\plugin\taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Discard_FileInfo	.\plugin\taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	.\plugin\taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	.\plugin\taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	.\plugin\taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	.\plugin\taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	.\plugin\taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	.\plugin\taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	.\plugin\taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	.\plugin\taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	.\plugin\taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	.\plugin\taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	.\plugin\taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	.\plugin\taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	.\plugin\taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	.\plugin\taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Filetype	.\plugin\taglist.vim	/^function! s:Tlist_Get_Filetype(fname)$/;"	f
Tlist_Get_Tag_Linenum	.\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	.\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	.\plugin\taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	.\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	.\plugin\taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	.\plugin\taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	.\plugin\taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	.\plugin\taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	.\plugin\taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	.\plugin\taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	.\plugin\taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	.\plugin\taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	.\plugin\taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	.\plugin\taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	.\plugin\taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	.\plugin\taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	.\plugin\taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	.\plugin\taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	.\plugin\taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	.\plugin\taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	.\plugin\taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	.\plugin\taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	.\plugin\taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	.\plugin\taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	.\plugin\taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	.\plugin\taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	.\plugin\taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	.\plugin\taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Remove_File	.\plugin\taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	.\plugin\taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	.\plugin\taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	.\plugin\taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	.\plugin\taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	.\plugin\taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	.\plugin\taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	.\plugin\taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	.\plugin\taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	.\plugin\taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	.\plugin\taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	.\plugin\taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	.\plugin\taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	.\plugin\taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	.\plugin\taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	.\plugin\taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	.\plugin\taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	.\plugin\taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	.\plugin\taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	.\plugin\taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	.\plugin\taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	.\plugin\taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	.\plugin\taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	.\plugin\taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	.\plugin\taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	.\plugin\taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	.\plugin\taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	.\plugin\taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	.\plugin\taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	.\plugin\taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	.\plugin\taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	.\plugin\taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	.\plugin\taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	.\plugin\taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	.\plugin\taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	.\plugin\taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	.\plugin\taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	.\plugin\taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	.\plugin\taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	.\plugin\taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	.\plugin\taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	.\plugin\taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	.\plugin\taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	.\plugin\taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	.\plugin\taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	.\plugin\taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	.\plugin\taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
TreeDirNode.AbsoluteTreeRoot	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	.\bundle\snipmate\plugin\snipMate.vim	/^fun! TriggerSnippet()$/;"	f
Tuple	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class Tuple(BuiltinClass):$/;"	c
Tuple_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def Tuple_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
UnBinding	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^class UnBinding(Binding):$/;"	c
UnboundName	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class UnboundName(PyName):$/;"	c
UndefinedExport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class UndefinedExport(Message):$/;"	c
UndefinedLocal	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class UndefinedLocal(Message):$/;"	c
UndefinedName	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class UndefinedName(Message):$/;"	c
UnreplaceInLine	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! s:UnreplaceInLine(text) "{{{3$/;"	f
UnsureFilter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class UnsureFilter(object):$/;"	c
UnusedImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class UnusedImport(Message):$/;"	c
UnusedVariable	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^class UnusedVariable(Message):$/;"	c
UpdateChangedSnip	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdateMatch	.\autoload\ShowTrailingWhitespace.vim	/^function! s:UpdateMatch( isInsertMode )$/;"	f
UpdatePlaceholderTabStops	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateTags	.\ftplugin\python.vim	/^function! UpdateTags()$/;"	f
UpdateVars	.\bundle\snipmate\autoload\snipMate.vim	/^fun s:UpdateVars()$/;"	f
UseFunction	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^class UseFunction(object):$/;"	c
UseFunction	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class UseFunction(Refactoring):$/;"	c
VERSION	.\bundle\ropevim\ftplugin\python\libs\rope\__init__.py	/^VERSION = '0.9.3'$/;"	v
VERSION	.\bundle\ropevim\ftplugin\python\libs\ropemode\__init__.py	/^VERSION = '0.1-rc2'$/;"	v
Ve	.\autoload\pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	.\autoload\pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
VimProgress	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^class VimProgress(object):$/;"	c
VimUtils	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^class VimUtils(ropemode.environment.Environment):$/;"	c
Vopen	.\autoload\pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	.\autoload\pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	.\autoload\pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	.\autoload\pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	.\autoload\pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	.\autoload\pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
WIDTH	.\vimrc.vim	/^let WIDTH=4$/;"	v
WideMsg	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    function s:WideMsg(msg)$/;"	f
Wildcard	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^class Wildcard(object):$/;"	c
WillComplete	.\bundle\supertab\plugin\supertab.vim	/^function! s:WillComplete() " {{{$/;"	f
Worder	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^class Worder(object):$/;"	c
Wq	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
_ASTMatcher	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class _ASTMatcher(object):$/;"	c
_ArgumentChanger	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class _ArgumentChanger(object):$/;"	c
_Assert	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Assert(self, node):$/;"	m	class:_PatchingASTWalker
_Assign	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def _Assign(self, node):$/;"	m	class:SOAVisitor
_Assign	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Assign(self, node):$/;"	m	class:_AssignVisitor
_Assign	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Assign(self, node):$/;"	m	class:_ScopeVisitor
_Assign	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _Assign(self, node):$/;"	m	class:_FunctionInformationCollector
_Assign	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Assign(self, node):$/;"	m	class:_PatchingASTWalker
_AssignVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class _AssignVisitor(object):$/;"	c
_Attribute	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^    def _Attribute(self, node):$/;"	m	class:_NodeNameCollector
_Attribute	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Attribute(self, node):$/;"	m	class:StatementEvaluator
_Attribute	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Attribute(self, node):$/;"	m	class:_AssignVisitor
_Attribute	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Attribute(self, node):$/;"	m	class:_ClassInitVisitor
_Attribute	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^    def _Attribute(self, node):$/;"	m	class:_BadAccessFinder
_Attribute	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _Attribute(self, node):$/;"	m	class:_UnboundNameFinder
_Attribute	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Attribute(self, node):$/;"	m	class:_PatchingASTWalker
_AttributeCollector	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class _AttributeCollector(object):$/;"	c
_AugAssign	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _AugAssign(self, node):$/;"	m	class:_ScopeVisitor
_AugAssign	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _AugAssign(self, node):$/;"	m	class:_PatchingASTWalker
_BadAccessFinder	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^class _BadAccessFinder(object):$/;"	c
_BinOp	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _BinOp(self, node):$/;"	m	class:StatementEvaluator
_BinOp	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _BinOp(self, node):$/;"	m	class:_PatchingASTWalker
_BoolOp	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _BoolOp(self, node):$/;"	m	class:StatementEvaluator
_BoolOp	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _BoolOp(self, node):$/;"	m	class:_PatchingASTWalker
_Break	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _Break(self, node):$/;"	m	class:_UnmatchedBreakOrContinueFinder
_Break	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Break(self, node):$/;"	m	class:_PatchingASTWalker
_BuiltinElement	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class _BuiltinElement(object):$/;"	c
_BuiltinsStub	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^            class _BuiltinsStub(object):$/;"	c	function:Restructure._evaluate
_BuiltinsStub	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^            class _BuiltinsStub(object):$/;"	c	function:_CheckObject._evaluate
_Cached	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^class _Cached(object):$/;"	c
_Call	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Call(self, node):$/;"	m	class:StatementEvaluator
_Call	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def _Call(self, node):$/;"	m	class:SOAVisitor
_Call	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Call(self, node):$/;"	m	class:_PatchingASTWalker
_CallContext	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^class _CallContext(object):$/;"	c
_ChangeCallsInModule	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class _ChangeCallsInModule(object):$/;"	c
_ChangeComputer	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^class _ChangeComputer(object):$/;"	c
_ChangeMoveOccurrencesHandle	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^class _ChangeMoveOccurrencesHandle(object):$/;"	c
_Changes	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^class _Changes(object):$/;"	c
_CheckObject	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^class _CheckObject(object):$/;"	c
_Class	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _Class(self, node):$/;"	m	class:_VariableReadsAndWritesFinder
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def _ClassDef(self, node):$/;"	m	class:SOAVisitor
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _ClassDef(self, node):$/;"	m	class:_ClassInitVisitor
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _ClassDef(self, node):$/;"	m	class:_ScopeVisitor
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _ClassDef(self, node):$/;"	m	class:_FunctionInformationCollector
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _ClassDef(self, node):$/;"	m	class:_UnmatchedBreakOrContinueFinder
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _ClassDef(self, node):$/;"	m	class:_UnboundNameFinder
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _ClassDef(self, node):$/;"	m	class:_PatchingASTWalker
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _ClassDef(self, node):$/;"	m	class:_SuiteWalker
_ClassDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _ClassDef(self, node):$/;"	m	class:_ReturnOrYieldFinder
_ClassInitVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class _ClassInitVisitor(_AssignVisitor):$/;"	c
_ClassVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class _ClassVisitor(_ScopeVisitor):$/;"	c
_CodeAssist	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^class _CodeAssist(object):$/;"	c
_Commenter	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^class _Commenter(object):$/;"	c
_Compare	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Compare(self, node):$/;"	m	class:StatementEvaluator
_Compare	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Compare(self, node):$/;"	m	class:_PatchingASTWalker
_ConcludedData	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class _ConcludedData(object):$/;"	c
_Continue	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _Continue(self, node):$/;"	m	class:_UnmatchedBreakOrContinueFinder
_Continue	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Continue(self, node):$/;"	m	class:_PatchingASTWalker
_CustomGenerator	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^class _CustomGenerator(object):$/;"	c
_DataFiles	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^class _DataFiles(object):$/;"	c
_DefinitionGenerator	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^class _DefinitionGenerator(object):$/;"	c
_DefinitionLocationFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _DefinitionLocationFinder(object):$/;"	c
_Delete	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Delete(self, node):$/;"	m	class:_PatchingASTWalker
_Dict	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Dict(self, node):$/;"	m	class:StatementEvaluator
_Dict	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Dict(self, node):$/;"	m	class:_PatchingASTWalker
_Ellipsis	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Ellipsis(self, node):$/;"	m	class:_PatchingASTWalker
_ExceptHandler	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _ExceptHandler(self, node):$/;"	m	class:_ScopeVisitor
_ExceptHandler	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _ExceptHandler(self, node):$/;"	m	class:_PatchingASTWalker
_ExceptionalConditionChecker	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _ExceptionalConditionChecker(object):$/;"	c
_Exec	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Exec(self, node):$/;"	m	class:_PatchingASTWalker
_Expr	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Expr(self, node):$/;"	m	class:_PatchingASTWalker
_ExtSlice	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _ExtSlice(self, node):$/;"	m	class:_PatchingASTWalker
_ExtensionCache	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^class _ExtensionCache(object):$/;"	c
_Extract	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class _Extract(Refactoring):$/;"	c
_ExtractCollector	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _ExtractCollector(object):$/;"	c
_ExtractInfo	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _ExtractInfo(object):$/;"	c
_ExtractMethodParts	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _ExtractMethodParts(object):$/;"	c
_ExtractPerformer	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _ExtractPerformer(object):$/;"	c
_ExtractRefactoring	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _ExtractRefactoring(object):$/;"	c
_ExtractVariableParts	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _ExtractVariableParts(object):$/;"	c
_FIFOReceiver	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^class _FIFOReceiver(_MessageReceiver):$/;"	c
_FileListCacher	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^class _FileListCacher(object):$/;"	c
_FileListObserver	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^class _FileListObserver(object):$/;"	c
_FileSender	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^    class _FileSender(_MessageSender):$/;"	c	function:__rope_start_everything
_FindChangeDependencies	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^class _FindChangeDependencies(object):$/;"	c
_FindChangesForModule	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^class _FindChangesForModule(object):$/;"	c
_For	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _For(self, node):$/;"	m	class:_ClassInitVisitor
_For	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _For(self, node):$/;"	m	class:_ScopeVisitor
_For	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _For(self, node):$/;"	m	class:_FunctionInformationCollector
_For	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _For(self, node):$/;"	m	class:_UnmatchedBreakOrContinueFinder
_For	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _For(self, node):$/;"	m	class:_PatchingASTWalker
_For	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _For(self, node):$/;"	m	class:_SuiteWalker
_FunctionCallDataSender	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^    class _FunctionCallDataSender(object):$/;"	c	function:__rope_start_everything
_FunctionChangers	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class _FunctionChangers(object):$/;"	c
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def _FunctionDef(self, node):$/;"	m	class:SOAVisitor
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _FunctionDef(self, node):$/;"	m	class:_ClassInitVisitor
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _FunctionDef(self, node):$/;"	m	class:_ClassVisitor
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _FunctionDef(self, node):$/;"	m	class:_ScopeVisitor
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _FunctionDef(self, node):$/;"	m	class:_FunctionInformationCollector
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _FunctionDef(self, node):$/;"	m	class:_UnmatchedBreakOrContinueFinder
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _FunctionDef(self, node):$/;"	m	class:_VariableReadsAndWritesFinder
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _FunctionDef(self, node):$/;"	m	class:_UnboundNameFinder
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _FunctionDef(self, node):$/;"	m	class:_PatchingASTWalker
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _FunctionDef(self, node):$/;"	m	class:_SuiteWalker
_FunctionDef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _FunctionDef(self, node):$/;"	m	class:_ReturnOrYieldFinder
_FunctionGenerationInfo	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^class _FunctionGenerationInfo(_GenerationInfo):$/;"	c
_FunctionInformationCollector	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _FunctionInformationCollector(object):$/;"	c
_FunctionParser	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^class _FunctionParser(object):$/;"	c
_FunctionVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class _FunctionVisitor(_ScopeVisitor):$/;"	c
_Generate	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^class _Generate(object):$/;"	c
_GenerateElement	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^class _GenerateElement(Refactoring):$/;"	c
_GenerationInfo	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^class _GenerationInfo(object):$/;"	c
_GeneratorExp	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _GeneratorExp(self, node):$/;"	m	class:StatementEvaluator
_GeneratorExp	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _GeneratorExp(self, node):$/;"	m	class:_PatchingASTWalker
_Global	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Global(self, node):$/;"	m	class:_ScopeVisitor
_Global	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Global(self, node):$/;"	m	class:_PatchingASTWalker
_GlobalImportFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^class _GlobalImportFinder(object):$/;"	c
_GlobalUnboundNameFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^class _GlobalUnboundNameFinder(_UnboundNameFinder):$/;"	c
_GlobalVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class _GlobalVisitor(_ScopeVisitor):$/;"	c
_HoldingScopeFinder	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^class _HoldingScopeFinder(object):$/;"	c
_If	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _If(self, node):$/;"	m	class:_FunctionInformationCollector
_If	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _If(self, node):$/;"	m	class:_PatchingASTWalker
_If	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _If(self, node):$/;"	m	class:_SuiteWalker
_IfExp	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _IfExp(self, node):$/;"	m	class:_PatchingASTWalker
_Import	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Import(self, node):$/;"	m	class:_ScopeVisitor
_Import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Import(self, node):$/;"	m	class:_PatchingASTWalker
_ImportFrom	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _ImportFrom(self, node):$/;"	m	class:_ScopeVisitor
_ImportFrom	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _ImportFrom(self, node):$/;"	m	class:_PatchingASTWalker
_Index	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Index(self, node):$/;"	m	class:_PatchingASTWalker
_Inferred	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^class _Inferred(object):$/;"	c
_Inferred	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^_Inferred = pynames._Inferred$/;"	v
_InlineFunctionCallsForModuleHandle	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^class _InlineFunctionCallsForModuleHandle(object):$/;"	c
_Inliner	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^class _Inliner(object):$/;"	c
_Lambda	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Lambda(self, node):$/;"	m	class:StatementEvaluator
_Lambda	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Lambda(self, node):$/;"	m	class:_PatchingASTWalker
_List	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _List(self, node):$/;"	m	class:StatementEvaluator
_List	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _List(self, node):$/;"	m	class:_PatchingASTWalker
_ListComp	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _ListComp(self, node):$/;"	m	class:StatementEvaluator
_ListComp	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _ListComp(self, node):$/;"	m	class:_PatchingASTWalker
_LocalUnboundNameFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^class _LocalUnboundNameFinder(_UnboundNameFinder):$/;"	c
_MAGIC_GLOBALS	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^_MAGIC_GLOBALS = ['__file__', '__builtins__']$/;"	v
_MessageReceiver	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^class _MessageReceiver(object):$/;"	c
_MessageSender	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^    class _MessageSender(object):$/;"	c	function:__rope_start_everything
_Module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Module(self, node):$/;"	m	class:_PatchingASTWalker
_ModuleCache	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^class _ModuleCache(object):$/;"	c
_MoveTools	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^class _MoveTools(object):$/;"	c
_MultiRefactoring	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^class _MultiRefactoring(object):$/;"	c
_MultipleFinders	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^class _MultipleFinders(object):$/;"	c
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^    def _Name(self, node):$/;"	m	class:_NodeNameCollector
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Name(self, node):$/;"	m	class:StatementEvaluator
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Name(self, node):$/;"	m	class:_AssignVisitor
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Name(self, node):$/;"	m	class:_ClassInitVisitor
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^    def _Name(self, node):$/;"	m	class:_BadAccessFinder
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _Name(self, node):$/;"	m	class:_FunctionInformationCollector
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _Name(self, node):$/;"	m	class:_VariableReadsAndWritesFinder
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _Name(self, node):$/;"	m	class:_UnboundNameFinder
_Name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Name(self, node):$/;"	m	class:_PatchingASTWalker
_NodeNameCollector	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^class _NodeNameCollector(object):$/;"	c
_NullScopeInfo	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^class _NullScopeInfo(object):$/;"	c
_Num	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Num(self, node):$/;"	m	class:StatementEvaluator
_Num	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Num(self, node):$/;"	m	class:_PatchingASTWalker
_OccurrenceToolsCreator	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class _OccurrenceToolsCreator(object):$/;"	c
_OneTimeSelector	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^class _OneTimeSelector(object):$/;"	c
_Pass	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Pass(self, node):$/;"	m	class:_PatchingASTWalker
_PatchingASTWalker	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^class _PatchingASTWalker(object):$/;"	c
_Print	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Print(self, node):$/;"	m	class:_PatchingASTWalker
_Project	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^class _Project(object):$/;"	c
_ProposalSorter	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^class _ProposalSorter(object):$/;"	c
_PyModule	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^class _PyModule(PyDefinedObject, AbstractModule):$/;"	c
_PythonCodeAssist	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^class _PythonCodeAssist(object):$/;"	c
_Raise	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Raise(self, node):$/;"	m	class:_PatchingASTWalker
_RealFinder	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^class _RealFinder(object):$/;"	c
_Repr	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Repr(self, node):$/;"	m	class:StatementEvaluator
_Repr	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Repr(self, node):$/;"	m	class:_PatchingASTWalker
_ResourceMatcher	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^class _ResourceMatcher(object):$/;"	c
_ResourceOperations	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^class _ResourceOperations(object):$/;"	c
_Return	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Return(self, node):$/;"	m	class:_FunctionVisitor
_Return	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Return(self, node):$/;"	m	class:_PatchingASTWalker
_Return	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _Return(self, node):$/;"	m	class:_ReturnOrYieldFinder
_ReturnOrYieldFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^class _ReturnOrYieldFinder(object):$/;"	c
_RopeVariable	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^class _RopeVariable(object):$/;"	c
_SOAAssignVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^class _SOAAssignVisitor(astutils._NodeNameCollector):$/;"	c
_ScopeVisitor	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^class _ScopeVisitor(object):$/;"	c
_Slice	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^    def _Slice(self, node):$/;"	m	class:_NodeNameCollector
_Slice	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Slice(self, node):$/;"	m	class:_AssignVisitor
_Slice	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Slice(self, node):$/;"	m	class:_PatchingASTWalker
_Sliceobj	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Sliceobj(self, node):$/;"	m	class:_PatchingASTWalker
_SocketReceiver	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^class _SocketReceiver(_MessageReceiver):$/;"	c
_SocketSender	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^    class _SocketSender(_MessageSender):$/;"	c	function:__rope_start_everything
_Source	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^class _Source(object):$/;"	c
_Str	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Str(self, node):$/;"	m	class:StatementEvaluator
_Str	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Str(self, node):$/;"	m	class:_PatchingASTWalker
_Subscript	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^    def _Subscript(self, node):$/;"	m	class:_NodeNameCollector
_Subscript	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Subscript(self, node):$/;"	m	class:StatementEvaluator
_Subscript	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Subscript(self, node):$/;"	m	class:_AssignVisitor
_Subscript	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Subscript(self, node):$/;"	m	class:_PatchingASTWalker
_SuiteWalker	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^class _SuiteWalker(object):$/;"	c
_TextChangeDetector	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^class _TextChangeDetector(object):$/;"	c
_TextualFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^class _TextualFinder(object):$/;"	c
_TryExcept	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _TryExcept(self, node):$/;"	m	class:_PatchingASTWalker
_TryExcept	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _TryExcept(self, node):$/;"	m	class:_SuiteWalker
_TryFinally	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _TryFinally(self, node):$/;"	m	class:_PatchingASTWalker
_TryFinally	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _TryFinally(self, node):$/;"	m	class:_SuiteWalker
_Tuple	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^    def _Tuple(self, node):$/;"	m	class:_NodeNameCollector
_Tuple	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _Tuple(self, node):$/;"	m	class:StatementEvaluator
_Tuple	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Tuple(self, node):$/;"	m	class:_AssignVisitor
_Tuple	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Tuple(self, node):$/;"	m	class:_ClassInitVisitor
_Tuple	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Tuple(self, node):$/;"	m	class:_PatchingASTWalker
_UnaryOp	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _UnaryOp(self, node):$/;"	m	class:StatementEvaluator
_UnaryOp	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _UnaryOp(self, node):$/;"	m	class:_PatchingASTWalker
_UnboundNameFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^class _UnboundNameFinder(object):$/;"	c
_UnmatchedBreakOrContinueFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _UnmatchedBreakOrContinueFinder(object):$/;"	c
_ValueCompleter	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^class _ValueCompleter(object):$/;"	c
_VariableReadsAndWritesFinder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^class _VariableReadsAndWritesFinder(object):$/;"	c
_While	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _While(self, node):$/;"	m	class:_FunctionInformationCollector
_While	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _While(self, node):$/;"	m	class:_UnmatchedBreakOrContinueFinder
_While	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _While(self, node):$/;"	m	class:_PatchingASTWalker
_While	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _While(self, node):$/;"	m	class:_SuiteWalker
_With	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _With(self, node):$/;"	m	class:_ClassInitVisitor
_With	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _With(self, node):$/;"	m	class:_ScopeVisitor
_With	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _With(self, node):$/;"	m	class:_PatchingASTWalker
_With	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _With(self, node):$/;"	m	class:_SuiteWalker
_Yield	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _Yield(self, node):$/;"	m	class:_FunctionVisitor
_Yield	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _Yield(self, node):$/;"	m	class:_PatchingASTWalker
_Yield	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _Yield(self, node):$/;"	m	class:_ReturnOrYieldFinder
__all__	.\bundle\ropevim\ftplugin\python\libs\rope\base\__init__.py	/^__all__ = ['project', 'libutils', 'exceptions']$/;"	v
__all__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\__init__.py	/^__all__ = ['rename', 'move', 'inline', 'extract', 'restructure', 'topackage',$/;"	v
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __call__(self, name, returned=None, function=None,$/;"	m	class:_AttributeCollector	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __call__(self, change):$/;"	m	class:ChangeToData	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __call__(self, data):$/;"	m	class:DataToChange	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __call__(self):$/;"	m	class:LinesToReadline	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __call__(self):$/;"	m	class:_CustomGenerator	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def __call__(self):$/;"	m	class:_FindChangeDependencies	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def __call__(self, pyobject):$/;"	m	class:PyObjectToTextual	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def __call__(self, textual):$/;"	m	class:TextualToPyObject	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^    def __call__(self, *args, **kwds):$/;"	m	class:_Cached	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __call__(self):$/;"	m	class:_PythonCodeAssist	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __call__(self, info):$/;"	m	class:_ExceptionalConditionChecker	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def __call__(self, imported_primary):$/;"	m	class:_OneTimeSelector	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^            def __call__(self, name):$/;"	m	class:_MoveTools.remove_old_imports.CanSelect	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def __call__(self, project, *args, **kwds):$/;"	m	class:MultiProjectRefactoring	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __call__(self, occurrence):$/;"	m	class:CallsFilter	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __call__(self, occurrence):$/;"	m	class:InHierarchyFilter	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __call__(self, occurrence):$/;"	m	class:NoImportsFilter	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __call__(self, occurrence):$/;"	m	class:PyNameFilter	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __call__(self, occurrence):$/;"	m	class:UnsureFilter	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def __call__(self, node):$/;"	m	class:_PatchingASTWalker	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def __call__(self, pymodule, node):$/;"	m	class:_CheckObject	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    def __call__(self, message, short=None):$/;"	m	class:Logger	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def __call__(self):$/;"	m	class:RunTask	file:
__call__	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def __call__(self, arg_lead, cmd_line, cursor_pos):$/;"	m	class:_ValueCompleter	file:
__check_stmt_list	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def __check_stmt_list(self, nodes):$/;"	m	class:_ASTMatcher	file:
__contains__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __contains__(self, key):$/;"	m	class:FileInfo	file:
__contains__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __contains__(self, key):$/;"	m	class:MemoryDB	file:
__contains__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __contains__(self, key):$/;"	m	class:PyObject	file:
__contains__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def __contains__(self, key):$/;"	m	class:Scope	file:
__contains__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^                def __contains__(self, name):$/;"	m	class:_CheckObject._evaluate._BuiltinsStub	file:
__delitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __delitem__(self, file):$/;"	m	class:MemoryDB	file:
__delitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __delitem__(self, key):$/;"	m	class:FileInfo	file:
__eq__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __eq__(self, obj):$/;"	m	class:PyObject	file:
__eq__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def __eq__(self, obj):$/;"	m	class:Resource	file:
__eq__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def __eq__(self, obj):$/;"	m	class:ImportInfo	file:
__getattr__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def __getattr__(self, name):$/;"	m	class:_MultiRefactoring	file:
__getitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __getitem__(self, key):$/;"	m	class:FileInfo	file:
__getitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __getitem__(self, key):$/;"	m	class:MemoryDB	file:
__getitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\prefs.py	/^    def __getitem__(self, key):$/;"	m	class:Prefs	file:
__getitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __getitem__(self, key):$/;"	m	class:PyObject	file:
__getitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def __getitem__(self, key):$/;"	m	class:Scope	file:
__getitem__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def __getitem__(self, index):$/;"	m	class:_Source	file:
__getitem__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^                def __getitem__(self, name):$/;"	m	class:_CheckObject._evaluate._BuiltinsStub	file:
__getslice__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def __getslice__(self, i, j):$/;"	m	class:_Source	file:
__getstate__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __getstate__(self):$/;"	m	class:ScopeInfo	file:
__hash__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __hash__(self):$/;"	m	class:PyObject	file:
__hash__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def __hash__(self):$/;"	m	class:Resource	file:
__hash__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def __hash__(self):$/;"	m	class:ImportInfo	file:
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def __init__(self):$/;"	m	class:FunctionScope
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def __init__(self):$/;"	m	class:Scope
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def __init__(self, name, source):$/;"	m	class:Binding
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def __init__(self, name, source):$/;"	m	class:Importation
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def __init__(self, tree, filename='(none)'):$/;"	m	class:Checker
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, modname):$/;"	m	class:ImportStarUsed
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, name):$/;"	m	class:DuplicateArgument
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, name):$/;"	m	class:UndefinedExport
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, name):$/;"	m	class:UndefinedName
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, name):$/;"	m	class:UnusedImport
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, name, orig_loc):$/;"	m	class:ImportShadowedByLoopVar
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, name, orig_loc):$/;"	m	class:RedefinedFunction
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, name, orig_loc):$/;"	m	class:RedefinedWhileUnused
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, name, orig_loc):$/;"	m	class:UndefinedLocal
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, names):$/;"	m	class:LateFutureImport
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, names):$/;"	m	class:UnusedVariable
__init__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __init__(self, filename, loc, use_column=True):$/;"	m	class:Message
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def __init__(self, args, scope):$/;"	m	class:Arguments
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def __init__(self, pyname, arguments, scope):$/;"	m	class:MixedArguments
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def __init__(self, pynames):$/;"	m	class:ObjectArguments
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^    def __init__(self, levels=None):$/;"	m	class:_NodeNameCollector
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self):$/;"	m	class:BuiltinObject
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self):$/;"	m	class:BuiltinType
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self):$/;"	m	class:File
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self):$/;"	m	class:Str
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, *objects):$/;"	m	class:Tuple
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, argnames, args):$/;"	m	class:_CallContext
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, builtin):$/;"	m	class:BuiltinUnknown
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, builtin, attributes, parent=None):$/;"	m	class:BuiltinClass
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, builtin, parent=None):$/;"	m	class:_BuiltinElement
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, fget=None, fset=None, fdel=None, fdoc=None):$/;"	m	class:Property
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, holding=None):$/;"	m	class:Generator
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, holding=None):$/;"	m	class:Iterator
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, holding=None):$/;"	m	class:List
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, holding=None):$/;"	m	class:Set
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, keys=None, values=None):$/;"	m	class:Dict
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, name, pycore=None, initial={}):$/;"	m	class:BuiltinModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, node, scope):$/;"	m	class:Lambda
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, pyobject):$/;"	m	class:BuiltinName
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, returned=None, function=None, builtin=None,$/;"	m	class:BuiltinFunction
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __init__(self, type):$/;"	m	class:_AttributeCollector
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, description, timestamp=None):$/;"	m	class:ChangeSet
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, parent, name):$/;"	m	class:CreateFile
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, parent, name):$/;"	m	class:CreateFolder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, project):$/;"	m	class:DataToChange
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, project):$/;"	m	class:_ResourceOperations
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, resource):$/;"	m	class:CreateResource
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, resource):$/;"	m	class:RemoveResource
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, resource, new_contents, old_contents=None):$/;"	m	class:ChangeContents
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __init__(self, resource, new_location, exact=False):$/;"	m	class:MoveResource
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __init__(self, lines):$/;"	m	class:ArrayLinesAdapter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __init__(self, lines):$/;"	m	class:LogicalLineFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __init__(self, lines):$/;"	m	class:_CustomGenerator
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __init__(self, lines, generate=custom_generator):$/;"	m	class:CachingLogicalLineFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __init__(self, lines, start):$/;"	m	class:LinesToReadline
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __init__(self, source_code):$/;"	m	class:SourceLinesAdapter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def __init__(self, text):$/;"	m	class:ChangeCollector
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def __init__(self, pymodule):$/;"	m	class:ScopeNameFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def __init__(self, scope):$/;"	m	class:StatementEvaluator
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^    def __init__(self, filename, lineno, message):$/;"	m	class:ModuleSyntaxError
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\exceptions.py	/^    def __init__(self, filename, message):$/;"	m	class:ModuleDecodeError
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def __init__(self, *args):$/;"	m	class:SubversionCommands
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def __init__(self, root):$/;"	m	class:DarcsCommands
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def __init__(self, root):$/;"	m	class:GITCommands
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def __init__(self, root):$/;"	m	class:MercurialCommands
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def __init__(self, change_list):$/;"	m	class:_FindChangeDependencies
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def __init__(self, project, maxundos=None):$/;"	m	class:History
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def __init__(self):$/;"	m	class:_FIFOReceiver
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def __init__(self):$/;"	m	class:_SocketReceiver
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def __init__(self, pycore, file_, args=None, stdin=None,$/;"	m	class:PythonFileRunner
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __init__(self):$/;"	m	class:ScopeInfo
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __init__(self, project, persist=None):$/;"	m	class:MemoryDB
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __init__(self, scopes):$/;"	m	class:FileInfo
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def __init__(self, args, returned):$/;"	m	class:CallInfo
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def __init__(self, db, validation):$/;"	m	class:ObjectDB
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def __init__(self, error_on_write=True):$/;"	m	class:_NullScopeInfo
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def __init__(self, object_info):$/;"	m	class:_FileListObserver
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def __init__(self, project):$/;"	m	class:ObjectInfoManager
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def __init__(self, to_pyobject):$/;"	m	class:TextualValidation
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def __init__(self, file_name):$/;"	m	class:__rope_start_everything._FileSender
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def __init__(self, port):$/;"	m	class:__rope_start_everything._SocketSender
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def __init__(self, send_info, project_root):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def __init__(self):$/;"	m	class:_SOAAssignVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def __init__(self, pycore, pydefined, follow_callback=None):$/;"	m	class:SOAVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def __init__(self, project):$/;"	m	class:PyObjectToTextual
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def __init__(self, project, allow_in_project_absolutes=False):$/;"	m	class:TextualToPyObject
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\prefs.py	/^    def __init__(self):$/;"	m	class:Prefs
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def __init__(self):$/;"	m	class:NoProject
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def __init__(self, fscommands):$/;"	m	class:_Project
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def __init__(self, project):$/;"	m	class:_DataFiles
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def __init__(self, project):$/;"	m	class:_FileListCacher
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def __init__(self, projectroot, fscommands=None,$/;"	m	class:Project
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def __init__(self, old, new):$/;"	m	class:_TextChangeDetector
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def __init__(self, project):$/;"	m	class:PyCore
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def __init__(self, pycore):$/;"	m	class:_ExtensionCache
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def __init__(self, pycore):$/;"	m	class:_ModuleCache
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def __init__(self, ast_node, levels=None, evaluation='',$/;"	m	class:AssignmentValue
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def __init__(self, callback, module=None, lineno=None):$/;"	m	class:EvaluatedName
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def __init__(self, get_inferred, concluded=None):$/;"	m	class:_Inferred
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def __init__(self, imported_module, imported_name):$/;"	m	class:ImportedName
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def __init__(self, importing_module, module_name=None,$/;"	m	class:ImportedModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def __init__(self, pyobject):$/;"	m	class:DefinedName
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def __init__(self, pyobject=None):$/;"	m	class:UnboundName
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def __init__(self, lineno=None, module=None, pyobject=None):$/;"	m	class:AssignedName
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def __init__(self, pyfunction, index):$/;"	m	class:ParameterName
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __init__(self):$/;"	m	class:AbstractClass
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __init__(self):$/;"	m	class:AbstractFunction
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __init__(self):$/;"	m	class:_ConcludedData
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __init__(self, doc=None):$/;"	m	class:AbstractModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __init__(self, pycore, ast_node, parent):$/;"	m	class:PyDefinedObject
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __init__(self, pycore, ast_node, resource):$/;"	m	class:_PyModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __init__(self, type_):$/;"	m	class:PyObject
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, imported_module):$/;"	m	class:StarImport
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, pycore, ast_node, parent):$/;"	m	class:PyClass
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, pycore, ast_node, parent):$/;"	m	class:PyFunction
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, pycore, owner_object):$/;"	m	class:_ClassVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, pycore, owner_object):$/;"	m	class:_FunctionVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, pycore, owner_object):$/;"	m	class:_GlobalVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, pycore, owner_object):$/;"	m	class:_ScopeVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, pycore, resource=None, force_errors=False):$/;"	m	class:PyPackage
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, pycore, source=None,$/;"	m	class:PyModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, scope_visitor):$/;"	m	class:_AssignVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def __init__(self, scope_visitor, self_name):$/;"	m	class:_ClassInitVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def __init__(self, pycore, module):$/;"	m	class:GlobalScope
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def __init__(self, pycore, parent_scope, names):$/;"	m	class:TemporaryScope
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def __init__(self, pycore, pyobject):$/;"	m	class:ClassScope
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def __init__(self, pycore, pyobject, parent_scope):$/;"	m	class:Scope
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def __init__(self, pycore, pyobject, visitor):$/;"	m	class:FunctionScope
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def __init__(self, pymodule):$/;"	m	class:_HoldingScopeFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def __init__(self):$/;"	m	class:_Changes
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def __init__(self, changed=None, moved=None, created=None,$/;"	m	class:ResourceObserver
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def __init__(self, resource_observer, initial_resources=None,$/;"	m	class:FilteredResourceObserver
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def __init__(self):$/;"	m	class:_ResourceMatcher
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def __init__(self, project, name):$/;"	m	class:File
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def __init__(self, project, name):$/;"	m	class:Folder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def __init__(self, project, path):$/;"	m	class:Resource
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def __init__(self):$/;"	m	class:NullTaskHandle
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def __init__(self, handle, name, count):$/;"	m	class:JobSet
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def __init__(self, name='Task', interrupts=True):$/;"	m	class:TaskHandle
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^    def __init__(self, func, count):$/;"	m	class:_Cached
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def __init__(self, code, handle_ignores=False):$/;"	m	class:Worder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def __init__(self, code, raw):$/;"	m	class:_RealFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def __init__(self, project, observe=True, underlined=False):$/;"	m	class:AutoImport
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\changestack.py	/^    def __init__(self, project, description='merged changes'):$/;"	m	class:ChangeStack
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __init__(self, code_assist_proposals, scopepref=None, typepref=None):$/;"	m	class:_ProposalSorter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __init__(self, name, function):$/;"	m	class:NamedParamProposal
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __init__(self, name, scope, pyname=None):$/;"	m	class:CompletionProposal
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __init__(self, name, template):$/;"	m	class:TemplateProposal
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __init__(self, project, source_code, offset, resource=None,$/;"	m	class:_PythonCodeAssist
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __init__(self, template):$/;"	m	class:Template
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^    def __init__(self, lineno, error):$/;"	m	class:Error
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^    def __init__(self, pymodule):$/;"	m	class:_BadAccessFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^    def __init__(self, occurrence):$/;"	m	class:Location
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixmodnames.py	/^    def __init__(self, project):$/;"	m	class:FixModuleNames
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def __init__(self, code):$/;"	m	class:_Commenter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def __init__(self, pycore, code, resource, maxfixes=1):$/;"	m	class:FixSyntax
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:_Generate
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def __init__(self, pycore, resource, offset):$/;"	m	class:_GenerationInfo
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def __init__(self, finders):$/;"	m	class:_MultipleFinders
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def __init__(self, index):$/;"	m	class:ArgumentDefaultInliner
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def __init__(self, index):$/;"	m	class:ArgumentRemover
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def __init__(self, index, name, default=None, value=None):$/;"	m	class:ArgumentAdder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def __init__(self, new_order, autodef=None):$/;"	m	class:ArgumentReorderer
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:ChangeSignature
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def __init__(self, pycore, occurrence_finder, resource, call_changer):$/;"	m	class:_ChangeCallsInModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def __init__(self, pyfunction, definition_info, changers=None):$/;"	m	class:_FunctionChangers
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def __init__(self, finder, resource, pymodule, skip_start, skip_end):$/;"	m	class:_FindChangesForModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:EncapsulateField
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def __init__(self, pycore, name, pyname, getter, setter):$/;"	m	class:GetterSetterRenameInModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self):$/;"	m	class:_UnmatchedBreakOrContinueFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self):$/;"	m	class:_VariableReadsAndWritesFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:ExtractMethod
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:ExtractVariable
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, info):$/;"	m	class:_ExtractCollector
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, info):$/;"	m	class:_ExtractMethodParts
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, info):$/;"	m	class:_ExtractPerformer
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, info):$/;"	m	class:_ExtractVariableParts
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, info, matched_lines):$/;"	m	class:_DefinitionLocationFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, project, resource, start, end, new_name,$/;"	m	class:_ExtractInfo
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, project, resource, start_offset, end_offset,$/;"	m	class:_ExtractRefactoring
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def __init__(self, start, end, is_global):$/;"	m	class:_FunctionInformationCollector
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def __init__(self, call, implicit_arg, is_lambda=False):$/;"	m	class:_FunctionParser
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def __init__(self, definition_info, call_info):$/;"	m	class:ArgumentMapping
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def __init__(self, function_name, args, keywords, args_arg,$/;"	m	class:CallInfo
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def __init__(self, function_name, is_method, args_with_defaults,$/;"	m	class:DefinitionInfo
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def __init__(self, project):$/;"	m	class:ImportOrganizer
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def __init__(self, pycore):$/;"	m	class:ImportTools
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, current_folder, pycore, maxdots, maxlength):$/;"	m	class:LongImportVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, pycore, current_folder):$/;"	m	class:RelativeToAbsoluteVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, pycore, current_folder):$/;"	m	class:SortingVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, pycore, current_folder, resource):$/;"	m	class:SelfImportVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, pycore, folder, can_select):$/;"	m	class:ExpandStarsVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, pycore, folder, can_select):$/;"	m	class:FilteringVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, pycore, folder, can_select):$/;"	m	class:RemovingVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, pycore, import_list):$/;"	m	class:AddingVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def __init__(self, pycore, pymodule, pyname, folder):$/;"	m	class:RemovePyNameVisitor
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def __init__(self, import_info, start_line, end_line,$/;"	m	class:ImportStatement
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def __init__(self, module_name, level, names_and_aliases):$/;"	m	class:FromImport
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def __init__(self, names_and_aliases):$/;"	m	class:NormalImport
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def __init__(self, pycore, folder):$/;"	m	class:ImportContext
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def __init__(self, names):$/;"	m	class:_OneTimeSelector
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def __init__(self, pycore, pymodule, import_filter=None):$/;"	m	class:ModuleImports
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def __init__(self, pymodule, pycore):$/;"	m	class:_GlobalImportFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def __init__(self, pymodule, wanted_pyobject):$/;"	m	class:_GlobalUnboundNameFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def __init__(self, pyobject):$/;"	m	class:_UnboundNameFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def __init__(self, pyobject, parent):$/;"	m	class:_LocalUnboundNameFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:InlineMethod
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:InlineParameter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def __init__(self, *args, **kwds):$/;"	m	class:InlineVariable
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def __init__(self, project, pyfunction, body=None):$/;"	m	class:_DefinitionGenerator
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:_Inliner
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def __init__(self, pycore, resource,$/;"	m	class:_InlineFunctionCallsForModuleHandle
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:IntroduceFactory
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_parameter.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:IntroduceParameter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\localtofield.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:LocalToField
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\method_object.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:MethodObject
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def __init__(self, new_name):$/;"	m	class:_ChangeMoveOccurrencesHandle
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def __init__(self, occurrence_finder, resource, handle=None,$/;"	m	class:ModuleSkipRenamer
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def __init__(self, project, resource):$/;"	m	class:MoveModule
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:MoveGlobal
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:MoveMethod
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def __init__(self, pycore, source, pyname, old_name):$/;"	m	class:_MoveTools
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def __init__(self, refactoring, other_projects, addpath,$/;"	m	class:_MultiRefactoring
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def __init__(self, refactoring, projects, addpath=True):$/;"	m	class:MultiProjectRefactoring
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __init__(self, name, docs=False):$/;"	m	class:_TextualFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __init__(self, pycore, name, filters=[lambda o: True], docs=False):$/;"	m	class:Finder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __init__(self, pycore, resource=None, pymodule=None, docs=False):$/;"	m	class:_OccurrenceToolsCreator
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __init__(self, pyname):$/;"	m	class:PyNameFilter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __init__(self, pyname, implementations_only=False):$/;"	m	class:InHierarchyFilter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __init__(self, tools, offset):$/;"	m	class:Occurrence
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def __init__(self, unsure):$/;"	m	class:UnsureFilter
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def __init__(self, source):$/;"	m	class:_Source
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def __init__(self, source, children=False):$/;"	m	class:_PatchingASTWalker
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:ChangeOccurrences
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def __init__(self, project, resource, offset=None):$/;"	m	class:Rename
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def __init__(self, code, ast, lines, goal, matches):$/;"	m	class:_ChangeComputer
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def __init__(self, project, pattern, goal, args=None,$/;"	m	class:Restructure
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def __init__(self, ast, mapping):$/;"	m	class:ExpressionMatch
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def __init__(self, ast_list, mapping):$/;"	m	class:StatementMatch
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def __init__(self, body, pattern, does_match):$/;"	m	class:_ASTMatcher
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def __init__(self, mapping):$/;"	m	class:Match
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def __init__(self, pymodule, wildcards=None):$/;"	m	class:SimilarFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def __init__(self, source, node=None, does_match=None):$/;"	m	class:RawSimilarFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def __init__(self, template):$/;"	m	class:CodeTemplate
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def __init__(self, child_nodes, lineno, parent=None, ignored=False):$/;"	m	class:Suite
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def __init__(self, suite):$/;"	m	class:_SuiteWalker
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\topackage.py	/^    def __init__(self, project, resource):$/;"	m	class:ModuleToPackage
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def __init__(self):$/;"	m	class:_ReturnOrYieldFinder
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def __init__(self, project, resource, offset):$/;"	m	class:UseFunction
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def __init__(self, project):$/;"	m	class:DefaultWildcard
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def __init__(self, project, expected, kind='object', unsure=False):$/;"	m	class:_CheckObject
__init__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def __init__(self, pymodule, node, name):$/;"	m	class:Suspect
__init__	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^    def __init__(self, prompt=None, default=False):$/;"	m	class:Boolean
__init__	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^    def __init__(self, prompt=None, default=None, values=None,$/;"	m	class:Data
__init__	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def __init__(self, env):$/;"	m	class:RopeMode
__init__	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def __init__(self, interface, env):$/;"	m	class:_CodeAssist
__init__	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def __init__(self, location):$/;"	m	class:Location
__init__	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def __init__(self, env, task, name, interrupts=True):$/;"	m	class:RunTask
__init__	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def __init__(self, interface, env):$/;"	m	class:Refactoring
__init__	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def __init__(self):$/;"	m	class:_ValueCompleter
__init__	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def __init__(self, name):$/;"	m	class:VimProgress
__iter__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __iter__(self):$/;"	m	class:PyObject	file:
__ne__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __ne__(self, obj):$/;"	m	class:PyObject	file:
__ne__	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def __ne__(self, obj):$/;"	m	class:Resource	file:
__ne__	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def __ne__(self, obj):$/;"	m	class:ImportInfo	file:
__repr__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def __repr__(self):$/;"	m	class:Binding	file:
__repr__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def __repr__(self):$/;"	m	class:Scope	file:
__repr__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __repr__(self):$/;"	m	class:CompletionProposal	file:
__rope_start_everything	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^def __rope_start_everything():$/;"	f	file:
__setitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def __setitem__(self, name, value):$/;"	m	class:_AttributeCollector	file:
__setitem__	.\bundle\ropevim\ftplugin\python\libs\rope\base\prefs.py	/^    def __setitem__(self, key, value):$/;"	m	class:Prefs	file:
__setstate__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def __setstate__(self, data):$/;"	m	class:ScopeInfo	file:
__str__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def __str__(self):$/;"	m	class:Binding	file:
__str__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    def __str__(self):$/;"	m	class:Message	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __str__(self):$/;"	m	class:ChangeContents	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __str__(self):$/;"	m	class:ChangeSet	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __str__(self):$/;"	m	class:CreateResource	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __str__(self):$/;"	m	class:MoveResource	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def __str__(self):$/;"	m	class:RemoveResource	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def __str__(self):$/;"	m	class:History	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def __str__(self):$/;"	m	class:ObjectDB	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def __str__(self):$/;"	m	class:ObjectInfoManager	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def __str__(self):$/;"	m	class:PyCore	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def __str__(self):$/;"	m	class:_ModuleCache	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def __str__(self):$/;"	m	class:_ConcludedData	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def __str__(self):$/;"	m	class:CompletionProposal	file:
__str__	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^    def __str__(self):$/;"	m	class:Error	file:
__version__	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\__init__.py	/^__version__ = '0.4.0'$/;"	v
_add_args_to_children	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _add_args_to_children(self, children, arg, default):$/;"	m	class:_PatchingASTWalker
_add_command	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _add_command(self, name, callback, key, prefix, prekey):$/;"	m	class:VimUtils
_add_error	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^    def _add_error(self, node, msg):$/;"	m	class:_BadAccessFinder
_add_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _add_files(self, folder):$/;"	m	class:_FileListCacher
_add_function	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _add_function(self, name, callback, prefix=False):$/;"	m	class:VimUtils
_add_if_like_node	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _add_if_like_node(self, node):$/;"	m	class:_SuiteWalker
_add_import_to_module	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^def _add_import_to_module(pycore, resource, imported):$/;"	f
_add_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def _add_imports(pycore, source, resource, imports):$/;"	f
_add_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _add_imports(self, resource, source, imports):$/;"	m	class:Restructure
_add_imports2	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _add_imports2(self, pymodule, new_imports):$/;"	m	class:MoveGlobal
_add_imports_to_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^def _add_imports_to_module(import_tools, pymodule, new_imports):$/;"	f
_add_menu	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^def _add_menu(env):$/;"	f
_add_names	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def _add_names(self, pymodule, modname, underlined):$/;"	m	class:AutoImport
_add_node	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^    def _add_node(self, node):$/;"	m	class:_NodeNameCollector
_add_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def _add_pattern(self, pattern):$/;"	m	class:_ResourceMatcher
_add_tuple_parameter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _add_tuple_parameter(self, children, arg):$/;"	m	class:_PatchingASTWalker
_added	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^    def _added(self, node, levels):$/;"	m	class:_NodeNameCollector
_added	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def _added(self, node, levels):$/;"	m	class:_SOAAssignVisitor
_alias	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _alias(self, node):$/;"	m	class:_PatchingASTWalker
_analyze_line	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def _analyze_line(self, line):$/;"	m	class:_CustomGenerator
_analyze_modules	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def _analyze_modules(handle):$/;"	f	function:RopeMode.analyze_modules
_analyze_node	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^def _analyze_node(pycore, pydefined, should_analyze,$/;"	f
_any_prefix	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    _any_prefix = '__rope__variable_any_'$/;"	v	class:_RopeVariable
_apply_assist	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _apply_assist(self, assist):$/;"	m	class:_CodeAssist
_are_name_and_alias_lists_equal	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def _are_name_and_alias_lists_equal(self, list1, list2):$/;"	m	class:ImportInfo
_args_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def _args_to_textual(self, pyfunction, args):$/;"	m	class:ObjectInfoManager
_args_with_self	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def _args_with_self(self, primary, self_pyname, pyfunction, node):$/;"	m	class:SOAVisitor
_arguments	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _arguments(self, node):$/;"	m	class:_PatchingASTWalker
_ask_file	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _ask_file(self, files):$/;"	m	class:RopeMode
_askdata	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _askdata(self, data, starting=None):$/;"	m	class:RopeMode
_assigned	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _assigned(self, name, assignment):$/;"	m	class:_ScopeVisitor
_assigned	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _assigned(self, name, assignment=None):$/;"	m	class:_AssignVisitor
_assigned_lineno	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def _assigned_lineno(pymodule, pyname):$/;"	f
_auto_indent	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _auto_indent(self, offset, text):$/;"	m	class:_ChangeComputer
_base_definition_location	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _base_definition_location(self):$/;"	m	class:RopeMode
_base_find_file	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _base_find_file(self, prefix):$/;"	m	class:RopeMode
_base_findit	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _base_findit(self, do_find, optionals, get_kwds):$/;"	m	class:RopeMode
_base_get_doc	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _base_get_doc(self, get_doc):$/;"	m	class:RopeMode
_base_show_doc	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _base_show_doc(self, prefix, get_doc):$/;"	m	class:RopeMode
_basic_changes	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\changestack.py	/^    def _basic_changes(self, changes):$/;"	m	class:ChangeStack
_block_logical_line	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def _block_logical_line(self, block_start, line_number):$/;"	m	class:LogicalLineFinder
_block_start_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^_block_start_pattern = None$/;"	v
_builtin_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _builtin_module(self, name):$/;"	m	class:PyCore
_builtin_submodules	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _builtin_submodules(self, modname):$/;"	m	class:PyCore
_cached	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^    def _cached(func):$/;"	f	function:__rope_start_everything
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _calculate_changes(self, dest, resources, task_handle):$/;"	m	class:MoveGlobal
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _calculate_changes(self, dest, resources, task_handle):$/;"	m	class:MoveModule
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, option_values, task_handle):$/;"	m	class:Refactoring
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:ChangeSignature
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:Inline
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:IntroduceFactory
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:MethodObject
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:ModuleToPackage
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:Move
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:OrganizeImports
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:Rename
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:Restructure
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:UseFunction
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:_Extract
_calculate_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _calculate_changes(self, values, task_handle):$/;"	m	class:_GenerateElement
_calculate_definition	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _calculate_definition(self, primary, pyname, call, host_vars, returns):$/;"	m	class:_DefinitionGenerator
_calculate_header	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _calculate_header(self, primary, pyname, call):$/;"	m	class:_DefinitionGenerator
_calculate_logical	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def _calculate_logical(self, readline, line_number):$/;"	m	class:LogicalLineFinder
_calculate_new_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _calculate_new_resource(self, main, new_main, resource):$/;"	m	class:FilteredResourceObserver
_calculate_prefix	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _calculate_prefix(self, proposals):$/;"	m	class:_CodeAssist
_calculate_proposals	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _calculate_proposals(self):$/;"	m	class:_CodeAssist
_call	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def _call(self, pyfunction, args):$/;"	m	class:SOAVisitor
_call_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _call_function(self, node, function_name, other_args=None):$/;"	m	class:StatementEvaluator
_can_compress	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _can_compress(self):$/;"	m	class:_DataFiles
_can_name_be_added	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _can_name_be_added(self, imported_primary):$/;"	m	class:_OneTimeSelector
_change_calls	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def _change_calls(self, call_changer, in_hierarchy=None, resources=None,$/;"	m	class:ChangeSignature
_change_function_occurances	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_parameter.py	/^    def _change_function_occurances(self, collector, function_start,$/;"	m	class:IntroduceParameter
_change_holding_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def _change_holding_module(self, changes, renamer, getter, setter):$/;"	m	class:EncapsulateField
_change_main_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _change_main_module(self, remove, only_current):$/;"	m	class:InlineVariable
_change_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _change_module(self, resource, remove, only_current):$/;"	m	class:InlineVariable
_change_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def _change_module(self, resources, changes,$/;"	m	class:IntroduceFactory
_change_moving_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _change_moving_module(self, changes, dest):$/;"	m	class:MoveModule
_change_occurrences_in_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _change_occurrences_in_module(self, dest, pymodule=None,$/;"	m	class:MoveModule
_change_project_resource	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def _change_project_resource(self, project, obj):$/;"	m	class:_MultiRefactoring
_change_resource	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def _change_resource(self, changes, factory_name, global_):$/;"	m	class:IntroduceFactory
_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _changed(self, resource):$/;"	m	class:_FileListCacher
_changed	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def _changed(self, resource):$/;"	m	class:AutoImport
_check_autoimport	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _check_autoimport(self):$/;"	m	class:RopeMode
_check_exact	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _check_exact(self, args, suspect):$/;"	m	class:DefaultWildcard
_check_exceptional_conditions	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _check_exceptional_conditions(self):$/;"	m	class:_Generate
_check_exceptional_conditions	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _check_exceptional_conditions(self):$/;"	m	class:InlineVariable
_check_exceptional_conditions	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _check_exceptional_conditions(self):$/;"	m	class:MoveGlobal
_check_expression	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _check_expression(self, node):$/;"	m	class:_ASTMatcher
_check_imported_resource	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def _check_imported_resource(self, import_stmt, resource, imported_name):$/;"	m	class:SortingVisitor
_check_node	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _check_node(self, node):$/;"	m	class:_ASTMatcher
_check_nothing_after_return	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _check_nothing_after_return(self, source, offset):$/;"	m	class:_DefinitionGenerator
_check_object	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _check_object(self, args, suspect):$/;"	m	class:DefaultWildcard
_check_project	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _check_project(self):$/;"	m	class:RopeMode
_check_redefinition	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\localtofield.py	/^    def _check_redefinition(self, name, function_scope):$/;"	m	class:LocalToField
_check_returns	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _check_returns(self):$/;"	m	class:UseFunction
_check_statements	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _check_statements(self, node):$/;"	m	class:_ASTMatcher
_child_nodes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _child_nodes(self, nodes, separator):$/;"	m	class:_PatchingASTWalker
_choose_closest_line_end	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _choose_closest_line_end(self, offset, end=False):$/;"	m	class:_ExtractInfo
_circular_inference	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^def _circular_inference():$/;"	f
_class_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def _class_to_pyobject(self, textual):$/;"	m	class:DOITextualToPyObject
_clean_up_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def _clean_up_imports(self, pymodule, import_filter):$/;"	m	class:ImportTools
_cmp_occurrences	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def _cmp_occurrences(self, o1, o2):$/;"	m	class:_MultipleFinders
_code_completions	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _code_completions(self):$/;"	m	class:_PythonCodeAssist
_collect_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _collect_info(self):$/;"	m	class:_ExtractPerformer
_compare_import_locations	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _compare_import_locations(self, stmt1, stmt2):$/;"	m	class:ModuleImports
_compare_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _compare_imports(self, stmt1, stmt2):$/;"	m	class:ModuleImports
_compare_underlined_names	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _compare_underlined_names(self, name1, name2):$/;"	m	class:_ProposalSorter
_completer	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^_completer = _ValueCompleter()$/;"	v
_completion_data	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def _completion_data(self, proposal):$/;"	m	class:Environment
_completion_data	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _completion_data(self, proposal):$/;"	m	class:VimUtils
_completion_text	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def _completion_text(self, proposal):$/;"	m	class:Environment
_comprehension	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _comprehension(self, node):$/;"	m	class:_PatchingASTWalker
_compute_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _compute_changes(self, matches, pymodule):$/;"	m	class:Restructure
_consume_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _consume_pattern(self, repattern, end=None):$/;"	m	class:_Source
_context_call	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _context_call(self, name, offset):$/;"	m	class:Worder
_convert	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^    def _convert(node):$/;"	f	function:literal_eval
_count_empty_lines_after	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _count_empty_lines_after(self, lineno):$/;"	m	class:_GlobalImportFinder
_count_empty_lines_before	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _count_empty_lines_before(self, lineno):$/;"	m	class:_GlobalImportFinder
_count_fixes	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixmodnames.py	/^    def _count_fixes(self, fixer):$/;"	m	class:FixModuleNames
_count_needed_parens	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _count_needed_parens(self, children):$/;"	m	class:_PatchingASTWalker
_create	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _create(self, name, callback, parentname='source'):$/;"	m	class:RopeMode
_create_builtin	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _create_builtin(args, creator):$/;"	f
_create_builtin_getter	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _create_builtin_getter(cls):$/;"	f
_create_builtin_type_getter	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _create_builtin_type_getter(cls):$/;"	f
_create_concluded_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _create_concluded_attributes(self):$/;"	m	class:PyDefinedObject
_create_concluded_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_concluded_attributes(self):$/;"	m	class:PyClass
_create_concluded_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_concluded_attributes(self):$/;"	m	class:PyFunction
_create_concluded_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_concluded_attributes(self):$/;"	m	class:PyModule
_create_concluded_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_concluded_attributes(self):$/;"	m	class:PyPackage
_create_finder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _create_finder(self, imports):$/;"	m	class:_MoveTools
_create_info_collector	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _create_info_collector(self):$/;"	m	class:_ExtractMethodParts
_create_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _create_pattern(self, expression):$/;"	m	class:RawSimilarFinder
_create_recursively	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _create_recursively(self, folder):$/;"	m	class:Project
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:ChangeSignature
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:Inline
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:IntroduceFactory
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:MethodObject
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:ModuleToPackage
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:Move
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:OrganizeImports
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:Refactoring
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:Rename
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:UseFunction
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:_Extract
_create_refactoring	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _create_refactoring(self):$/;"	m	class:_GenerateElement
_create_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def _create_resource(self, file_name, kind='file'):$/;"	m	class:_ResourceOperations
_create_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _create_scope(self):$/;"	m	class:PyDefinedObject
_create_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_scope(self):$/;"	m	class:PyClass
_create_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_scope(self):$/;"	m	class:PyFunction
_create_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_scope(self):$/;"	m	class:PyModule
_create_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_scope(self):$/;"	m	class:PyPackage
_create_scopes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _create_scopes(self):$/;"	m	class:FunctionScope
_create_scopes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _create_scopes(self):$/;"	m	class:Scope
_create_scopes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _create_scopes(self):$/;"	m	class:TemporaryScope
_create_structural_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _create_structural_attributes(self):$/;"	m	class:PyDefinedObject
_create_structural_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_structural_attributes(self):$/;"	m	class:PyFunction
_create_structural_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _create_structural_attributes(self):$/;"	m	class:PyPackage
_current_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def _current_folder(self):$/;"	m	class:ImportedModule
_current_folder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _current_folder(self):$/;"	m	class:ModuleImports
_decode_args	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _decode_args(self, value):$/;"	m	class:Restructure
_decode_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^def _decode_data(data, encoding):$/;"	f
_decode_imports	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _decode_imports(self, value):$/;"	m	class:Restructure
_decode_line	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _decode_line(self, line):$/;"	m	class:VimUtils
_decode_resources	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _decode_resources(self, value):$/;"	m	class:Refactoring
_decode_unsure	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _decode_unsure(self, value):$/;"	m	class:Rename
_decorator	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^    def _decorator(func):$/;"	f	function:ignore_exception
_decorator	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^    def _decorator(func, message=message):$/;"	f	function:deprecated
_default_config	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _default_config(self):$/;"	m	class:Project
_defined_to_textual	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def _defined_to_textual(self, pyobject):$/;"	m	class:PyObjectToTextual
_definfo	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def _definfo(self):$/;"	m	class:ChangeSignature
_defining_file_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _defining_file_changes(self, changes, remove, only_current):$/;"	m	class:InlineMethod
_depends_on	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _depends_on(self, changes, result):$/;"	m	class:_FindChangeDependencies
_dest_module_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _dest_module_changes(self, dest):$/;"	m	class:MoveGlobal
_dict_add	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _dict_add(self, context):$/;"	m	class:Dict
_do	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def _do(self, args):$/;"	m	class:DarcsCommands
_do	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def _do(self, args):$/;"	m	class:GITCommands
_docstring_re	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    _docstring_re = re.compile('^[\\s\\t\\n]*([^\\n]*)')$/;"	v	class:VimUtils
_does_match	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _does_match(self, node, name):$/;"	m	class:SimilarFinder
_does_return	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _does_return(self):$/;"	m	class:UseFunction
_done	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _done(self):$/;"	m	class:Refactoring
_done	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _done(self):$/;"	m	class:_GenerateElement
_dotted_completions	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _dotted_completions(self, module_scope, holding_scope):$/;"	m	class:_PythonCodeAssist
_eat_surrounding_parens	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _eat_surrounding_parens(self, children, suspected_start, start):$/;"	m	class:_PatchingASTWalker
_enable_shortcuts	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^def _enable_shortcuts(env):$/;"	f
_encode	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^    def _encode(self, value):$/;"	m	class:Boolean
_encode_line	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _encode_line(self, line):$/;"	m	class:VimUtils
_ends	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    _ends = None$/;"	v	class:CachingLogicalLineFinder
_enumerate_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _enumerate_function(args):$/;"	f
_env	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^_env = VimUtils()$/;"	v
_eval	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^                    def _eval(type_=type_, arg=arg):$/;"	f	function:_ScopeVisitor._FunctionDef
_evaluate	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def _evaluate(self, ast_node):$/;"	m	class:Arguments
_evaluate	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _evaluate(self, code, is_pyname=True):$/;"	m	class:Restructure
_evaluate	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _evaluate(self, code):$/;"	m	class:_CheckObject
_evaluate_node	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _evaluate_node(self, pymodule, node):$/;"	m	class:_CheckObject
_excepthandler	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _excepthandler(self, node):$/;"	m	class:_ScopeVisitor
_excepthandler	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _excepthandler(self, node):$/;"	m	class:_PatchingASTWalker
_exception_handler	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^def _exception_handler(func):$/;"	f
_exception_message	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^def _exception_message(e):$/;"	f
_execute	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^def _execute(args, cwd=None):$/;"	f
_extended_completion	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _extended_completion(self, proposal):$/;"	m	class:VimUtils
_extracting_method	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _extracting_method(self):$/;"	m	class:_ExtractMethodParts
_fast_file_query	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def _fast_file_query(self, source):$/;"	m	class:_TextualFinder
_file_added	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def _file_added(self, path):$/;"	m	class:ObjectDB
_file_changed_for_soa	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _file_changed_for_soa(self, resource, new_resource=None):$/;"	m	class:PyCore
_file_removed	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def _file_removed(self, path):$/;"	m	class:ObjectDB
_find_atom_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_atom_start(self, offset):$/;"	m	class:_RealFinder
_find_coding	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^def _find_coding(text):$/;"	f
_find_definition	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _find_definition(self, collector):$/;"	m	class:_ExtractPerformer
_find_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _find_definition_location(self, collector):$/;"	m	class:_ExtractPerformer
_find_dependencies	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _find_dependencies(self, change_list, change):$/;"	m	class:History
_find_end_parens	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _find_end_parens(self, source, offset):$/;"	m	class:_InlineFunctionCallsForModuleHandle
_find_first_non_space_char	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_first_non_space_char(self, offset):$/;"	m	class:_RealFinder
_find_function_arguments	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _find_function_arguments(self):$/;"	m	class:_ExtractMethodParts
_find_function_returns	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _find_function_returns(self):$/;"	m	class:_ExtractMethodParts
_find_import_end	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_import_end(self, start):$/;"	m	class:_RealFinder
_find_last_non_space_char	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_last_non_space_char(self, offset):$/;"	m	class:_RealFinder
_find_locations	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^def _find_locations(finder, resources, job_set):$/;"	f
_find_matches	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _find_matches(self, collector):$/;"	m	class:_ExtractPerformer
_find_matching_deindent	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def _find_matching_deindent(self, line_number):$/;"	m	class:_Commenter
_find_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _find_module(self, module_name):$/;"	m	class:ScopeNameFinder
_find_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _find_module(self, modname, folder=None):$/;"	m	class:PyCore
_find_module	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _find_module(self, pymodule, module_name):$/;"	m	class:_PythonCodeAssist
_find_module_in_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _find_module_in_folder(self, folder, modname):$/;"	m	class:PyCore
_find_names	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _find_names(self):$/;"	m	class:CodeTemplate
_find_next_statement_start	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _find_next_statement_start(self):$/;"	m	class:_PatchingASTWalker
_find_occurrence	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def _find_occurrence(self, name, source):$/;"	m	class:DOITextualToPyObject
_find_parens_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_parens_start(self, offset):$/;"	m	class:Worder
_find_parens_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_parens_start(self, offset):$/;"	m	class:_RealFinder
_find_primary_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_primary_start(self, offset):$/;"	m	class:_RealFinder
_find_primary_without_dot_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_primary_without_dot_start(self, offset):$/;"	m	class:_RealFinder
_find_source_folders	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _find_source_folders(self, folder):$/;"	m	class:PyCore
_find_starting_offset	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _find_starting_offset(self, source_code, offset):$/;"	m	class:_PythonCodeAssist
_find_string_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_string_start(self, offset):$/;"	m	class:_RealFinder
_find_temps	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _find_temps(self):$/;"	m	class:_ExtractMethodParts
_find_temps	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _find_temps(self):$/;"	m	class:UseFunction
_find_toplevel	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _find_toplevel(self, scope):$/;"	m	class:_DefinitionLocationFinder
_find_word_end	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_word_end(self, offset):$/;"	m	class:_RealFinder
_find_word_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _find_word_start(self, offset):$/;"	m	class:_RealFinder
_first_import_line	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _first_import_line(self):$/;"	m	class:ModuleImports
_first_non_blank	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def _first_non_blank(self, line_number):$/;"	m	class:LogicalLineFinder
_first_non_blank_line	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _first_non_blank_line(self, lines, lineno):$/;"	m	class:ModuleImports
_fix	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^    def _fix(node, lineno, col_offset):$/;"	f	function:fix_missing_locations
_fix	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^    def _fix(node, next):$/;"	f	function:add_col_end
_fix_end	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _fix_end(self, source, offset):$/;"	m	class:_ExtractRefactoring
_fix_incomplete_try_blocks	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def _fix_incomplete_try_blocks(self, lineno, indents):$/;"	m	class:_Commenter
_fix_start	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _fix_start(self, source, offset):$/;"	m	class:_ExtractRefactoring
_follow	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^        def _follow(pyfunction):$/;"	f	function:_analyze_node
_follow_evaluations	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _follow_evaluations(assignment, pyname, pyobject):$/;"	f
_follow_levels	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _follow_levels(assignment, pyobject):$/;"	f
_follow_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _follow_pyname(assignment, pymodule, lineno=None):$/;"	f
_forget_concluded_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _forget_concluded_data(self):$/;"	m	class:_PyModule
_format	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^    def _format(node):$/;"	f	function:dump
_from_import_completions	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _from_import_completions(self, pymodule):$/;"	m	class:_PythonCodeAssist
_from_to_normal	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def _from_to_normal(self, pymodule, import_stmt):$/;"	m	class:ImportTools
_function_location	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _function_location(self):$/;"	m	class:InlineParameter
_function_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def _function_to_pyobject(self, textual):$/;"	m	class:DOITextualToPyObject
_generate_info	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _generate_info(self, project, resource, offset):$/;"	m	class:GenerateFunction
_generate_info	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _generate_info(self, project, resource, offset):$/;"	m	class:_Generate
_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def _get(self):$/;"	m	class:_Inferred
_get_after_scope	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_after_scope(self):$/;"	m	class:_DefinitionLocationFinder
_get_any	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _get_any(self, name):$/;"	m	class:_RopeVariable
_get_argnames	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^def _get_argnames(arguments):$/;"	f
_get_args	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_args(self):$/;"	m	class:ChangeSignature
_get_attribute	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _get_attribute(pyobject, name):$/;"	f
_get_base_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _get_base_type(name):$/;"	m	class:PyObject
_get_bases	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _get_bases(self):$/;"	m	class:PyClass
_get_before_line	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_before_line(self):$/;"	m	class:_DefinitionLocationFinder
_get_block_end	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def _get_block_end(self, lineno):$/;"	m	class:_Commenter
_get_body	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_body(self):$/;"	m	class:_ExtractMethodParts
_get_body	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\method_object.py	/^    def _get_body(self):$/;"	m	class:MethodObject
_get_body	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_body(self, host='host'):$/;"	m	class:MoveMethod
_get_body	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _get_body(self):$/;"	m	class:UseFunction
_get_body_indents	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _get_body_indents(self, scope):$/;"	m	class:_HoldingScopeFinder
_get_builtin	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _get_builtin(*args):$/;"	f	function:_create_builtin_getter
_get_builtin	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _get_builtin(*args):$/;"	f	function:_create_builtin_type_getter
_get_builtin_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _get_builtin_name(self, type_name):$/;"	m	class:StatementEvaluator
_get_call	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_call(self):$/;"	m	class:_ExtractMethodParts
_get_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _get_changed(self, start, end):$/;"	m	class:_TextChangeDetector
_get_changed_definition_infos	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def _get_changed_definition_infos(self):$/;"	m	class:_FunctionChangers
_get_changes_made_by_new_class	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_changes_made_by_new_class(self, dest_attr, new_name):$/;"	m	class:MoveMethod
_get_changes_made_by_old_class	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_changes_made_by_old_class(self, dest_attr, new_name):$/;"	m	class:MoveMethod
_get_child_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def _get_child_path(self, parent, name):$/;"	m	class:CreateResource
_get_child_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def _get_child_path(self, name):$/;"	m	class:Folder
_get_child_resources	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _get_child_resources(self):$/;"	m	class:PyPackage
_get_children	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _get_children(self, node):$/;"	m	class:_ASTMatcher
_get_class_docstring	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _get_class_docstring(self, pyclass):$/;"	m	class:PyDocExtractor
_get_class_insertion_point	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\method_object.py	/^    def _get_class_insertion_point(self):$/;"	m	class:MethodObject
_get_comma_form	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_comma_form(self, names):$/;"	m	class:_ExtractMethodParts
_get_concluded_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _get_concluded_attributes(self):$/;"	m	class:PyDefinedObject
_get_concluded_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^def _get_concluded_data(module):$/;"	f
_get_concluded_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _get_concluded_data(self):$/;"	m	class:_PyModule
_get_confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_confs(self):$/;"	m	class:ChangeSignature
_get_confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_confs(self):$/;"	m	class:IntroduceFactory
_get_confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_confs(self):$/;"	m	class:Move
_get_confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_confs(self):$/;"	m	class:Refactoring
_get_confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_confs(self):$/;"	m	class:Rename
_get_confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_confs(self):$/;"	m	class:_Extract
_get_containing_class	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def _get_containing_class(self, pyname):$/;"	m	class:InHierarchyFilter
_get_cursor	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _get_cursor(self):$/;"	m	class:VimUtils
_get_defined_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _get_defined_objects(self):$/;"	m	class:PyDefinedObject
_get_defining_class_scope	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def _get_defining_class_scope(self):$/;"	m	class:EncapsulateField
_get_defining_scope	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def _get_defining_scope(self):$/;"	m	class:EncapsulateField
_get_definition_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _get_definition_info(self):$/;"	m	class:_DefinitionGenerator
_get_definition_params	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _get_definition_params(self):$/;"	m	class:_DefinitionGenerator
_get_destination_for_move	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^def _get_destination_for_move(resource, destination):$/;"	f
_get_doc	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def _get_doc(project, text, offset, *args, **kwds):$/;"	f	function:RopeMode.show_calltip
_get_dotted_tokens	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_dotted_tokens(self, imported_primary):$/;"	m	class:_OneTimeSelector
_get_element	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_element(self):$/;"	m	class:GenerateClass
_get_element	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_element(self):$/;"	m	class:GenerateFunction
_get_element	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_element(self):$/;"	m	class:GenerateVariable
_get_element	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_element(self):$/;"	m	class:_Generate
_get_element_kind	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_element_kind(self):$/;"	m	class:GenerateClass
_get_element_kind	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_element_kind(self):$/;"	m	class:GenerateFunction
_get_element_kind	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_element_kind(self):$/;"	m	class:GenerateVariable
_get_element_kind	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_element_kind(self):$/;"	m	class:_Generate
_get_encoding	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _get_encoding(self):$/;"	m	class:VimUtils
_get_evaluated_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^def _get_evaluated_names(targets, assigned, module, evaluation, lineno):$/;"	f
_get_factory_method	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def _get_factory_method(self, lines, class_scope,$/;"	m	class:IntroduceFactory
_get_field_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\localtofield.py	/^    def _get_field_name(self, pyfunction, name):$/;"	m	class:LocalToField
_get_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _get_file(self, name, compress):$/;"	m	class:_DataFiles
_get_file_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def _get_file_name(self):$/;"	m	class:_FIFOReceiver
_get_fixed_offset	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _get_fixed_offset(self, offset):$/;"	m	class:_RealFinder
_get_fscommands	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def _get_fscommands(self, resource):$/;"	m	class:_ResourceOperations
_get_function_call	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_function_call(self, args):$/;"	m	class:_ExtractMethodParts
_get_function_definition	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_function_definition(self):$/;"	m	class:_ExtractMethodParts
_get_function_docstring	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _get_function_docstring(self, pyfunction):$/;"	m	class:PyDocExtractor
_get_function_kind	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^def _get_function_kind(scope):$/;"	f
_get_function_signature	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _get_function_signature(self, pyfunction, add_module=False):$/;"	m	class:PyDocExtractor
_get_function_signature	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_function_signature(self, args):$/;"	m	class:_ExtractMethodParts
_get_global_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _get_global_scope(self):$/;"	m	class:Scope
_get_goal_module	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_goal_module(self, scope):$/;"	m	class:_GenerationInfo
_get_goal_scope	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_goal_scope(self):$/;"	m	class:_FunctionGenerationInfo
_get_goal_scope	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_goal_scope(self):$/;"	m	class:_GenerationInfo
_get_header_offsets	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_parameter.py	/^    def _get_header_offsets(self):$/;"	m	class:IntroduceParameter
_get_import_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def _get_import_info(self):$/;"	m	class:ImportStatement
_get_import_infos	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _get_import_infos(self, resource, imports):$/;"	m	class:Restructure
_get_import_location	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_import_location(self, stmt):$/;"	m	class:ModuleImports
_get_imported_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def _get_imported_pyname(self):$/;"	m	class:ImportedName
_get_inferred	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def _get_inferred(self):$/;"	m	class:AssignedName
_get_init	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\method_object.py	/^    def _get_init(self):$/;"	m	class:MethodObject
_get_init_dot_py	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _get_init_dot_py(self):$/;"	m	class:PyPackage
_get_insertion_offset	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def _get_insertion_offset(self, class_scope, lines):$/;"	m	class:IntroduceFactory
_get_level	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def _get_level(self):$/;"	m	class:Suite
_get_line_end	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _get_line_end(self, offset):$/;"	m	class:_RealFinder
_get_line_indents	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^def _get_line_indents(line):$/;"	f
_get_line_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _get_line_start(self, offset):$/;"	m	class:_RealFinder
_get_lineno_for_node	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _get_lineno_for_node(assign_node):$/;"	f
_get_location	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _get_location(self):$/;"	m	class:_Source
_get_location	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _get_location(self):$/;"	m	class:RopeMode
_get_matched_asts	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _get_matched_asts(self, code):$/;"	m	class:RawSimilarFinder
_get_matched_text	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _get_matched_text(self, match):$/;"	m	class:_ChangeComputer
_get_method_replacement	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _get_method_replacement(self):$/;"	m	class:InlineMethod
_get_module	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _get_module(self, pyfunction):$/;"	m	class:PyDocExtractor
_get_module_with_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_module_with_imports(self, source_code, resource):$/;"	m	class:MoveGlobal
_get_moved_resources	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _get_moved_resources(self, changes, undo=False):$/;"	m	class:RopeMode
_get_moving_element	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_moving_element(self):$/;"	m	class:MoveGlobal
_get_moving_element_with_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_moving_element_with_imports(self):$/;"	m	class:MoveGlobal
_get_moving_region	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_moving_region(self):$/;"	m	class:MoveGlobal
_get_name_and_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_parameter.py	/^    def _get_name_and_pyname(self):$/;"	m	class:IntroduceParameter
_get_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _get_names(self):$/;"	m	class:FunctionScope
_get_names	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_names(self, alias_names):$/;"	m	class:_GlobalImportFinder
_get_nearest_roots	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _get_nearest_roots(self, node):$/;"	m	class:_ChangeComputer
_get_new_header	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_new_header(self, name):$/;"	m	class:MoveMethod
_get_new_import_blanks	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_new_import_blanks(self):$/;"	m	class:ModuleImports
_get_new_import_lineno	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_new_import_lineno(self):$/;"	m	class:ModuleImports
_get_node_text	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _get_node_text(self, node, force=False):$/;"	m	class:_ChangeComputer
_get_normal	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _get_normal(self, name):$/;"	m	class:_RopeVariable
_get_number_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _get_number_pattern(self):$/;"	m	class:_Source
_get_object_for_node	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _get_object_for_node(self, stmt):$/;"	m	class:StatementEvaluator
_get_occurrence_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def _get_occurrence_pattern(self, name):$/;"	m	class:_TextualFinder
_get_op	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _get_op(self, node):$/;"	m	class:_PatchingASTWalker
_get_opener	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _get_opener(self, compress):$/;"	m	class:_DataFiles
_get_optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_optionals(self):$/;"	m	class:ChangeSignature
_get_optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_optionals(self):$/;"	m	class:Inline
_get_optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_optionals(self):$/;"	m	class:IntroduceFactory
_get_optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_optionals(self):$/;"	m	class:Move
_get_optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_optionals(self):$/;"	m	class:Refactoring
_get_optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_optionals(self):$/;"	m	class:Rename
_get_optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_optionals(self):$/;"	m	class:Restructure
_get_optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _get_optionals(self):$/;"	m	class:UseFunction
_get_parameter_names	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\method_object.py	/^    def _get_parameter_names(self):$/;"	m	class:MethodObject
_get_passed_arguments_string	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_passed_arguments_string(self):$/;"	m	class:MoveMethod
_get_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _get_pattern(cls):$/;"	m	class:CodeTemplate
_get_persisted_builtin	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def _get_persisted_builtin(self, object_):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
_get_persisted_class	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def _get_persisted_class(self, object_):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
_get_persisted_code	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def _get_persisted_code(self, object_):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
_get_persisted_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def _get_persisted_module(self, object_):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
_get_primary	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_parameter.py	/^    def _get_primary(self):$/;"	m	class:IntroduceParameter
_get_primary_and_object_for_node	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _get_primary_and_object_for_node(self, stmt):$/;"	m	class:StatementEvaluator
_get_pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def _get_pymodule(self, path):$/;"	m	class:TextualToPyObject
_get_pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def _get_pymodule(self):$/;"	m	class:ImportedModule
_get_pymodule_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def _get_pymodule_path(self, pymodule):$/;"	m	class:PyObjectToTextual
_get_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def _get_pyname(pycore, resource, offset):$/;"	f
_get_relative_to_absolute_list	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def _get_relative_to_absolute_list(self, import_info):$/;"	m	class:RelativeToAbsoluteVisitor
_get_removed_range	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _get_removed_range(self):$/;"	m	class:InlineMethod
_get_resource	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _get_resource(self, filename=None):$/;"	m	class:RopeMode
_get_resource_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _get_resource_path(self, name):$/;"	m	class:NoProject
_get_resource_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _get_resource_path(self, name):$/;"	m	class:Project
_get_resource_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _get_resource_path(self, name):$/;"	m	class:_Project
_get_return_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _get_return_pattern(cls):$/;"	m	class:_DefinitionGenerator
_get_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^        def _get_returned(pyobject):$/;"	f	function:StatementEvaluator._Call
_get_returned_asts	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _get_returned_asts(self):$/;"	m	class:FunctionScope
_get_root	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_root(self):$/;"	m	class:_GlobalUnboundNameFinder
_get_root	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_root(self):$/;"	m	class:_LocalUnboundNameFinder
_get_root	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_root(self):$/;"	m	class:_UnboundNameFinder
_get_root_classes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def _get_root_classes(self, pyclass, name):$/;"	m	class:InHierarchyFilter
_get_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def _get_scope(self, pyobject):$/;"	m	class:ObjectInfoManager
_get_scope	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _get_scope(self, scope):$/;"	m	class:CompletionProposal
_get_scope_and_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _get_scope_and_pyname(self, pyname):$/;"	m	class:_CallContext
_get_scope_indents	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _get_scope_indents(self, scope):$/;"	m	class:_HoldingScopeFinder
_get_scope_indents	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def _get_scope_indents(self, lines, scope):$/;"	m	class:IntroduceFactory
_get_scope_indents	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_scope_indents(self, pyobject):$/;"	m	class:MoveMethod
_get_scope_info	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def _get_scope_info(self, path, key, readonly=True):$/;"	m	class:ObjectDB
_get_scope_offset	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def _get_scope_offset(self):$/;"	m	class:ChangeOccurrences
_get_scope_range	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _get_scope_range(self):$/;"	m	class:InlineMethod
_get_scope_region	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_scope_region(self, scope):$/;"	m	class:_ExtractInfo
_get_self_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_self_name(self):$/;"	m	class:_ExtractMethodParts
_get_self_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_self_name(self):$/;"	m	class:MoveMethod
_get_single_function_docstring	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _get_single_function_docstring(self, pyfunction):$/;"	m	class:PyDocExtractor
_get_source	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def _get_source(self, resource, pymodule):$/;"	m	class:_TextualFinder
_get_source_scope	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _get_source_scope(self):$/;"	m	class:_GenerationInfo
_get_stmt_end	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def _get_stmt_end(self, lineno):$/;"	m	class:_Commenter
_get_structural_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _get_structural_attributes(self):$/;"	m	class:PyDefinedObject
_get_super_classes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _get_super_classes(self, pyobject):$/;"	m	class:_CheckObject
_get_super_methods	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _get_super_methods(self, pyclass, name):$/;"	m	class:PyDocExtractor
_get_text	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_text(self, start_line, end_line):$/;"	m	class:_GlobalImportFinder
_get_text	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _get_text(self):$/;"	m	class:RopeMode
_get_unbound_names	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _get_unbound_names(self, defined_pyobject):$/;"	m	class:ModuleImports
_get_unchanged_body	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_unchanged_body(self):$/;"	m	class:MoveMethod
_get_unindented_function_body	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _get_unindented_function_body(self, returns):$/;"	m	class:_ExtractMethodParts
_get_used_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _get_used_imports(self, import_tools):$/;"	m	class:MoveMethod
_getvardef	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def _getvardef(pymodule, pyname):$/;"	f
_good_token	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _good_token(self, token, offset, start=None):$/;"	m	class:_Source
_goto_location	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _goto_location(self, resource, lineno):$/;"	m	class:RopeMode
_guess_project	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _guess_project(self):$/;"	m	class:RopeMode
_handle	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _handle(self, node, base_children, eat_parens=False, eat_spaces=False):$/;"	m	class:_PatchingASTWalker
_handle_conditional_node	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _handle_conditional_node(self, node):$/;"	m	class:_FunctionInformationCollector
_handle_first_parameter	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _handle_first_parameter(pyobject, parameters):$/;"	f
_handle_job_set	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^def _handle_job_set(function):$/;"	f
_handle_parens	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _handle_parens(self, children, start, formats):$/;"	m	class:_PatchingASTWalker
_handle_special_args	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _handle_special_args(self, pyobjects):$/;"	m	class:PyFunction
_hierarchical_defined_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def _hierarchical_defined_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
_ignore_inferred	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^_ignore_inferred = utils.ignore_exception($/;"	v
_import_mercurial	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def _import_mercurial(self):$/;"	m	class:MercurialCommands
_import_old_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _import_old_files(self, name):$/;"	m	class:_DataFiles
_importing_names_from_self	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def _importing_names_from_self(self, import_info, import_stmt):$/;"	m	class:SelfImportVisitor
_in_dir	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def _in_dir(self, path):$/;"	m	class:GITCommands
_infer_assignment	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _infer_assignment(assignment, pymodule):$/;"	f
_infer_parameters	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _infer_parameters(self):$/;"	m	class:PyFunction
_infer_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _infer_returned(pyobject, args):$/;"	f
_infer_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _infer_returned(self, args=None):$/;"	m	class:PyFunction
_infer_sequence_for_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _infer_sequence_for_pyname(pyname):$/;"	f
_inform_observers	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def _inform_observers(self):$/;"	m	class:TaskHandle
_init_automatic_soa	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _init_automatic_soa(self):$/;"	m	class:PyCore
_init_data_receiving	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def _init_data_receiving(self):$/;"	m	class:PythonFileRunner
_init_fields	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _init_fields(self):$/;"	m	class:_GenerationInfo
_init_ignores	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _init_ignores(self):$/;"	m	class:Worder
_init_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _init_imports(self):$/;"	m	class:InlineMethod
_init_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _init_imports(self):$/;"	m	class:InlineVariable
_init_logicals	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def _init_logicals(self):$/;"	m	class:CachingLogicalLineFinder
_init_mode	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _init_mode(self):$/;"	m	class:RopeMode
_init_objectdb	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def _init_objectdb(self):$/;"	m	class:ObjectInfoManager
_init_other_parts	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _init_other_parts(self):$/;"	m	class:Project
_init_parts	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _init_parts(self, start, end):$/;"	m	class:_ExtractInfo
_init_prefs	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _init_prefs(self, prefs):$/;"	m	class:Project
_init_python_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _init_python_files(self):$/;"	m	class:PyCore
_init_resource_observer	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _init_resource_observer(self):$/;"	m	class:PyCore
_init_ropefolder	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _init_ropefolder(self):$/;"	m	class:Project
_init_scope	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _init_scope(self):$/;"	m	class:_ExtractInfo
_init_source	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _init_source(self, pycore, source_code, resource):$/;"	m	class:PyModule
_init_source_folders	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _init_source_folders(self):$/;"	m	class:PyCore
_init_using_ast	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _init_using_ast(self, node, source):$/;"	m	class:RawSimilarFinder
_init_validation	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def _init_validation(self):$/;"	m	class:ObjectInfoManager
_init_variables	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^def _init_variables():$/;"	f
_initial_builtins	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^_initial_builtins = {$/;"	v
_initialize_line_starts	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def _initialize_line_starts(self):$/;"	m	class:SourceLinesAdapter
_inline_variable	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def _inline_variable(pycore, pymodule, pyname, name,$/;"	f
_input_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _input_function(args):$/;"	f
_insert	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def _insert(self, lineno, line):$/;"	m	class:_Commenter
_insert_import	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _insert_import(self, name, module):$/;"	m	class:_CodeAssist
_interface	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^_interface = ropemode.interface.RopeMode(env=_env)$/;"	v
_invalid	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def _invalid(self, resource, new_resource=None):$/;"	m	class:_FileListCacher
_invalidate	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def _invalidate(self):$/;"	m	class:_ConcludedData
_invalidate_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _invalidate_resource(self, resource):$/;"	m	class:_ModuleCache
_invalidate_resource_cache	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _invalidate_resource_cache(self, resource, new_resource=None):$/;"	m	class:PyCore
_is_a_method_local	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\localtofield.py	/^    def _is_a_method_local(self, pyname):$/;"	m	class:LocalToField
_is_allowed_to_move	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def _is_allowed_to_move(self, resources, resource):$/;"	m	class:Rename
_is_an_attribute	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def _is_an_attribute(self, pyname):$/;"	m	class:EncapsulateField
_is_an_interesting_call	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def _is_an_interesting_call(self, frame):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
_is_assigned_in_a_tuple_assignment	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def _is_assigned_in_a_tuple_assignment(self, occurance):$/;"	m	class:_FindChangesForModule
_is_change_interesting	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _is_change_interesting(self, changes):$/;"	m	class:History
_is_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _is_changed(self, resource):$/;"	m	class:FilteredResourceObserver
_is_class	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def _is_class(pyname):$/;"	m	class:CallInfo
_is_classmethod	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def _is_classmethod(pyname):$/;"	m	class:CallInfo
_is_code_inside_project	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def _is_code_inside_project(self, code):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
_is_defined_after	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _is_defined_after(self, scope, pyname, lineno):$/;"	m	class:_PythonCodeAssist
_is_defined_after	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^    def _is_defined_after(self, scope, pyname, lineno):$/;"	m	class:_BadAccessFinder
_is_defined_in_class_body	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _is_defined_in_class_body(self, holding_scope, offset, lineno):$/;"	m	class:ScopeNameFinder
_is_elif	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _is_elif(self, node):$/;"	m	class:_PatchingASTWalker
_is_empty_line	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _is_empty_line(self, lineno):$/;"	m	class:_HoldingScopeFinder
_is_expression	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def _is_expression(self):$/;"	m	class:_ChangeComputer
_is_expression	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _is_expression(self):$/;"	m	class:UseFunction
_is_function_name_in_function_header	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _is_function_name_in_function_header(self, scope, offset, lineno):$/;"	m	class:ScopeNameFinder
_is_future	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^def _is_future(info):$/;"	f
_is_generator	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _is_generator(self):$/;"	m	class:FunctionScope
_is_global	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _is_global(self, pyobject):$/;"	m	class:MoveGlobal
_is_host_used	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _is_host_used(self):$/;"	m	class:MoveMethod
_is_id	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def _is_id(self, arg):$/;"	m	class:_FunctionGenerationInfo
_is_id_char	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def _is_id_char(self, offset):$/;"	m	class:_RealFinder
_is_id_char	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def _is_id_char(self, c):$/;"	m	class:_TextualFinder
_is_ignored_import	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _is_ignored_import(self, imported_module):$/;"	m	class:_ScopeVisitor
_is_local	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^def _is_local(pyname):$/;"	f
_is_long	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def _is_long(self, name):$/;"	m	class:LongImportVisitor
_is_method	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _is_method(self, pyfunction):$/;"	m	class:PyDocExtractor
_is_method	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def _is_method(pyname):$/;"	m	class:CallInfo
_is_method_call	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^def _is_method_call(primary, pyfunction):$/;"	f
_is_method_call	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def _is_method_call(primary, pyname):$/;"	m	class:CallInfo
_is_node_interesting	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _is_node_interesting(self, node):$/;"	m	class:_GlobalUnboundNameFinder
_is_normal	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _is_normal(self, name):$/;"	m	class:_RopeVariable
_is_on_a_word	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _is_on_a_word(self, info, offset):$/;"	m	class:_ExceptionalConditionChecker
_is_package	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _is_package(self, folder):$/;"	m	class:PyCore
_is_parent_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _is_parent_changed(self, child):$/;"	m	class:FilteredResourceObserver
_is_python_file	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _is_python_file(self, path):$/;"	m	class:RopeMode
_is_region_on_a_word	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _is_region_on_a_word(self, info):$/;"	m	class:_ExceptionalConditionChecker
_is_renaming_a_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def _is_renaming_a_module(self):$/;"	m	class:Rename
_is_the_last_method_of_a_class	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _is_the_last_method_of_a_class(self):$/;"	m	class:InlineMethod
_is_transformable_to_normal	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def _is_transformable_to_normal(self, import_info):$/;"	m	class:ImportTools
_is_var	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _is_var(self, name):$/;"	m	class:_RopeVariable
_item_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _item_get(self, context):$/;"	m	class:Dict
_item_iter	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _item_iter(self, context):$/;"	m	class:Dict
_item_list	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _item_list(self, context):$/;"	m	class:Dict
_iter_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _iter_function(args):$/;"	f
_iterator_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _iterator_get(self, context):$/;"	m	class:List
_iterator_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _iterator_get(self, context):$/;"	m	class:Set
_join_lines	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^def _join_lines(code):$/;"	f
_join_lines	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def _join_lines(lines):$/;"	f
_key_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _key_get(self, context):$/;"	m	class:Dict
_key_iter	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _key_iter(self, context):$/;"	m	class:Dict
_key_list	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _key_list(self, context):$/;"	m	class:Dict
_keyword	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _keyword(self, node):$/;"	m	class:_PatchingASTWalker
_keyword_parameters	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _keyword_parameters(self, pymodule, scope):$/;"	m	class:_PythonCodeAssist
_last_non_blank	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def _last_non_blank(self, start):$/;"	m	class:_Commenter
_line_filter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def _line_filter(self, lineno):$/;"	m	class:ImportOrganizer
_list_add	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _list_add(self, context):$/;"	m	class:List
_list_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _list_get(self, context):$/;"	m	class:List
_load_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def _load_files(self):$/;"	m	class:MemoryDB
_load_history	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _load_history(self):$/;"	m	class:History
_location	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _location(self, pyobject, add_module=False):$/;"	m	class:PyDocExtractor
_logical_lines	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def _logical_lines(self, readline):$/;"	m	class:LogicalLineFinder
_logical_start	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^def _logical_start(lines, lineno, check_prev=False):$/;"	f
_main_chars	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    _main_chars = re.compile(r'[\\'|"|#|\\\\|\\[|\\]|\\{|\\}|\\(|\\)]')$/;"	v	class:_CustomGenerator
_make_comprehension_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _make_comprehension_scope(self, node):$/;"	m	class:StatementEvaluator
_make_goal	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _make_goal(self, import_=False):$/;"	m	class:UseFunction
_make_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _make_pattern(self):$/;"	m	class:UseFunction
_manage_writes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def _manage_writes(self, offset, result):$/;"	m	class:_FindChangesForModule
_match_nodes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _match_nodes(self, expected, node, mapping):$/;"	m	class:_ASTMatcher
_match_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    _match_pattern = None$/;"	v	class:CodeTemplate
_match_stmts	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _match_stmts(self, current_stmts, mapping):$/;"	m	class:_ASTMatcher
_match_wildcard	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _match_wildcard(self, node1, node2, mapping):$/;"	m	class:_ASTMatcher
_matching_keywords	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _matching_keywords(self, starting):$/;"	m	class:_PythonCodeAssist
_module_name	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def _module_name(self, resource):$/;"	m	class:AutoImport
_module_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _module_name(self):$/;"	m	class:UseFunction
_module_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def _module_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
_move_front	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _move_front(self, change_list, changes):$/;"	m	class:History
_move_global	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _move_global(self, dest, resources, handle):$/;"	m	class:Move
_move_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _move_imports(self, imports, index, blank_lines):$/;"	m	class:ModuleImports
_move_method	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _move_method(self, dest, resources, handle):$/;"	m	class:Move
_move_module	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _move_module(self, dest, resources, handle):$/;"	m	class:Move
_moved	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def _moved(self, resource, newresource):$/;"	m	class:AutoImport
_name	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixmodnames.py	/^    def _name(self, resource):$/;"	m	class:FixModuleNames
_new_dict	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _new_dict(self, args):$/;"	m	class:Dict
_new_function_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def _new_function_name(self, factory_name, global_):$/;"	m	class:IntroduceFactory
_new_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _new_import(self, dest):$/;"	m	class:MoveModule
_new_list	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _new_list(self, args):$/;"	m	class:List
_new_modname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _new_modname(self, dest):$/;"	m	class:MoveGlobal
_new_modname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _new_modname(self, dest):$/;"	m	class:MoveModule
_new_set	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _new_set(self, args):$/;"	m	class:Set
_new_tuple	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _new_tuple(self, args):$/;"	m	class:Tuple
_no_project	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    _no_project = None$/;"	v	class:NoProject
_normal_prefix	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    _normal_prefix = '__rope__variable_normal_'$/;"	v	class:_RopeVariable
_normal_search	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def _normal_search(self, source):$/;"	m	class:_TextualFinder
_not_equals_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    _not_equals_pattern = None$/;"	v	class:_Source
_number_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    _number_pattern = None$/;"	v	class:_Source
_object_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _object_attributes(obj, parent):$/;"	f
_object_to_persisted_form	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def _object_to_persisted_form(self, object_):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
_offset_to_position	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _offset_to_position(self, offset):$/;"	m	class:VimUtils
_operations	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def _operations(self):$/;"	m	class:Change
_operators	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    _operators = {'And': 'and', 'Or': 'or', 'Add': '+', 'Sub': '-', 'Mult': '*',$/;"	v	class:_PatchingASTWalker
_parameter_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^    def _parameter_objects(self, pyfunction):$/;"	m	class:SOAVisitor
_parameter_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def _parameter_objects(pyobject):$/;"	f
_parens	.\bundle\ropevim\ftplugin\python\libs\rope\base\simplify.py	/^_parens = re.compile(r'[\\({\\[\\]}\\)\\n]')$/;"	v
_parse_batchset	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^def _parse_batchset(sets):$/;"	f
_parse_text	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^def _parse_text(body):$/;"	f
_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def _path(self, path):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
_perform	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def _perform(self, changes):$/;"	m	class:Refactoring
_perform_change	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def _perform_change(self, change_, description):$/;"	m	class:Resource
_perform_changes	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _perform_changes(self, changes):$/;"	m	class:FilteredResourceObserver
_perform_command_on_import_tools	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def _perform_command_on_import_tools(self, method, resource, offset):$/;"	m	class:ImportOrganizer
_perform_redos	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _perform_redos(self, count, task_handle):$/;"	m	class:History
_perform_undos	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _perform_undos(self, count, task_handle):$/;"	m	class:History
_position_to_offset	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _position_to_offset(self, lineno, colno):$/;"	m	class:VimUtils
_prepare_refactorings	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _prepare_refactorings(self):$/;"	m	class:RopeMode
_print_values	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _print_values(self, values):$/;"	m	class:VimUtils
_propagated_lookup	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _propagated_lookup(self, name):$/;"	m	class:Scope
_property_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _property_function(args):$/;"	f
_proposal_cmp	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _proposal_cmp(self, proposal1, proposal2):$/;"	m	class:_ProposalSorter
_pydefined_to_str	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^def _pydefined_to_str(pydefined):$/;"	f
_quickfixdefs	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _quickfixdefs(self, locations):$/;"	m	class:VimUtils
_range_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _range_function(args):$/;"	f
_re_search	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def _re_search(self, source):$/;"	m	class:_TextualFinder
_read	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def _read(pyfunction, code):$/;"	m	class:DefinitionInfo
_read_variable	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _read_variable(self, name, lineno):$/;"	m	class:_FunctionInformationCollector
_realpath	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^    def _realpath(path):$/;"	f	function:__rope_start_everything
_realpath	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^def _realpath(path):$/;"	f
_receive_information	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def _receive_information(self):$/;"	m	class:PythonFileRunner
_refactoring_name	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _refactoring_name(self, refactoring):$/;"	m	class:RopeMode
_reload_buffers	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _reload_buffers(self, changes, undo=False):$/;"	m	class:RopeMode
_reload_buffers_for_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _reload_buffers_for_changes(self, changed, moved={}):$/;"	m	class:RopeMode
_remove_extra_items	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _remove_extra_items(self):$/;"	m	class:History
_remove_from	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def _remove_from(pycore, pyname, source, resource):$/;"	f
_remove_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _remove_imports(self, imports):$/;"	m	class:ModuleImports
_remove_self_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def _remove_self_imports(self, pymodule, import_filter=None):$/;"	m	class:ImportTools
_removed	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def _removed(self, resource):$/;"	m	class:AutoImport
_rename_in_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def _rename_in_module(self, pymodule, name, new_name, till_dot=False):$/;"	m	class:ImportTools
_rename_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def _rename_module(self, resource, new_name, changes):$/;"	m	class:Rename
_rename_occurrences	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def _rename_occurrences(self, file_, changed_name, global_factory):$/;"	m	class:IntroduceFactory
_replace_occurrences	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _replace_occurrences(self, content, extract_info):$/;"	m	class:_ExtractPerformer
_replace_returns_with	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def _replace_returns_with(self, source, returns):$/;"	m	class:_DefinitionGenerator
_replace_wildcards	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _replace_wildcards(self, expression):$/;"	m	class:RawSimilarFinder
_resource_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def _resource_changed(self, resource):$/;"	m	class:ObjectInfoManager
_resource_moved	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def _resource_moved(self, resource, new_resource=None):$/;"	m	class:ObjectInfoManager
_resources	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^def _resources(project, text):$/;"	f
_resources_for_args	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def _resources_for_args(self, project, args, kwds):$/;"	m	class:_MultiRefactoring
_restructure	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def _restructure(self, resources, task_handle, others=True):$/;"	m	class:UseFunction
_return_count	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^def _return_count(node):$/;"	f
_returned	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    _returned = None$/;"	v	class:_ExtractInfo
_returns_last	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^def _returns_last(node):$/;"	f
_reversed_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _reversed_function(args):$/;"	f
_rope_result	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    _rope_result = '_rope__result'$/;"	v	class:UseFunction
_rope_returned	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    _rope_returned = '_rope__returned'$/;"	v	class:UseFunction
_runDeferred	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def _runDeferred(self, deferred):$/;"	m	class:Checker
_same_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _same_pyname(self, expected, pyname):$/;"	m	class:_CheckObject
_same_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _same_pyobject(self, expected, pyobject):$/;"	m	class:_CheckObject
_save_buffers	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def _save_buffers(self, only_current=False):$/;"	m	class:RopeMode
_save_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def _save_data(self, function, args, returned=('unknown',)):$/;"	m	class:ObjectInfoManager
_scope_finder	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _scope_finder(self):$/;"	m	class:GlobalScope
_search_for_change_contents	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def _search_for_change_contents(self, change_list, file):$/;"	m	class:History
_search_resource_changes	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _search_resource_changes(self, resource):$/;"	m	class:FilteredResourceObserver
_search_resource_creations	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _search_resource_creations(self, resource):$/;"	m	class:FilteredResourceObserver
_search_resource_moves	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _search_resource_moves(self, resource):$/;"	m	class:FilteredResourceObserver
_self_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _self_get(self, context):$/;"	m	class:Dict
_self_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _self_get(self, context):$/;"	m	class:List
_self_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _self_get(self, context):$/;"	m	class:Set
_self_set	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _self_set(self, context):$/;"	m	class:Dict
_self_set	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _self_set(self, context):$/;"	m	class:List
_self_set	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _self_set(self, context):$/;"	m	class:Set
_set	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def _set(self, lineno, line):$/;"	m	class:_Commenter
_set_add	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _set_add(self, context):$/;"	m	class:Set
_set_cursor	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _set_cursor(self, cursor):$/;"	m	class:VimUtils
_set_diffs	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def _set_diffs(self):$/;"	m	class:_TextChangeDetector
_set_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _set_get(self, context):$/;"	m	class:Set
_set_import_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def _set_import_info(self, new_import):$/;"	m	class:ImportStatement
_set_name_and_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def _set_name_and_pyname(self):$/;"	m	class:ChangeSignature
_set_parameter_pyobjects	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _set_parameter_pyobjects(self, pyobjects):$/;"	m	class:PyFunction
_show	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    def _show(self, message):$/;"	m	class:Logger
_simple_does_match	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def _simple_does_match(self, node, name):$/;"	m	class:RawSimilarFinder
_skip_comment	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def _skip_comment(self):$/;"	m	class:_Source
_sorted_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _sorted_function(args):$/;"	f
_source_module_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def _source_module_changes(self, dest):$/;"	m	class:MoveGlobal
_split_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _split_name(self, name):$/;"	m	class:_CheckObject
_starts	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    _starts = None$/;"	v	class:CachingLogicalLineFinder
_stdlib_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\stdmods.py	/^def _stdlib_path():$/;"	f
_str	.\bundle\ropevim\ftplugin\python\libs\rope\base\simplify.py	/^_str = re.compile('%s|%s' % (codeanalyze.get_comment_pattern(),$/;"	v
_string_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    _string_pattern = None$/;"	v	class:_Source
_super_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _super_function(args):$/;"	f
_tobe_fixed	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixmodnames.py	/^    def _tobe_fixed(self, fixer):$/;"	m	class:FixModuleNames
_transform_can_select	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def _transform_can_select(self, can_select):$/;"	m	class:FilteringVisitor
_transform_relatives_to_absolute	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\topackage.py	/^    def _transform_relatives_to_absolute(self, resource):$/;"	m	class:ModuleToPackage
_trim_docstring	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _trim_docstring(self, docstring, indents=0):$/;"	m	class:PyDocExtractor
_types	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    _types = None$/;"	v	class:PyObject
_undotted_completions	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def _undotted_completions(self, scope, result, lineno=None):$/;"	m	class:_PythonCodeAssist
_unknown	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    _unknown = None$/;"	v	class:PyObject
_unsure_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def _unsure_pyname(self, pyname, unbound=True):$/;"	m	class:_CheckObject
_update_changes_caused_by_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _update_changes_caused_by_changed(self, changes, changed):$/;"	m	class:FilteredResourceObserver
_update_changes_caused_by_created	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _update_changes_caused_by_created(self, changes, resource):$/;"	m	class:FilteredResourceObserver
_update_changes_caused_by_moved	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def _update_changes_caused_by_moved(self, changes, resource,$/;"	m	class:FilteredResourceObserver
_update_evaluated	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def _update_evaluated(self, targets, assigned,$/;"	m	class:_ScopeVisitor
_value_get	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _value_get(self, context):$/;"	m	class:Dict
_value_iter	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _value_iter(self, context):$/;"	m	class:Dict
_value_list	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def _value_list(self, context):$/;"	m	class:Dict
_vim_name	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^def _vim_name(name):$/;"	f
_visit_child_scope	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def _visit_child_scope(self, node):$/;"	m	class:_UnboundNameFinder
_visit_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def _visit_function(self):$/;"	m	class:FunctionScope
_what_does_comprehension_hold	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def _what_does_comprehension_hold(self, node):$/;"	m	class:StatementEvaluator
_where_to_search	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _where_to_search(self):$/;"	m	class:_ExtractPerformer
_wrapper	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^    def _wrapper(self, *args, **kwds):$/;"	f	function:saveit
_write	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def _write(self):$/;"	m	class:AutoImport
_writedefs	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def _writedefs(self, locations, filename):$/;"	m	class:VimUtils
_written_variable	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def _written_variable(self, name, lineno):$/;"	m	class:_FunctionInformationCollector
_yield_count	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^def _yield_count(node):$/;"	f
_zip_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^def _zip_function(args):$/;"	f
accept	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def accept(self, visitor):$/;"	m	class:ImportStatement
activateAll	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:activateAll()$/;"	f
activateBookmark	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:activateFileNode(node)$/;"	f
add	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^        def add(name, returned=None, function=None):$/;"	f	function:File.__init__
add	.\bundle\ropevim\ftplugin\python\libs\rope\base\prefs.py	/^    def add(self, key, value):$/;"	m	class:Prefs
add	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def add(self, index, name, default=None, value=None):$/;"	m	class:ChangeSignature
addArgs	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^            def addArgs(arglist):$/;"	f	function:Checker.LAMBDA.runFunction
addBinding	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def addBinding(self, loc, value, reportRedef=True):$/;"	m	class:Checker
add_call	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def add_call(self, parameters, returned):$/;"	m	class:ScopeInfo
add_call	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def add_call(self, parameters, returned):$/;"	m	class:ScopeInfo
add_call	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def add_call(self, parameters, returned):$/;"	m	class:_NullScopeInfo
add_callback	.\bundle\ropevim\ftplugin\python\libs\rope\base\prefs.py	/^    def add_callback(self, key, callback):$/;"	m	class:Prefs
add_callinfo	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def add_callinfo(self, path, key, args, returned):$/;"	m	class:ObjectDB
add_change	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def add_change(self, change):$/;"	m	class:ChangeSet
add_change	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def add_change(self, start, end, new_text=None):$/;"	m	class:ChangeCollector
add_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def add_changed(self, resource):$/;"	m	class:_Changes
add_col_end	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def add_col_end(node):$/;"	f
add_created	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def add_created(self, resource):$/;"	m	class:_Changes
add_file_list_observer	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def add_file_list_observer(self, observer):$/;"	m	class:ObjectDB
add_finishing_observer	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def add_finishing_observer(self, observer):$/;"	m	class:PythonFileRunner
add_hook	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def add_hook(self, name, callback, hook):$/;"	m	class:Environment
add_hook	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def add_hook(self, name, callback, hook):$/;"	m	class:VimUtils
add_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^def add_import(pycore, pymodule, module_name, name=None):$/;"	f
add_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def add_import(self, import_info):$/;"	m	class:ModuleImports
add_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def add_imports(self, pymodule, new_imports):$/;"	m	class:_MoveTools
add_methods	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\sourceutils.py	/^def add_methods(pymodule, class_scope, methods_sources):$/;"	f
add_methods	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_observer	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def add_observer(self, observer):$/;"	m	class:_Project
add_observer	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def add_observer(self, observer):$/;"	m	class:NullTaskHandle
add_observer	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def add_observer(self, observer):$/;"	m	class:TaskHandle
add_pername	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def add_pername(self, path, key, name, value):$/;"	m	class:ObjectDB
add_removed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def add_removed(self, resource, new_resource=None):$/;"	m	class:_Changes
add_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def add_resource(self, resource):$/;"	m	class:FilteredResourceObserver
add_unbound	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def add_unbound(self, name):$/;"	m	class:_GlobalUnboundNameFinder
add_unbound	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def add_unbound(self, name):$/;"	m	class:_LocalUnboundNameFinder
add_unbound	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def add_unbound(self, name):$/;"	m	class:_UnboundNameFinder
add_write_hook	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def add_write_hook(self, hook):$/;"	m	class:_DataFiles
added	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def added(self, path):$/;"	m	class:FileListObserver
added	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def added(self, path):$/;"	m	class:_FileListObserver
address	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    address = property(lambda self: self._address)$/;"	v	class:Project
after_save_actions	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def after_save_actions(self):$/;"	m	class:RopeMode
analyze_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soa.py	/^def analyze_module(pycore, pymodule, should_analyze,$/;"	f
analyze_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def analyze_module(self, resource, should_analyze=lambda py: True,$/;"	m	class:PyCore
analyze_module	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def analyze_module(self):$/;"	m	class:RopeMode
analyze_modules	.\bundle\ropevim\ftplugin\python\libs\rope\base\libutils.py	/^def analyze_modules(project, task_handle=taskhandle.NullTaskHandle()):$/;"	f
analyze_modules	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def analyze_modules(self):$/;"	m	class:RopeMode
any	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def any(name, list_):$/;"	m	class:_TextualFinder
arguments_to_string	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def arguments_to_string(self, from_index=0):$/;"	m	class:DefinitionInfo
ask	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def ask(self, prompt, default=None, starting=None):$/;"	m	class:Environment
ask	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def ask(self, prompt, default=None, starting=None):$/;"	m	class:VimUtils
ask_completion	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def ask_completion(self, prompt, values, starting=None):$/;"	m	class:Environment
ask_completion	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def ask_completion(self, prompt, values, starting=None):$/;"	m	class:VimUtils
ask_directory	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def ask_directory(self, prompt, default=None, starting=None):$/;"	m	class:Environment
ask_directory	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def ask_directory(self, prompt, default=None, starting=None):$/;"	m	class:VimUtils
ask_values	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def ask_values(self, prompt, values, default=None, starting=None):$/;"	m	class:Environment
ask_values	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def ask_values(self, prompt, values, default=None,$/;"	m	class:VimUtils
ast	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^import ast$/;"	m
ast_suite_tree	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^def ast_suite_tree(node):$/;"	f
attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def attributes(self):$/;"	m	class:BuiltinModule
author	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    author="Phil Frost",$/;"	v
auto_import	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def auto_import(self):$/;"	m	class:RopeMode
auto_import	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def auto_import(self):$/;"	m	class:_CodeAssist
autoimport	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def autoimport(self):$/;"	m	class:_CodeAssist
automatic_soa	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def automatic_soa(self):$/;"	m	class:PyCore
b:did_indent	.\bundle\vim-python-pep8-indent\indent\python.vim	/^let b:did_indent = 1$/;"	v
b:did_pyflakes_plugin	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    let b:did_pyflakes_plugin = 1$/;"	v
b:did_python_init	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    let b:did_python_init = 0$/;"	v
b:did_python_init	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^let b:did_python_init = 1$/;"	v
b:showing_message	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^let b:showing_message = 0$/;"	v
base_conditions	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def base_conditions(self, info):$/;"	m	class:_ExceptionalConditionChecker
before_save_actions	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def before_save_actions(self):$/;"	m	class:RopeMode
buffer	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def buffer(self):$/;"	m	class:VimUtils
buffer	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	.\bundle\vim-fugitive\plugin\fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
builtin_dict_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_dict_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_file_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_file_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_function_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_function_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_generator_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_generator_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_iter_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_iter_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_list_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_list_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def builtin_names(self):$/;"	m	class:GlobalScope
builtin_set_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_set_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_str_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_str_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtin_tuple_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def builtin_tuple_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
builtins	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^builtins = BuiltinModule('__builtin__', initial=_initial_builtins)$/;"	v
cached	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^def cached(count):$/;"	f
cacheit	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^cacheit = saveit$/;"	v
calculate	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^            def calculate(handle):$/;"	f	function:RopeMode._base_findit
calculate	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^        def calculate(handle):$/;"	f	function:Refactoring.show
call	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def call(self, job_set=taskhandle.NullJobSet()):$/;"	f	function:_handle_job_set
call	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^def call(command):$/;"	f
call_for_nodes	.\bundle\ropevim\ftplugin\python\libs\rope\base\ast.py	/^def call_for_nodes(node, callback, recursive=False):$/;"	f
callback	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def callback(parent, name):$/;"	f	function:RopeMode.create_directory
callback	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def callback(parent, name):$/;"	f	function:RopeMode.create_file
callback	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def callback(sourcefolder, name):$/;"	f	function:RopeMode.create_module
callback	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def callback(sourcefolder, name):$/;"	f	function:RopeMode.create_package
can_select_name_and_alias	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^        def can_select_name_and_alias(name, alias):$/;"	f	function:FilteringVisitor._transform_can_select
chCwd	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:chCwd(node)$/;"	f
chRoot	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:chRoot(node)$/;"	f
change_argument_mapping	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_argument_mapping(self, definition_info, argument_mapping):$/;"	m	class:_ArgumentChanger
change_argument_mapping	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_argument_mapping(self, definition_info, mapping):$/;"	m	class:ArgumentAdder
change_argument_mapping	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_argument_mapping(self, definition_info, mapping):$/;"	m	class:ArgumentDefaultInliner
change_argument_mapping	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_argument_mapping(self, definition_info, mapping):$/;"	m	class:ArgumentRemover
change_call	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_call(self, primary, pyname, call):$/;"	m	class:_FunctionChangers
change_definition	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_definition(self, call):$/;"	m	class:_FunctionChangers
change_definition_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_definition_info(self, call_info):$/;"	m	class:ArgumentRemover
change_definition_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_definition_info(self, definition_info):$/;"	m	class:ArgumentAdder
change_definition_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_definition_info(self, definition_info):$/;"	m	class:ArgumentDefaultInliner
change_definition_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_definition_info(self, definition_info):$/;"	m	class:ArgumentReorderer
change_definition_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def change_definition_info(self, definition_info):$/;"	m	class:_ArgumentChanger
changed	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^            changed = False$/;"	v	class:_MoveTools.remove_old_imports.CanSelect
check	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\scripts\pyflakes.py	/^def check(codeString, filename):$/;"	f
checkPath	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\scripts\pyflakes.py	/^def checkPath(filename):$/;"	f
checkUnusedAssignments	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^            def checkUnusedAssignments():$/;"	f	function:Checker.LAMBDA.runFunction
check_aim	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^            def check_aim(occurrence):$/;"	f	function:InlineVariable._change_module
check_dead_scopes	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def check_dead_scopes(self):$/;"	m	class:Checker
check_loop	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def check_loop(self):$/;"	m	class:_UnmatchedBreakOrContinueFinder
check_offset	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^            def check_offset(occurrence):$/;"	f	function:find_definition
check_status	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def check_status(self):$/;"	m	class:JobSet
check_status	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def check_status(self):$/;"	m	class:NullJobSet
checker	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\scripts\pyflakes.py	/^checker = __import__('pyflakes.checker').checker$/;"	v
classifiers	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    classifiers=[$/;"	v
clear	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def clear(self):$/;"	m	class:History
clear_cache	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def clear_cache(self):$/;"	m	class:AutoImport
clear_resources	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def clear_resources(self):$/;"	m	class:FilteredResourceObserver
close	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def close(self):$/;"	m	class:__rope_start_everything._FileSender
close	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def close(self):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
close	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def close(self):$/;"	m	class:__rope_start_everything._SocketSender
close	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def close(self):$/;"	m	class:Project
close	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def close(self):$/;"	m	class:_Project
closeChildren	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:closeTreeWindow()$/;"	f
close_project	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def close_project(self):$/;"	m	class:RopeMode
code	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def code(self):$/;"	m	class:_HoldingScopeFinder
code_assist	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def code_assist(project, source_code, offset, resource=None,$/;"	f
code_assist	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def code_assist(self, prefix):$/;"	m	class:RopeMode
code_assist	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def code_assist(self, prefix):$/;"	m	class:_CodeAssist
collectLoopVars	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^        def collectLoopVars(n):$/;"	f	function:Checker.FOR
command	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:command(definition) abort$/;"	f
comment	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def comment(self, lineno):$/;"	m	class:_Commenter
commenter	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def commenter(self):$/;"	m	class:FixSyntax
compare_changes	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^        def compare_changes(change1, change2):$/;"	f	function:ChangeCollector.get_changed
compiled_patterns	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def compiled_patterns(self):$/;"	m	class:_ResourceMatcher
completions	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def completions(self):$/;"	m	class:RopeMode
completions	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def completions(self):$/;"	m	class:_CodeAssist
compress	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def compress(self):$/;"	m	class:History
compress	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def compress(self):$/;"	m	class:MemoryDB
confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    confs = {'classname': dialog.Data('New class name: ',$/;"	v	class:MethodObject
confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    confs = {'pattern': dialog.Data('Restructuring pattern: '),$/;"	v	class:Restructure
confs	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    confs = {}$/;"	v	class:Refactoring
constructor	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    constructor = None$/;"	v	class:_Extract
constructor	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    constructor = rope.refactor.extract.ExtractMethod$/;"	v	class:ExtractMethod
constructor	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    constructor = rope.refactor.extract.ExtractVariable$/;"	v	class:ExtractVariable
consume	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def consume(self, token):$/;"	m	class:_Source
consume_changes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def consume_changes(self, start, end):$/;"	m	class:_TextChangeDetector
consume_not_equal	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def consume_not_equal(self):$/;"	m	class:_Source
consume_number	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def consume_number(self):$/;"	m	class:_Source
consume_string	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def consume_string(self, end=None):$/;"	m	class:_Source
contains	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def contains(self, resource):$/;"	m	class:Folder
contents_before_current_change	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def contents_before_current_change(self, file):$/;"	m	class:History
convertChangeContents	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def convertChangeContents(self, change):$/;"	m	class:ChangeToData
convertChangeSet	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def convertChangeSet(self, change):$/;"	m	class:ChangeToData
convertCreateResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def convertCreateResource(self, change):$/;"	m	class:ChangeToData
convertMoveResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def convertMoveResource(self, change):$/;"	m	class:ChangeToData
convertRemoveResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def convertRemoveResource(self, change):$/;"	m	class:ChangeToData
copy_location	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def copy_location(new_node, old_node):$/;"	f
count_changes	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^def count_changes(change):$/;"	f
count_line_indents	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^def count_line_indents(line):$/;"	f
cr	.\bundle\supertab\plugin\supertab.vim	/^      let cr = (map =~? '\\(^\\|[^)]\\)<cr>')$/;"	v
create	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def create(self, resource):$/;"	m	class:_ResourceOperations
create	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def create(self, path):$/;"	m	class:MemoryDB
create	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def create(self, key):$/;"	m	class:FileDict
create	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def create(self):$/;"	m	class:File
create	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def create(self):$/;"	m	class:Folder
create	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def create(self):$/;"	m	class:Resource
create_arguments	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^def create_arguments(primary, pyfunction, call_node, scope):$/;"	f
create_directory	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def create_directory(self):$/;"	m	class:RopeMode
create_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_file(self, path):$/;"	m	class:DarcsCommands
create_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_file(self, path):$/;"	m	class:FileSystemCommands
create_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_file(self, path):$/;"	m	class:GITCommands
create_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_file(self, path):$/;"	m	class:MercurialCommands
create_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_file(self, path):$/;"	m	class:SubversionCommands
create_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def create_file(self, file_name):$/;"	m	class:Folder
create_file	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def create_file(self):$/;"	m	class:RopeMode
create_finder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^def create_finder(pycore, name, pyname, only_calls=False, imports=True,$/;"	f
create_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_folder(self, path):$/;"	m	class:DarcsCommands
create_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_folder(self, path):$/;"	m	class:FileSystemCommands
create_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_folder(self, path):$/;"	m	class:GITCommands
create_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_folder(self, path):$/;"	m	class:MercurialCommands
create_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def create_folder(self, path):$/;"	m	class:SubversionCommands
create_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def create_folder(self, folder_name):$/;"	m	class:Folder
create_fscommands	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^def create_fscommands(root):$/;"	f
create_generate	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^def create_generate(kind, project, resource, offset):$/;"	f
create_inline	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def create_inline(project, resource, offset):$/;"	f
create_job_set	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^def create_job_set(task_handle, change):$/;"	f
create_jobset	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def create_jobset(self, *args, **kwds):$/;"	m	class:NullTaskHandle
create_jobset	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def create_jobset(self, name='JobSet', count=None):$/;"	m	class:TaskHandle
create_module	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^def create_module(project, name, sourcefolder=None):$/;"	f
create_module	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def create_module(self):$/;"	m	class:RopeMode
create_move	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^def create_move(project, resource, offset=None):$/;"	f
create_package	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^def create_package(project, name, sourcefolder=None):$/;"	f
create_package	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def create_package(self):$/;"	m	class:RopeMode
create_progress	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def create_progress(self, name):$/;"	m	class:Environment
create_progress	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def create_progress(self, name):$/;"	m	class:VimUtils
create_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def create_scope(self, key):$/;"	m	class:FileInfo
create_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def create_scope(self, key):$/;"	m	class:FileInfo
current_jobset	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def current_jobset(self):$/;"	m	class:TaskHandle
current_word	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def current_word(self):$/;"	m	class:Environment
current_word	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def current_word(self):$/;"	m	class:VimUtils
cursor	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    cursor = property(_get_cursor, _set_cursor)$/;"	v	class:VimUtils
custom_generator	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^def custom_generator(lines):$/;"	f
data	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    data = property(get, set)$/;"	v	class:_ConcludedData
dd	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^noremap <buffer><silent> dd dd:PyflakesUpdate<CR>$/;"	m
decode	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^    def decode(self, value):$/;"	m	class:Boolean
decode	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^    def decode(self, value):$/;"	m	class:Data
decorator	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^    def decorator(func):$/;"	f	function:cached
decorator	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^    def decorator(func):$/;"	f	function:prevent_recursion
decorator	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    def decorator(func):$/;"	f	function:global_command
decorator	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    def decorator(func):$/;"	f	function:rope_hook
decorator	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    def decorator(func, name=name):$/;"	f	function:local_command
decorators	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def decorators(self):$/;"	m	class:PyFunction
default	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^                                      default='_ExtractedClass')}$/;"	v	class:MethodObject
default_templates	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def default_templates():$/;"	f
deferAssignment	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def deferAssignment(self, callable):$/;"	m	class:Checker
deferFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def deferFunction(self, callable):$/;"	m	class:Checker
define_commands	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:define_commands()$/;"	f
defined_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def defined_to_pyobject(self, textual):$/;"	m	class:DOITextualToPyObject
defined_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def defined_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
definition_location	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def definition_location(self):$/;"	m	class:RopeMode
delete	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def delete(self, start, end):$/;"	m	class:Environment
delete	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def delete(self, start, end):$/;"	m	class:VimUtils
deleteBookmark	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:deleteBookmark(bm)$/;"	f
deprecated	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^def deprecated(message=None):$/;"	f
description	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    description="passive checker of Python programs",$/;"	v
diff_restore	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diff_restore()$/;"	f
diff_window_count	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diff_window_count()$/;"	f
diffoff	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:diffthis()$/;"	f
dispatch	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def dispatch(self, import_):$/;"	m	class:AddingVisitor
dispatch	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def dispatch(self, import_):$/;"	m	class:ImportInfoVisitor
dispatch	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def dispatch(self, import_):$/;"	m	class:RemovePyNameVisitor
dispatch	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def dispatch(self, import_):$/;"	m	class:RemovingVisitor
displayHelp	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:displayHelp()$/;"	f
do	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def do(self):$/;"	m	class:ChangeContents
do	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def do(self):$/;"	m	class:CreateResource
do	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def do(self):$/;"	m	class:MoveResource
do	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def do(self):$/;"	m	class:RemoveResource
do	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def do(self, job_set=None):$/;"	m	class:Change
do	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def do(self, job_set=taskhandle.NullJobSet()):$/;"	m	class:ChangeSet
do	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def do(self, changes, task_handle=taskhandle.NullTaskHandle()):$/;"	m	class:History
do	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def do(self, changes, task_handle=taskhandle.NullTaskHandle()):$/;"	m	class:_Project
do_create	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^        def do_create(holding=None):$/;"	f	function:Dict._new_dict
do_refactor	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^                    def do_refactor(prefix, self=self, refactoring=attr):$/;"	f	function:RopeMode._prepare_refactorings
doa_data_received	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def doa_data_received(self, data):$/;"	m	class:ObjectInfoManager
does_match	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def does_match(self, resource):$/;"	m	class:_ResourceMatcher
does_match	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def does_match(node, name):$/;"	f	function:make_pattern
doi_to_normal	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^        def doi_to_normal(textual):$/;"	f	function:ObjectInfoManager.doa_data_received
done	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def done(self):$/;"	m	class:VimProgress
dump	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def dump(node, annotate_fields=True, include_attributes=False):$/;"	f
dw	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^noremap <buffer><silent> dw dw:PyflakesUpdate<CR>$/;"	m
dynload_modules	.\bundle\ropevim\ftplugin\python\libs\rope\base\stdmods.py	/^def dynload_modules():$/;"	f
echo	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^def echo(message):$/;"	f
echoWarning	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
element_already_exists	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def element_already_exists(self):$/;"	m	class:_FunctionGenerationInfo
element_already_exists	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def element_already_exists(self):$/;"	m	class:_GenerationInfo
empty_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def empty_import(self):$/;"	m	class:ImportStatement
end	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    end = property(get_end)$/;"	v	class:Scope
ends	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def ends(self):$/;"	m	class:CachingLogicalLineFinder
eval_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^def eval_location(pymodule, offset):$/;"	f
eval_location2	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^def eval_location2(pymodule, offset):$/;"	f
eval_node	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^def eval_node(scope, node):$/;"	f
eval_node2	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^def eval_node2(scope, node):$/;"	f
eval_str	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^def eval_str(holding_scope, name):$/;"	f
eval_str2	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^def eval_str2(holding_scope, name):$/;"	f
evaluate	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^        def evaluate(source):$/;"	f	function:.test_multilineSyntaxError
existing	.\bundle\supertab\plugin\supertab.vim	/^    let existing = maparg('<tab>', 'i')$/;"	v
exists	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def exists(self):$/;"	m	class:Resource
exiting_actions	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def exiting_actions(self):$/;"	m	class:RopeMode
expand_star_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def expand_star_imports(self, resource, offset=None):$/;"	m	class:ImportOrganizer
expand_stars	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def expand_stars(self, pymodule, import_filter=None):$/;"	m	class:ImportTools
expand_stars	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def expand_stars(self):$/;"	m	class:ModuleImports
expr_map	.\bundle\supertab\plugin\supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	.\bundle\supertab\plugin\supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	.\bundle\supertab\plugin\supertab.vim	/^    let expr_map = 0$/;"	v
expression	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def expression(self):$/;"	m	class:_CodeAssist
extended_completions	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def extended_completions(self):$/;"	m	class:RopeMode
extended_completions	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def extended_completions(self):$/;"	m	class:_CodeAssist
extension_modules	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def extension_modules(self):$/;"	m	class:PyCore
extract	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def extract(self):$/;"	m	class:_ExtractPerformer
extracted	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def extracted(self):$/;"	m	class:_ExtractInfo
file_data_to_unicode	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^def file_data_to_unicode(data, encoding=None):$/;"	f
file_moved	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def file_moved(self, file, newfile):$/;"	m	class:ObjectDB
filename	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def filename(self):$/;"	m	class:Environment
filename	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def filename(self):$/;"	m	class:VimUtils
filenames	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def filenames(self):$/;"	m	class:Environment
filenames	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def filenames(self):$/;"	m	class:VimUtils
filter_names	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def filter_names(self, can_select):$/;"	m	class:ModuleImports
find	.\autoload\pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
find_backwards	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def find_backwards(self, pattern, offset):$/;"	m	class:_Source
find_definition	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^def find_definition(project, code, offset, resource=None, maxfixes=1):$/;"	f
find_errors	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\finderrors.py	/^def find_errors(project, resource):$/;"	f
find_file	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def find_file(self, filename, readonly=False, other=False):$/;"	m	class:Environment
find_file	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def find_file(self, prefix):$/;"	m	class:RopeMode
find_file	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def find_file(self, filename, readonly=False, other=False, force=False):$/;"	m	class:VimUtils
find_file_other_window	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def find_file_other_window(self, prefix):$/;"	m	class:RopeMode
find_function_offset	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def find_function_offset(self, offset):$/;"	m	class:Worder
find_function_offset	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def find_function_offset(self, offset, definition='def '):$/;"	m	class:_RealFinder
find_implementations	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^def find_implementations(project, resource, offset, resources=None,$/;"	f
find_implementations	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def find_implementations(self):$/;"	m	class:RopeMode
find_import_statements	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def find_import_statements(self):$/;"	m	class:_GlobalImportFinder
find_indents	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def find_indents(self):$/;"	m	class:_DefinitionLocationFinder
find_insertion_line	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def find_insertion_line(self, code):$/;"	m	class:AutoImport
find_lineno	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def find_lineno(self):$/;"	m	class:_DefinitionLocationFinder
find_matches	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def find_matches(self):$/;"	m	class:_ASTMatcher
find_minimum_indents	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\sourceutils.py	/^def find_minimum_indents(source_code):$/;"	f
find_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def find_module(self, modname, folder=None):$/;"	m	class:PyCore
find_occurrences	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def find_occurrences(*args, **kwds):$/;"	f
find_occurrences	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^def find_occurrences(project, resource, offset, unsure=False, resources=None,$/;"	f
find_occurrences	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def find_occurrences(self, resource=None, pymodule=None):$/;"	m	class:_MultipleFinders
find_occurrences	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def find_occurrences(self, resource=None, pymodule=None):$/;"	m	class:Finder
find_occurrences	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def find_occurrences(self):$/;"	m	class:RopeMode
find_offsets	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def find_offsets(self, source):$/;"	m	class:_TextualFinder
find_parens_start_from_inside	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def find_parens_start_from_inside(self, offset):$/;"	m	class:Worder
find_parens_start_from_inside	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def find_parens_start_from_inside(self, offset):$/;"	m	class:_RealFinder
find_reads_and_writes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def find_reads_and_writes(code):$/;"	m	class:_VariableReadsAndWritesFinder
find_reads_for_one_liners	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def find_reads_for_one_liners(code):$/;"	m	class:_VariableReadsAndWritesFinder
find_relative_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def find_relative_module(self, modname, folder, level):$/;"	m	class:PyCore
find_scope_end	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def find_scope_end(self, scope):$/;"	m	class:_HoldingScopeFinder
find_suite	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def find_suite(self, line):$/;"	m	class:Suite
find_temps	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^def find_temps(project, code):$/;"	f
find_visible	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^def find_visible(node, lines):$/;"	f
find_visible_for_suite	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^def find_visible_for_suite(root, lines):$/;"	f
finished_job	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def finished_job(self):$/;"	m	class:JobSet
finished_job	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def finished_job(self):$/;"	m	class:NullJobSet
fix_indentation	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\sourceutils.py	/^def fix_indentation(code, new_indents):$/;"	f
fix_missing_locations	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def fix_missing_locations(node):$/;"	f
flakes	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\harness.py	/^    def flakes(self, input, *expectedOutputs, **kw):$/;"	m	class:Test
fnameescape	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
forget_all_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def forget_all_data(self):$/;"	m	class:_ModuleCache
from_offset	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def from_offset(self, offset):$/;"	m	class:_Source
froms_to_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def froms_to_imports(self, pymodule, import_filter=None):$/;"	m	class:ImportTools
froms_to_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def froms_to_imports(self, resource, offset=None):$/;"	m	class:ImportOrganizer
fugitive	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#detect	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#detect(path)$/;"	f
fugitive#extract_git_dir	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#head	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#head(...)$/;"	f
fugitive#is_git_dir	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_temp	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	.\bundle\vim-fugitive\plugin\fugitive.vim	/^augroup fugitive_utility$/;"	a
function	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:function(name) abort$/;"	f
function_called	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def function_called(self, pyfunction, params, returned=None):$/;"	m	class:ObjectInfoManager
g:NERDTreeAutoDeleteBuffer	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	.\bundle\nerdtree\plugin\NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMenuController	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	.\bundle\nerdtree\lib\nerdtree\path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	.\bundle\nerdtree\plugin\NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	.\bundle\nerdtree\plugin\NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:ShowTrailingWhitespace	.\plugin\ShowTrailingWhitespace.vim	/^    let g:ShowTrailingWhitespace = 1$/;"	v
g:ShowTrailingWhitespace_FilterFunc	.\plugin\ShowTrailingWhitespace.vim	/^    let g:ShowTrailingWhitespace_FilterFunc = function('ShowTrailingWhitespace#Filter#Default')$/;"	v
g:SuperTabClosePreviewOnPopupClose	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompletionContexts	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabCrMapping	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabCrMapping = 1$/;"	v
g:SuperTabDefaultCompetionType	.\vimrc.vim	/^let g:SuperTabDefaultCompetionType = "context"$/;"	v
g:SuperTabDefaultCompletionType	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	.\bundle\supertab\plugin\supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	.\bundle\supertab\plugin\supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	.\bundle\supertab\plugin\supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	.\bundle\supertab\plugin\supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabUndoBreak	.\bundle\supertab\plugin\supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:Tlist_Auto_Open	.\ftplugin\python.vim	/^let g:Tlist_Auto_Open=1$/;"	v
g:colors_name	.\colors\wow.vim	/^let g:colors_name = "wow"$/;"	v
g:did_ft	.\bundle\snipmate\plugin\snipMate.vim	/^let g:did_ft = {}$/;"	v
g:fugitive_git_executable	.\bundle\vim-fugitive\plugin\fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	.\bundle\vim-fugitive\plugin\fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:loaded_ShowTrailingWhitespace	.\plugin\ShowTrailingWhitespace.vim	/^let g:loaded_ShowTrailingWhitespace = 1$/;"	v
g:loaded_fugitive	.\bundle\vim-fugitive\plugin\fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_nerdtree_autoload	.\bundle\nerdtree\autoload\nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	.\bundle\nerdtree\nerdtree_plugin\exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_pathogen	.\autoload\pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:pep8_map	.\bundle\pep8\plugin\pep8.vim	/^    let g:pep8_map='<F5>'$/;"	v
g:pydoc_cmd	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^    let g:pydoc_cmd = 'pydoc'$/;"	v
g:pydoc_cmd	.\ftplugin\python.vim	/^let g:pydoc_cmd='python -m pydoc'  " So it doesn't need to be in path$/;"	v
g:pydoc_highlight	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^    let g:pydoc_highlight = 1$/;"	v
g:pydoc_highlight	.\ftplugin\python.vim	/^let g:pydoc_highlight=0           " Don't highlight the search term$/;"	v
g:pydoc_open_cmd	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^    let g:pydoc_open_cmd = 'split'$/;"	v
g:pydoc_perform_mappings	.\bundle\pydocs\ftplugin\python_pydoc.vim	/^    let g:pydoc_perform_mappings = 1$/;"	v
g:pydoc_use_drop	.\ftplugin\python.vim	/^let g:pydoc_use_drop=1             " Re-use an open pydoc window if available$/;"	v
g:pyflakes_builtins	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    let g:pyflakes_builtins = []$/;"	v
g:pyflakes_use_quickfix	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^    let g:pyflakes_use_quickfix = 1$/;"	v
g:ropevim_loaded	.\bundle\ropevim\ftplugin\python\ropevim.vim	/^let g:ropevim_loaded = 1$/;"	v
g:sl_format	.\plugin\statusline.vim	/^    let g:sl_format="%=%m%r%h %y [%l,%v] %P"$/;"	v
g:sl_pad	.\plugin\statusline.vim	/^    let g:sl_pad=20$/;"	v
g:tcomment#filetype_map	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcomment#filetype_map = {$/;"	v
g:tcomment#ignore_char_type	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcomment#ignore_char_type = 1   "{{{2$/;"	v
g:tcomment#replacements_c	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcomment#replacements_c = {$/;"	v
g:tcomment#replacements_xml	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcomment#replacements_xml = {$/;"	v
g:tcomment#syntax_substitute	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcomment#syntax_substitute = {$/;"	v
g:tcommentBlankLines	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentBlankLines = 1    "{{{2$/;"	v
g:tcommentBlockC	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentBlockC = {$/;"	v
g:tcommentBlockC2	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentBlockC2 = {$/;"	v
g:tcommentBlockXML	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentBlockXML = {$/;"	v
g:tcommentGuessFileType	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType = 0   "{{{2$/;"	v
g:tcommentGuessFileType_django	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType_django = 1   "{{{2$/;"	v
g:tcommentGuessFileType_dsl	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType_dsl = 'xml'   "{{{2$/;"	v
g:tcommentGuessFileType_eruby	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType_eruby = 1   "{{{2$/;"	v
g:tcommentGuessFileType_html	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType_html = 1   "{{{2$/;"	v
g:tcommentGuessFileType_php	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType_php = 'html'   "{{{2$/;"	v
g:tcommentGuessFileType_smarty	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType_smarty = 1   "{{{2$/;"	v
g:tcommentGuessFileType_tskeleton	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType_tskeleton = 1   "{{{2$/;"	v
g:tcommentGuessFileType_vim	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentGuessFileType_vim = 1   "{{{2$/;"	v
g:tcommentIgnoreTypes_php	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentIgnoreTypes_php = 'sql'   "{{{2$/;"	v
g:tcommentInlineC	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentInlineC = {$/;"	v
g:tcommentInlineXML	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentInlineXML = {$/;"	v
g:tcommentLineC	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentLineC = g:tcommentInlineC$/;"	v
g:tcommentMapLeader1	.\bundle\tcomment_vim\plugin\tcomment.vim	/^    let g:tcommentMapLeader1 = '<c-_>' "{{{2$/;"	v
g:tcommentMapLeader2	.\bundle\tcomment_vim\plugin\tcomment.vim	/^    let g:tcommentMapLeader2 = '<Leader>_' "{{{2$/;"	v
g:tcommentMapLeaderOp1	.\bundle\tcomment_vim\plugin\tcomment.vim	/^    let g:tcommentMapLeaderOp1 = 'gc' "{{{2$/;"	v
g:tcommentMapLeaderOp2	.\bundle\tcomment_vim\plugin\tcomment.vim	/^    let g:tcommentMapLeaderOp2 = 'gC' "{{{2$/;"	v
g:tcommentMaps	.\bundle\tcomment_vim\plugin\tcomment.vim	/^    let g:tcommentMaps = 1   "{{{2$/;"	v
g:tcommentModeExtra	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentModeExtra = ''   "{{{2$/;"	v
g:tcommentOpModeExtra	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentOpModeExtra = ''   "{{{2$/;"	v
g:tcommentOptions	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentOptions = {}   "{{{2$/;"	v
g:tcommentSyntaxMap	.\bundle\tcomment_vim\autoload\tcomment.vim	/^    let g:tcommentSyntaxMap = {$/;"	v
g:tcommentTextObjectInlineComment	.\bundle\tcomment_vim\plugin\tcomment.vim	/^    let g:tcommentTextObjectInlineComment = 'ic'   "{{{2$/;"	v
generate	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def generate(handle):$/;"	f	function:RopeMode.generate_autoimport_cache
generate_autoimport_cache	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def generate_autoimport_cache(self):$/;"	m	class:RopeMode
generate_cache	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def generate_cache(self, resources=None, underlined=None,$/;"	m	class:AutoImport
generate_modules_cache	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def generate_modules_cache(self, modules, underlined=None,$/;"	m	class:AutoImport
generate_regions	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def generate_regions(self, start_line=1, end_line=None):$/;"	m	class:LogicalLineFinder
generate_starts	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def generate_starts(self, start_line=1, end_line=None):$/;"	m	class:CachingLogicalLineFinder
generate_starts	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def generate_starts(self, start_line=1, end_line=None):$/;"	m	class:LogicalLineFinder
generic_visit	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^    def generic_visit(self, node):$/;"	m	class:NodeTransformer
generic_visit	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^    def generic_visit(self, node):$/;"	m	class:NodeVisitor
get	.\bundle\ropevim\ftplugin\python\libs\rope\base\prefs.py	/^    def get(self, key, default=None):$/;"	m	class:Prefs
get	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get(self, *args, **kwds):$/;"	m	class:_Inferred
get	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get(self):$/;"	m	class:_ConcludedData
get	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def get(self, name, default=None):$/;"	m	class:Environment
get	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def get(self, name, default=None):$/;"	m	class:VimUtils
get_active_job_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def get_active_job_name(self):$/;"	m	class:JobSet
get_active_job_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def get_active_job_name(self):$/;"	m	class:NullJobSet
get_all_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def get_all_changes(self, *args, **kwds):$/;"	m	class:_MultiRefactoring
get_all_names	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def get_all_names(self):$/;"	m	class:AutoImport
get_args	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def get_args(self):$/;"	m	class:ChangeSignature
get_argument	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_argument(self, name):$/;"	m	class:_CallContext
get_arguments	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_arguments(self, parameters):$/;"	m	class:Arguments
get_arguments	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_arguments(self, parameters):$/;"	m	class:MixedArguments
get_arguments	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_arguments(self, parameters):$/;"	m	class:ObjectArguments
get_arguments	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_arguments(self, argnames):$/;"	m	class:_CallContext
get_assignment_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_assignment_type(self, offset):$/;"	m	class:Worder
get_assignment_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_assignment_type(self, offset):$/;"	m	class:_RealFinder
get_ast	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_ast(self):$/;"	m	class:Lambda
get_ast	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_ast(self):$/;"	m	class:PyDefinedObject
get_ast	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_ast(self, name):$/;"	m	class:Match
get_attribute	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_attribute(self, name):$/;"	m	class:PyDefinedObject
get_attribute	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_attribute(self, name):$/;"	m	class:PyObject
get_attribute	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^                def get_attribute(self, name):$/;"	m	class:Restructure._evaluate._BuiltinsStub
get_attribute	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^                def get_attribute(self, name):$/;"	m	class:_CheckObject._evaluate._BuiltinsStub
get_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_attributes(self):$/;"	m	class:BuiltinClass
get_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_attributes(self):$/;"	m	class:BuiltinModule
get_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_attributes(self):$/;"	m	class:BuiltinUnknown
get_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_attributes(self):$/;"	m	class:Generator
get_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_attributes(self):$/;"	m	class:Iterator
get_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_attributes(self):$/;"	m	class:Lambda
get_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_attributes(self):$/;"	m	class:PyDefinedObject
get_attributes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_attributes(self):$/;"	m	class:PyObject
get_base	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_base(self, name):$/;"	m	class:_RopeVariable
get_base_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^def get_base_type(name):$/;"	f
get_blank_lines	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_blank_lines(self):$/;"	m	class:_GenerationInfo
get_block_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^def get_block_start(lines, lineno, maximum_indents=80):$/;"	f
get_block_start_patterns	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^def get_block_start_patterns():$/;"	f
get_body	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\sourceutils.py	/^def get_body(pyfunction):$/;"	f
get_body_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_body_pattern(self):$/;"	m	class:_ExtractMethodParts
get_body_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_body_pattern(self):$/;"	m	class:_ExtractVariableParts
get_body_region	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\sourceutils.py	/^def get_body_region(defined):$/;"	f
get_body_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_body_start(self):$/;"	m	class:Scope
get_call_infos	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def get_call_infos(self):$/;"	m	class:ScopeInfo
get_call_infos	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_call_infos(self):$/;"	m	class:ScopeInfo
get_call_infos	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_call_infos(self):$/;"	m	class:_NullScopeInfo
get_callinfos	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_callinfos(self, path, key):$/;"	m	class:ObjectDB
get_calltip	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def get_calltip(self, pyobject, ignore_unknown=False, remove_self=False):$/;"	m	class:PyDocExtractor
get_calltip	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def get_calltip(project, source_code, offset, resource=None,$/;"	f
get_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def get_changed(self):$/;"	m	class:ChangeCollector
get_changed	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def get_changed(self):$/;"	m	class:_ChangeComputer
get_changed_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def get_changed_module(self):$/;"	m	class:_ChangeCallsInModule
get_changed_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def get_changed_module(self):$/;"	m	class:_FindChangesForModule
get_changed_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def get_changed_module(self, resource=None, pymodule=None,$/;"	m	class:GetterSetterRenameInModule
get_changed_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def get_changed_module(self):$/;"	m	class:ModuleSkipRenamer
get_changed_resources	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_changed_resources(self):$/;"	m	class:Change
get_changed_resources	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_changed_resources(self):$/;"	m	class:ChangeContents
get_changed_resources	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_changed_resources(self):$/;"	m	class:ChangeSet
get_changed_resources	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_changed_resources(self):$/;"	m	class:CreateResource
get_changed_resources	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_changed_resources(self):$/;"	m	class:MoveResource
get_changed_resources	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_changed_resources(self):$/;"	m	class:RemoveResource
get_changed_source	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def get_changed_source(self):$/;"	m	class:ModuleImports
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixmodnames.py	/^    def get_changes(self, fixer=str.lower,$/;"	m	class:FixModuleNames
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_changes(self):$/;"	m	class:GenerateModule
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_changes(self):$/;"	m	class:GeneratePackage
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_changes(self):$/;"	m	class:_Generate
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def get_changes(self, changers, in_hierarchy=False, resources=None,$/;"	m	class:ChangeSignature
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def get_changes(self, getter=None, setter=None, resources=None,$/;"	m	class:EncapsulateField
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_changes(self, extracted_name, similar=False, global_=False):$/;"	m	class:_ExtractRefactoring
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_changes(self, **kwds):$/;"	m	class:InlineParameter
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_changes(self, *args, **kwds):$/;"	m	class:_Inliner
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_changes(self, remove=True, only_current=False, resources=None,$/;"	m	class:InlineMethod
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_changes(self, remove=True, only_current=False, resources=None,$/;"	m	class:InlineVariable
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def get_changes(self, factory_name, global_factory=False, resources=None,$/;"	m	class:IntroduceFactory
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_parameter.py	/^    def get_changes(self, new_parameter):$/;"	m	class:IntroduceParameter
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\localtofield.py	/^    def get_changes(self):$/;"	m	class:LocalToField
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\method_object.py	/^    def get_changes(self, classname=None, new_class_name=None):$/;"	m	class:MethodObject
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def get_changes(self, dest, resources=None,$/;"	m	class:MoveGlobal
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def get_changes(self, dest, resources=None,$/;"	m	class:MoveModule
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def get_changes(self, dest_attr, new_name=None, resources=None,$/;"	m	class:MoveMethod
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def get_changes(self, new_name, in_file=None, in_hierarchy=False,$/;"	m	class:Rename
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def get_changes(self, new_name, only_calls=False, reads=True, writes=True):$/;"	m	class:ChangeOccurrences
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def get_changes(self, checks=None, imports=None, resources=None,$/;"	m	class:Restructure
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\topackage.py	/^    def get_changes(self):$/;"	m	class:ModuleToPackage
get_changes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def get_changes(self, resources=None,$/;"	m	class:UseFunction
get_checks	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_checks(self):$/;"	m	class:_ExtractMethodParts
get_checks	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_checks(self):$/;"	m	class:_ExtractVariableParts
get_child	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def get_child(self, name):$/;"	m	class:Folder
get_child_nodes	.\bundle\ropevim\ftplugin\python\libs\rope\base\ast.py	/^def get_child_nodes(node):$/;"	f
get_children	.\bundle\ropevim\ftplugin\python\libs\rope\base\ast.py	/^def get_children(node):$/;"	f
get_children	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def get_children(self):$/;"	m	class:Folder
get_children	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def get_children(self):$/;"	m	class:Suite
get_classes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_classes(self, task_handle=taskhandle.NullTaskHandle()):$/;"	m	class:PyCore
get_comment_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^def get_comment_pattern():$/;"	f
get_cursor_location	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def get_cursor_location(self, mapping):$/;"	m	class:Template
get_default	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def get_default(self):$/;"	m	class:NamedParamProposal
get_defined_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_defined_names(self):$/;"	m	class:Scope
get_defined_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_defined_names(self):$/;"	m	class:TemporaryScope
get_definition	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_definition(self):$/;"	m	class:_ExtractMethodParts
get_definition	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_definition(self):$/;"	m	class:_ExtractVariableParts
get_definition	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_definition(self, primary, pyname, call, host_vars=[],returns=False):$/;"	m	class:_DefinitionGenerator
get_definition_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def get_definition_info(self):$/;"	m	class:ChangeSignature
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_definition_location(self):$/;"	m	class:BuiltinName
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_definition_location(self):$/;"	m	class:DefinedName
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_definition_location(self):$/;"	m	class:EvaluatedName
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_definition_location(self):$/;"	m	class:ImportedModule
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_definition_location(self):$/;"	m	class:ImportedName
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_definition_location(self):$/;"	m	class:PyName
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_definition_location(self):$/;"	m	class:UnboundName
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def get_definition_location(self):$/;"	m	class:AssignedName
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def get_definition_location(self):$/;"	m	class:ParameterName
get_definition_location	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def get_definition_location(project, source_code, offset,$/;"	f
get_description	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_description(self):$/;"	m	class:Change
get_description	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_description(self):$/;"	m	class:ChangeContents
get_description	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_description(self):$/;"	m	class:ChangeSet
get_description	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_description(self):$/;"	m	class:CreateResource
get_description	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def get_description(self):$/;"	m	class:MoveResource
get_dict	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_dict = _create_builtin_getter(Dict)$/;"	v
get_dict_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_dict_type = _create_builtin_type_getter(Dict)$/;"	v
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_doc(self):$/;"	m	class:BuiltinModule
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_doc(self):$/;"	m	class:Str
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_doc(self):$/;"	m	class:_BuiltinElement
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_doc(self):$/;"	m	class:AbstractClass
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_doc(self):$/;"	m	class:AbstractFunction
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_doc(self):$/;"	m	class:AbstractModule
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_doc(self):$/;"	m	class:PyDefinedObject
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def get_doc(self):$/;"	m	class:CompletionProposal
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def get_doc(self, pyobject):$/;"	m	class:PyDocExtractor
get_doc	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def get_doc(project, source_code, offset, resource=None, maxfixes=1):$/;"	f
get_doc	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def get_doc(self):$/;"	m	class:RopeMode
get_docstring	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def get_docstring(node, clean=True):$/;"	f
get_empty_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_empty_import():$/;"	m	class:ImportInfo
get_enclosing_function	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def get_enclosing_function(self, offset):$/;"	m	class:ScopeNameFinder
get_end	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_end(self):$/;"	m	class:Scope
get_exact_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def get_exact_returned(self, pyobject, args):$/;"	m	class:ObjectInfoManager
get_field_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def get_field_name(self):$/;"	m	class:EncapsulateField
get_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_file = _create_builtin_getter(File)$/;"	v
get_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_file(self, path):$/;"	m	class:_Project
get_file_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_file_type = _create_builtin_type_getter(File)$/;"	v
get_file_undo_list	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def get_file_undo_list(self, resource):$/;"	m	class:History
get_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_files(self):$/;"	m	class:ObjectDB
get_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_files(self):$/;"	m	class:NoProject
get_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_files(self):$/;"	m	class:Project
get_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_files(self):$/;"	m	class:_FileListCacher
get_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def get_files(self):$/;"	m	class:Folder
get_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_folder(self, path):$/;"	m	class:_Project
get_folders	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def get_folders(self):$/;"	m	class:Folder
get_from_aliased	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_from_aliased(self, offset):$/;"	m	class:Worder
get_from_aliased	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_from_aliased(self, offset):$/;"	m	class:_RealFinder
get_from_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def get_from_import(self, resource, name):$/;"	m	class:ImportTools
get_from_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_from_module(self, offset):$/;"	m	class:Worder
get_from_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_from_module(self, offset):$/;"	m	class:_RealFinder
get_function_and_args_in_header	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_function_and_args_in_header(self, offset):$/;"	m	class:Worder
get_function_and_args_in_header	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_function_and_args_in_header(self, offset):$/;"	m	class:_RealFinder
get_function_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def get_function_name(self):$/;"	m	class:_FunctionParser
get_function_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_function_name(self):$/;"	m	class:_DefinitionGenerator
get_function_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def get_function_name(self):$/;"	m	class:UseFunction
get_generator	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_generator = _create_builtin_getter(Generator)$/;"	v
get_holding_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_holding_objects(self):$/;"	m	class:Tuple
get_holding_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_holding_scope(self, module_scope, lineno, line_indents=None):$/;"	m	class:_HoldingScopeFinder
get_holding_scope_for_offset	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_holding_scope_for_offset(self, scope, offset):$/;"	m	class:_HoldingScopeFinder
get_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def get_import(self, resource):$/;"	m	class:ImportTools
get_import_statement	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_import_statement(self):$/;"	m	class:FromImport
get_import_statement	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_import_statement(self):$/;"	m	class:ImportInfo
get_import_statement	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_import_statement(self):$/;"	m	class:ImportStatement
get_import_statement	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_import_statement(self):$/;"	m	class:NormalImport
get_imported_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_imported_module(self, context):$/;"	m	class:FromImport
get_imported_names	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_imported_names(self, context):$/;"	m	class:ImportInfo
get_imported_primaries	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_imported_primaries(self, context):$/;"	m	class:EmptyImport
get_imported_primaries	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_imported_primaries(self, context):$/;"	m	class:FromImport
get_imported_primaries	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_imported_primaries(self, context):$/;"	m	class:ImportInfo
get_imported_primaries	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_imported_primaries(self, context):$/;"	m	class:NormalImport
get_imported_resource	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_imported_resource(self, context):$/;"	m	class:FromImport
get_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^def get_imports(pycore, pydefined):$/;"	f
get_indent	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\sourceutils.py	/^def get_indent(pycore):$/;"	f
get_indents	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_indents(self, lineno):$/;"	m	class:_HoldingScopeFinder
get_indents	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\sourceutils.py	/^def get_indents(lines, lineno):$/;"	f
get_indicator	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def get_indicator(self, resource):$/;"	m	class:ChangeIndicator
get_inner_scope_for_line	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_inner_scope_for_line(self, lineno, indents=None):$/;"	m	class:GlobalScope
get_inner_scope_for_offset	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_inner_scope_for_offset(self, offset):$/;"	m	class:GlobalScope
get_insertion_lineno	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_insertion_lineno(self):$/;"	m	class:_GenerationInfo
get_insertion_offsets	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_insertion_offsets(self):$/;"	m	class:_GenerationInfo
get_insertion_resource	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_insertion_resource(self):$/;"	m	class:_GenerationInfo
get_instance	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def get_instance(self):$/;"	m	class:_FunctionParser
get_instance_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_instance_pyname(self):$/;"	m	class:Arguments
get_instance_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_instance_pyname(self):$/;"	m	class:MixedArguments
get_instance_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_instance_pyname(self):$/;"	m	class:ObjectArguments
get_iterator	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_iterator = _create_builtin_getter(Iterator)$/;"	v
get_jobsets	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def get_jobsets(self):$/;"	m	class:NullTaskHandle
get_jobsets	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def get_jobsets(self):$/;"	m	class:TaskHandle
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_kind(self):$/;"	m	class:Lambda
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_kind(self):$/;"	m	class:PyFunction
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_kind(self):$/;"	m	class:ClassScope
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_kind(self):$/;"	m	class:FunctionScope
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_kind(self):$/;"	m	class:GlobalScope
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_kind(self):$/;"	m	class:Scope
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_kind(self):$/;"	m	class:TemporaryScope
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_kind(self):$/;"	m	class:InlineMethod
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_kind(self):$/;"	m	class:InlineParameter
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_kind(self):$/;"	m	class:InlineVariable
get_kind	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def get_kind(self):$/;"	m	class:_Inliner
get_kwds	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def get_kwds(values):$/;"	f	function:RopeMode.find_implementations
get_kwds	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^        def get_kwds(values):$/;"	f	function:RopeMode.find_occurrences
get_lambda_and_args	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_lambda_and_args(self, offset):$/;"	m	class:Worder
get_lambda_and_args	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_lambda_and_args(self, offset):$/;"	m	class:_RealFinder
get_line	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def get_line(self, line_number):$/;"	m	class:ArrayLinesAdapter
get_line	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def get_line(self, lineno):$/;"	m	class:SourceLinesAdapter
get_line_end	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def get_line_end(self, lineno):$/;"	m	class:SourceLinesAdapter
get_line_number	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def get_line_number(self, offset):$/;"	m	class:SourceLinesAdapter
get_line_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def get_line_start(self, lineno):$/;"	m	class:SourceLinesAdapter
get_lineno	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_lineno(self):$/;"	m	class:AssignmentValue
get_list	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_list = _create_builtin_getter(List)$/;"	v
get_list_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_list_type = _create_builtin_type_getter(List)$/;"	v
get_location	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_location(self):$/;"	m	class:GenerateModule
get_location	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_location(self):$/;"	m	class:GeneratePackage
get_location	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_location(self):$/;"	m	class:_Generate
get_location	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^        def get_location(stmt):$/;"	f	function:ModuleImports._compare_import_locations
get_logical_end	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_logical_end(self):$/;"	m	class:Scope
get_match_regions	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_match_regions(self, *args, **kwds):$/;"	m	class:SimilarFinder
get_matches	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_matches(self, code, args={}, start=0, end=None):$/;"	m	class:SimilarFinder
get_matches	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_matches(self, code, start=0, end=None, skip=None):$/;"	m	class:RawSimilarFinder
get_method_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def get_method_name(self):$/;"	m	class:MoveMethod
get_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_module(self):$/;"	m	class:Lambda
get_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_module(self, name, folder=None):$/;"	m	class:PyCore
get_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_module(self):$/;"	m	class:PyDefinedObject
get_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_module(self):$/;"	m	class:PyPackage
get_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_module(self):$/;"	m	class:_ScopeVisitor
get_module_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^def get_module_imports(pycore, pymodule):$/;"	f
get_modules	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def get_modules(self, name):$/;"	m	class:AutoImport
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_name(self):$/;"	m	class:BuiltinModule
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_name(self):$/;"	m	class:BuiltinUnknown
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_name(self):$/;"	m	class:Lambda
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_name(self):$/;"	m	class:_BuiltinElement
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_name(self):$/;"	m	class:AbstractClass
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_name(self):$/;"	m	class:AbstractFunction
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_name(self):$/;"	m	class:PyClass
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_name(self):$/;"	m	class:PyFunction
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_name(self, name):$/;"	m	class:GlobalScope
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_name(self, name):$/;"	m	class:Scope
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def get_name(self):$/;"	m	class:JobSet
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def get_name(self):$/;"	m	class:NullJobSet
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_name(self):$/;"	m	class:_FunctionGenerationInfo
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_name(self):$/;"	m	class:_GenerationInfo
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\introduce_factory.py	/^    def get_name(self):$/;"	m	class:IntroduceFactory
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def get_name(self):$/;"	m	class:DefaultWildcard
get_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def get_name(self):$/;"	m	class:Wildcard
get_name_at	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^def get_name_at(resource, offset):$/;"	f
get_name_levels	.\bundle\ropevim\ftplugin\python\libs\rope\base\astutils.py	/^def get_name_levels(node):$/;"	f
get_name_locations	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def get_name_locations(self, name):$/;"	m	class:AutoImport
get_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_names(self):$/;"	m	class:StarImport
get_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_names(self):$/;"	m	class:FunctionScope
get_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_names(self):$/;"	m	class:GlobalScope
get_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_names(self):$/;"	m	class:Scope
get_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_names(self):$/;"	m	class:TemporaryScope
get_names	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_names(self):$/;"	m	class:CodeTemplate
get_new_class	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\method_object.py	/^    def get_new_class(self, name):$/;"	m	class:MethodObject
get_new_method	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def get_new_method(self, name):$/;"	m	class:MoveMethod
get_new_start	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_new_start(self):$/;"	m	class:ImportStatement
get_no_project	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^def get_no_project():$/;"	f
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_object(self):$/;"	m	class:BuiltinName
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_object(self):$/;"	m	class:DefinedName
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_object(self):$/;"	m	class:EvaluatedName
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_object(self):$/;"	m	class:ImportedModule
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_object(self):$/;"	m	class:ImportedName
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_object(self):$/;"	m	class:PyName
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def get_object(self):$/;"	m	class:UnboundName
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def get_object(self):$/;"	m	class:AssignedName
get_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def get_object(self):$/;"	m	class:ParameterName
get_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def get_objects(self):$/;"	m	class:ParameterName
get_offset	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def get_offset(self):$/;"	m	class:Environment
get_offset	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def get_offset(self):$/;"	m	class:VimUtils
get_old_location	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def get_old_location(self):$/;"	m	class:ImportStatement
get_old_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def get_old_name(self):$/;"	m	class:ChangeOccurrences
get_old_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def get_old_name(self):$/;"	m	class:Rename
get_package	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_package(self):$/;"	m	class:_GenerationInfo
get_param_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_param_names(self, special_args=True):$/;"	m	class:BuiltinFunction
get_param_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_param_names(self, special_args=True):$/;"	m	class:Lambda
get_param_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_param_names(self, special_args=True):$/;"	m	class:AbstractFunction
get_param_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_param_names(self, special_args=True):$/;"	m	class:PyFunction
get_parameter	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_parameter(self, index):$/;"	m	class:PyFunction
get_parameter_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def get_parameter_objects(self, pyobject):$/;"	m	class:ObjectInfoManager
get_parameters	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_parameters(self):$/;"	m	class:CallInfo
get_parameters	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_parameters(self):$/;"	m	class:PyFunction
get_parameters	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_parameters(self, first, last):$/;"	m	class:Worder
get_parameters	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_parameters(self, first, last):$/;"	m	class:_RealFinder
get_parameters	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def get_parameters(self):$/;"	m	class:_FunctionParser
get_passed_args	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_passed_args(self):$/;"	m	class:_FunctionGenerationInfo
get_passed_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def get_passed_objects(self, pyfunction, parameter_index):$/;"	m	class:ObjectInfoManager
get_passed_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def get_passed_objects(pyfunction, parameter_index):$/;"	f
get_patched_ast	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^def get_patched_ast(source, sorted_children=False):$/;"	f
get_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_per_name(self):$/;"	m	class:_CallContext
get_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def get_per_name(self, name):$/;"	m	class:ScopeInfo
get_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_per_name(self, name):$/;"	m	class:ScopeInfo
get_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_per_name(self, name):$/;"	m	class:_NullScopeInfo
get_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def get_per_name(self, scope, name):$/;"	m	class:ObjectInfoManager
get_percent_done	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def get_percent_done(self):$/;"	m	class:JobSet
get_percent_done	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def get_percent_done(self):$/;"	m	class:NullJobSet
get_pername	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_pername(self, path, key, name):$/;"	m	class:ObjectDB
get_prefs	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_prefs(self):$/;"	m	class:_Project
get_primary_and_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def get_primary_and_pyname(self):$/;"	m	class:Occurrence
get_primary_and_pyname_at	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def get_primary_and_pyname_at(self, offset):$/;"	m	class:ScopeNameFinder
get_primary_at	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_primary_at(self, offset):$/;"	m	class:Worder
get_primary_at	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_primary_at(self, offset):$/;"	m	class:_RealFinder
get_primary_range	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_primary_range(self, offset):$/;"	m	class:Worder
get_primary_range	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_primary_range(self, offset):$/;"	m	class:_RealFinder
get_primary_range	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def get_primary_range(self):$/;"	m	class:Occurrence
get_propagated_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_propagated_names(self):$/;"	m	class:ClassScope
get_propagated_names	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_propagated_names(self):$/;"	m	class:Scope
get_property_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_property_object(self, args):$/;"	m	class:Property
get_pycore	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_pycore(self):$/;"	m	class:_Project
get_pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_pymodule(self, name):$/;"	m	class:_ExtensionCache
get_pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_pymodule(self, resource, force_errors=False):$/;"	m	class:_ModuleCache
get_pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def get_pymodule(self):$/;"	m	class:FixSyntax
get_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_pyname(self, name):$/;"	m	class:_CallContext
get_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def get_pyname(self):$/;"	m	class:Occurrence
get_pyname_at	.\bundle\ropevim\ftplugin\python\libs\rope\base\evaluate.py	/^    def get_pyname_at(self, offset):$/;"	m	class:ScopeNameFinder
get_pynames	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_pynames(self, parameters):$/;"	m	class:Arguments
get_pynames	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_pynames(self, parameters):$/;"	m	class:MixedArguments
get_pynames	.\bundle\ropevim\ftplugin\python\libs\rope\base\arguments.py	/^    def get_pynames(self, parameters):$/;"	m	class:ObjectArguments
get_pynames	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_pynames(self, argnames):$/;"	m	class:_CallContext
get_python_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_python_files(self):$/;"	m	class:PyCore
get_python_path_folders	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_python_path_folders(self):$/;"	m	class:PyCore
get_region	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_region(self):$/;"	m	class:ExpressionMatch
get_region	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_region(self):$/;"	m	class:Match
get_region	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_region(self):$/;"	m	class:StatementMatch
get_region	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def get_region(self):$/;"	m	class:Environment
get_region	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def get_region(self):$/;"	m	class:VimUtils
get_relative_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_relative_module(self, name, folder, level):$/;"	m	class:PyCore
get_relative_to_absolute_list	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def get_relative_to_absolute_list(self):$/;"	m	class:ModuleImports
get_replacement_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_replacement_pattern(self):$/;"	m	class:_ExtractMethodParts
get_replacement_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def get_replacement_pattern(self):$/;"	m	class:_ExtractVariableParts
get_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_resource(self, name):$/;"	m	class:NoProject
get_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def get_resource(self, resource_name):$/;"	m	class:_Project
get_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_resource(self):$/;"	m	class:AbstractModule
get_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_resource(self):$/;"	m	class:_PyModule
get_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def get_returned(self, parameters):$/;"	m	class:ScopeInfo
get_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_returned(self):$/;"	m	class:CallInfo
get_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_returned(self, parameters):$/;"	m	class:ScopeInfo
get_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_returned(self, parameters):$/;"	m	class:_NullScopeInfo
get_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def get_returned(self, path, key, args):$/;"	m	class:ObjectDB
get_returned	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def get_returned(self, pyobject, args):$/;"	m	class:ObjectInfoManager
get_returned_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_returned_object(self, args):$/;"	m	class:BuiltinFunction
get_returned_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_returned_object(self, args):$/;"	m	class:Generator
get_returned_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_returned_object(self, args):$/;"	m	class:Iterator
get_returned_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_returned_object(self, args):$/;"	m	class:Lambda
get_returned_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_returned_object(self, args):$/;"	m	class:AbstractFunction
get_returned_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_returned_object(self, args):$/;"	m	class:PyFunction
get_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def get_scope(self):$/;"	m	class:Lambda
get_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_scope(self):$/;"	m	class:PyDefinedObject
get_scope_indents	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def get_scope_indents(self):$/;"	m	class:_GenerationInfo
get_scopes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_scopes(self):$/;"	m	class:Scope
get_self_import_fix_and_rename_list	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def get_self_import_fix_and_rename_list(self):$/;"	m	class:ModuleImports
get_send_info	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def get_send_info(self):$/;"	m	class:_FIFOReceiver
get_send_info	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def get_send_info(self):$/;"	m	class:_MessageReceiver
get_send_info	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def get_send_info(self):$/;"	m	class:_SocketReceiver
get_separating_line_count	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def get_separating_line_count(self):$/;"	m	class:_GlobalImportFinder
get_set	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_set = _create_builtin_getter(Set)$/;"	v
get_set_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_set_type = _create_builtin_type_getter(Set)$/;"	v
get_sorted_proposal_list	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def get_sorted_proposal_list(self):$/;"	m	class:_ProposalSorter
get_source_folders	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_source_folders(self):$/;"	m	class:PyCore
get_splitted_primary_before	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_splitted_primary_before(self, offset):$/;"	m	class:Worder
get_splitted_primary_before	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_splitted_primary_before(self, offset):$/;"	m	class:_RealFinder
get_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_start(self):$/;"	m	class:GlobalScope
get_start	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def get_start(self):$/;"	m	class:Scope
get_start	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def get_start(self):$/;"	m	class:Suite
get_str	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_str = _create_builtin_getter(Str)$/;"	v
get_str_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_str_type = _create_builtin_type_getter(Str)$/;"	v
get_string_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_string_module(self, code, resource=None, force_errors=False):$/;"	m	class:PyCore
get_string_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^def get_string_pattern():$/;"	f
get_string_scope	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def get_string_scope(self, code, resource=None):$/;"	m	class:PyCore
get_superclasses	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_superclasses(self):$/;"	m	class:AbstractClass
get_superclasses	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def get_superclasses(self):$/;"	m	class:PyClass
get_text	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def get_text(self):$/;"	m	class:Environment
get_text	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def get_text(self):$/;"	m	class:VimUtils
get_tuple	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_tuple = _create_builtin_getter(Tuple)$/;"	v
get_tuple_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^get_tuple_type = _create_builtin_type_getter(Tuple)$/;"	v
get_type	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def get_type(self):$/;"	m	class:PyObject
get_unknown	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^def get_unknown():$/;"	f
get_used_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def get_used_imports(self, defined_pyobject):$/;"	m	class:ModuleImports
get_var	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def get_var(self, name):$/;"	m	class:_RopeVariable
get_word_at	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_word_at(self, offset):$/;"	m	class:Worder
get_word_at	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_word_at(self, offset):$/;"	m	class:_RealFinder
get_word_parens_range	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_word_parens_range(self, offset):$/;"	m	class:Worder
get_word_parens_range	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_word_parens_range(self, offset, opening='(', closing=')'):$/;"	m	class:_RealFinder
get_word_range	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_word_range(self, offset):$/;"	m	class:Worder
get_word_range	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def get_word_range(self, offset):$/;"	m	class:_RealFinder
get_word_range	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def get_word_range(self):$/;"	m	class:Occurrence
github_url	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
global_	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def global_(self):$/;"	m	class:_ExtractInfo
global_command	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^def global_command(key=None, prefix=False):$/;"	f
global_command	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def global_command(self, name, callback, key=None, prefix=False):$/;"	m	class:Environment
global_command	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def global_command(self, name, callback, key=None, prefix=False):$/;"	m	class:VimUtils
global_trace	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^            def global_trace(frame, event, arg):$/;"	f	function:__rope_start_everything._FunctionCallDataSender.__init__
goto_definition	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def goto_definition(self):$/;"	m	class:RopeMode
goto_line	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def goto_line(self, lineno):$/;"	m	class:Environment
goto_line	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def goto_line(self, lineno):$/;"	m	class:VimUtils
gsub	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
handleChildren	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def handleChildren(self, tree):$/;"	m	class:Checker
handleLeftClick	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:handleMiddleMouse()$/;"	f
handleNode	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def handleNode(self, node, parent):$/;"	m	class:Checker
handle_long_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def handle_long_imports(self, pymodule, maxdots=2, maxlength=27,$/;"	m	class:ImportTools
handle_long_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def handle_long_imports(self, resource, offset=None):$/;"	m	class:ImportOrganizer
handle_long_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def handle_long_imports(self, maxdots, maxlength):$/;"	m	class:ModuleImports
has_child	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def has_child(self, name):$/;"	m	class:Folder
has_errors	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def has_errors(code):$/;"	m	class:_UnmatchedBreakOrContinueFinder
history	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def history(self):$/;"	m	class:_Project
iabbrev_map	.\bundle\supertab\plugin\supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
id_or_underline	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^        def id_or_underline(c):$/;"	f	function:_FunctionGenerationInfo._is_id
ignore	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def ignore(self, node):$/;"	m	class:Checker
ignore_exception	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^def ignore_exception(exception_class):$/;"	f
ignored_regions	.\bundle\ropevim\ftplugin\python\libs\rope\base\simplify.py	/^def ignored_regions(source):$/;"	f
importStarred	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    importStarred = False       # set to True when import * is found$/;"	v	class:Scope
import_assist	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def import_assist(self, starting):$/;"	m	class:AutoImport
import_filter	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^        def import_filter(import_stmt):$/;"	f	function:ImportOrganizer._line_filter
import_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    import_info = property(_get_import_info, _set_import_info)$/;"	v	class:ImportStatement
imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def imports(self):$/;"	m	class:ModuleImports
increment_lineno	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def increment_lineno(node, n=1):$/;"	f
indent	.\bundle\vim-python-pep8-indent\spec\indent\indent_spec.rb	/^  def indent$/;"	f
indent_lines	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\sourceutils.py	/^def indent_lines(source_code, amount):$/;"	f
indents	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def indents(self):$/;"	m	class:_ExtractInfo
infer_assigned_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def infer_assigned_object(pyname):$/;"	f
infer_parameter_objects	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def infer_parameter_objects(pyfunction):$/;"	f
infer_returned_object	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\soi.py	/^def infer_returned_object(pyfunction, args):$/;"	f
init	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def init(self):$/;"	m	class:RopeMode
initVariable	.\bundle\nerdtree\plugin\NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
inline_default	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def inline_default(self, index):$/;"	m	class:ChangeSignature
input_exceptions	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^input_exceptions = (exceptions.RefactoringError,$/;"	v
insert	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def insert(self, text):$/;"	m	class:Environment
insert	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def insert(self, text):$/;"	m	class:VimUtils
insert_line	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def insert_line(self, line, lineno):$/;"	m	class:Environment
insert_line	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def insert_line(self, line, lineno):$/;"	m	class:VimUtils
insert_shortcuts	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^insert_shortcuts = {'code_assist': '<M-\/>',$/;"	v
instance_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def instance_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
instaweb_url	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
invalidate	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def invalidate(self):$/;"	m	class:EvaluatedName
invalidate	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynamesdef.py	/^    def invalidate(self):$/;"	m	class:AssignedName
invalidate_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def invalidate_data(self):$/;"	m	class:FunctionScope
isDocstring	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def isDocstring(self, node):$/;"	m	class:Checker
is_a_class_or_function_name_in_header	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_a_class_or_function_name_in_header(self, offset):$/;"	m	class:Worder
is_a_class_or_function_name_in_header	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_a_class_or_function_name_in_header(self, offset):$/;"	m	class:_RealFinder
is_a_fixed_primary	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def is_a_fixed_primary(self):$/;"	m	class:Occurrence
is_a_function_being_called	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_a_function_being_called(self, offset):$/;"	m	class:Worder
is_a_function_being_called	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_a_function_being_called(self, offset):$/;"	m	class:_RealFinder
is_a_name_after_from_import	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_a_name_after_from_import(self, offset):$/;"	m	class:Worder
is_a_name_after_from_import	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_a_name_after_from_import(self, offset):$/;"	m	class:_RealFinder
is_assigned_here	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_assigned_here(self, offset):$/;"	m	class:Worder
is_assigned_here	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_assigned_here(self, offset):$/;"	m	class:_RealFinder
is_assigned_in_a_tuple_assignment	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_assigned_in_a_tuple_assignment(self, offset):$/;"	m	class:Worder
is_assigned_in_a_tuple_assignment	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_assigned_in_a_tuple_assignment(self, offset):$/;"	m	class:_RealFinder
is_bound	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def is_bound(self, name, propagated=False):$/;"	m	class:_UnboundNameFinder
is_bound	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def is_bound(self, primary, propagated=False):$/;"	m	class:_GlobalUnboundNameFinder
is_bound	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def is_bound(self, primary, propagated=False):$/;"	m	class:_LocalUnboundNameFinder
is_called	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def is_called(self):$/;"	m	class:Occurrence
is_called_as_a_method	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def is_called_as_a_method(self):$/;"	m	class:_FunctionParser
is_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def is_changed(self, start, end):$/;"	m	class:_TextChangeDetector
is_changed	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def is_changed(self):$/;"	m	class:ImportStatement
is_constructor	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def is_constructor(self):$/;"	m	class:_FunctionGenerationInfo
is_defined	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^    def is_defined(occurrence):$/;"	f	function:find_implementations
is_defined	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def is_defined(self):$/;"	m	class:Occurrence
is_empty	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def is_empty(self):$/;"	m	class:EmptyImport
is_empty	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def is_empty(self):$/;"	m	class:FromImport
is_empty	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def is_empty(self):$/;"	m	class:ImportInfo
is_empty	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def is_empty(self):$/;"	m	class:NormalImport
is_file_valid	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def is_file_valid(self, path):$/;"	m	class:TextualValidation
is_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def is_folder(self):$/;"	m	class:File
is_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def is_folder(self):$/;"	m	class:Folder
is_folder	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def is_folder(self):$/;"	m	class:Resource
is_from_aliased	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_from_aliased(self, offset):$/;"	m	class:Worder
is_from_aliased	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_from_aliased(self, offset):$/;"	m	class:_RealFinder
is_from_statement	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_from_statement(self, offset):$/;"	m	class:Worder
is_from_statement	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_from_statement(self, offset):$/;"	m	class:_RealFinder
is_from_statement_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_from_statement_module(self, offset):$/;"	m	class:Worder
is_from_statement_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_from_statement_module(self, offset):$/;"	m	class:_RealFinder
is_function_keyword_parameter	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_function_keyword_parameter(self, offset):$/;"	m	class:Worder
is_function_keyword_parameter	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_function_keyword_parameter(self, offset):$/;"	m	class:_RealFinder
is_ignored	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def is_ignored(self, resource):$/;"	m	class:Project
is_ignored	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def is_ignored(self, resource):$/;"	m	class:_Project
is_import_statement	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_import_statement(self, offset):$/;"	m	class:Worder
is_import_statement	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_import_statement(self, offset):$/;"	m	class:_RealFinder
is_in_import_statement	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def is_in_import_statement(self):$/;"	m	class:Occurrence
is_instance	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def is_instance(self):$/;"	m	class:_FunctionGenerationInfo
is_match	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^    def is_match(occurrence):$/;"	f	function:find_occurrences
is_method	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def is_method(self):$/;"	m	class:_FunctionGenerationInfo
is_method	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def is_method(self):$/;"	m	class:ChangeSignature
is_method	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^    def is_method(self):$/;"	m	class:Rename
is_modified	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def is_modified(self):$/;"	m	class:Environment
is_modified	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def is_modified(self):$/;"	m	class:VimUtils
is_more_valid	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def is_more_valid(self, new, old):$/;"	m	class:TextualValidation
is_name_assigned_in_class_body	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_name_assigned_in_class_body(self, offset):$/;"	m	class:Worder
is_name_assigned_in_class_body	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_name_assigned_in_class_body(self, offset):$/;"	m	class:_RealFinder
is_on_function_call_keyword	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_on_function_call_keyword(self, offset):$/;"	m	class:Worder
is_on_function_call_keyword	.\bundle\ropevim\ftplugin\python\libs\rope\base\worder.py	/^    def is_on_function_call_keyword(self, offset):$/;"	m	class:_RealFinder
is_python_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def is_python_file(self, resource):$/;"	m	class:PyCore
is_scope_valid	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def is_scope_valid(self, path, key):$/;"	m	class:TextualValidation
is_star_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def is_star_import(self):$/;"	m	class:FromImport
is_static_method	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def is_static_method(self):$/;"	m	class:_FunctionGenerationInfo
is_stopped	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def is_stopped(self):$/;"	m	class:NullTaskHandle
is_stopped	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def is_stopped(self):$/;"	m	class:TaskHandle
is_unsure	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def is_unsure(self):$/;"	m	class:Occurrence
is_value_valid	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def is_value_valid(self, value):$/;"	m	class:TextualValidation
is_var	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def is_var(self, name):$/;"	m	class:_RopeVariable
is_written	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def is_written(self):$/;"	m	class:Occurrence
iter_child_nodes	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def iter_child_nodes(node):$/;"	f
iter_child_nodes	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def iter_child_nodes(node, astcls=_ast.AST):$/;"	f
iter_child_nodes	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    iter_child_nodes = ast.iter_child_nodes$/;"	v
iter_fields	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def iter_fields(node):$/;"	f
jumpToFirstChild	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextSibling	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevSibling	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:jumpToRoot()$/;"	f
jump_to_global	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def jump_to_global(self):$/;"	m	class:RopeMode
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = '1 p'$/;"	v	class:ModuleToPackage
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = '1 r'$/;"	v	class:RenameCurrentModule
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = '1 v'$/;"	v	class:MoveCurrentModule
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'f'$/;"	v	class:IntroduceFactory
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'i'$/;"	v	class:Inline
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'l'$/;"	v	class:ExtractVariable
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'm'$/;"	v	class:ExtractMethod
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'n c'$/;"	v	class:GenerateClass
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'n f'$/;"	v	class:GenerateFunction
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'n m'$/;"	v	class:GenerateModule
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'n p'$/;"	v	class:GeneratePackage
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'n v'$/;"	v	class:GenerateVariable
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'o'$/;"	v	class:OrganizeImports
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'r'$/;"	v	class:Rename
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 's'$/;"	v	class:ChangeSignature
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'u'$/;"	v	class:UseFunction
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'v'$/;"	v	class:Move
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = 'x'$/;"	v	class:Restructure
key	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    key = None$/;"	v	class:Refactoring
keys	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def keys(self):$/;"	m	class:FileInfo
keys	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def keys(self):$/;"	m	class:MemoryDB
keywords	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    keywords = keyword.kwlist$/;"	v	class:_PythonCodeAssist
kill_process	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def kill_process(self):$/;"	m	class:PythonFileRunner
kind	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def kind(self):$/;"	m	class:CompletionProposal
kind	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    kind = 'method'$/;"	v	class:ExtractMethod
kind	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    kind = 'variable'$/;"	v	class:ExtractVariable
kind	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    kind = 'method'$/;"	v	class:ExtractMethod
kind	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    kind = 'variable'$/;"	v	class:ExtractVariable
kind	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    kind = None$/;"	v	class:_Extract
length	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def length(self):$/;"	m	class:ArrayLinesAdapter
length	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def length(self):$/;"	m	class:SourceLinesAdapter
license	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    license="MIT",$/;"	v
linechars	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:linechars(pattern)$/;"	f
lineno	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def lineno(self):$/;"	m	class:Occurrence
lineno	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def lineno(self):$/;"	m	class:Location
lines	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def lines(self):$/;"	m	class:PyModule
lines	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def lines(self):$/;"	m	class:_HoldingScopeFinder
lines	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def lines(self):$/;"	m	class:_ChangeCallsInModule
lines	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def lines(self):$/;"	m	class:_FindChangesForModule
lines	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def lines(self):$/;"	m	class:_InlineFunctionCallsForModuleHandle
lispfunction	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^def lispfunction(func):$/;"	f
lisphook	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^def lisphook(func):$/;"	f
literal_eval	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def literal_eval(node_or_string):$/;"	f
loaded_nerd_tree	.\bundle\nerdtree\plugin\NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_snips	.\bundle\snipmate\plugin\snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_supertab	.\bundle\supertab\plugin\supertab.vim	/^let loaded_supertab = 1$/;"	v
loaded_taglist	.\plugin\taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	.\plugin\taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	.\plugin\taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	.\plugin\taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_tcomment	.\bundle\tcomment_vim\plugin\tcomment.vim	/^let loaded_tcomment = 208$/;"	v
local_command	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^def local_command(key=None, prefix=False, shortcut=None, name=None):$/;"	f
local_command	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def local_command(self, name, callback, key=None, prefix=False):$/;"	m	class:Environment
local_command	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def local_command(self, name, callback, key=None, prefix=False):$/;"	m	class:VimUtils
local_end	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def local_end(self):$/;"	m	class:Suite
local_start	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def local_start(self):$/;"	m	class:Suite
logger	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^logger = Logger()$/;"	v
logical_end	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    logical_end = property(get_logical_end)$/;"	v	class:Scope
logical_line_in	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def logical_line_in(self, line_number):$/;"	m	class:CachingLogicalLineFinder
logical_line_in	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def logical_line_in(self, line_number):$/;"	m	class:LogicalLineFinder
logical_lines	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjectsdef.py	/^    def logical_lines(self):$/;"	m	class:PyModule
logical_lines	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def logical_lines(self):$/;"	m	class:_HoldingScopeFinder
logical_lines	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def logical_lines(self):$/;"	m	class:_ExtractInfo
lookup	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    def lookup(self, name):$/;"	m	class:Scope
loop_encountered	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def loop_encountered(self, node):$/;"	m	class:_UnmatchedBreakOrContinueFinder
lucky_assist	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def lucky_assist(self, prefix):$/;"	m	class:RopeMode
lucky_assist	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def lucky_assist(self, prefix):$/;"	m	class:_CodeAssist
macvim_skip_colorscheme	.\colors\wow.vim	/^        let macvim_skip_colorscheme=1$/;"	v
main	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\scripts\pyflakes.py	/^def main():$/;"	f
main	.\bundle\tcomment_vim\spec\tcomment\issue30_test.c	/^int main()$/;"	f
main	.\bundle\tcomment_vim\spec\tcomment\issue30_test_2.c	/^int main()$/;"	f
main	.\bundle\tcomment_vim\spec\tcomment\issue30_test_3.c	/^int main()$/;"	f
main_refactoring	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def main_refactoring(self):$/;"	m	class:_MultiRefactoring
maintainer	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    maintainer="Moe Aboulkheir",$/;"	v
maintainer_email	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    maintainer_email="moe@divmod.com",$/;"	v
makeChangeContents	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def makeChangeContents(self, path, new_contents, old_contents):$/;"	m	class:DataToChange
makeChangeSet	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def makeChangeSet(self, description, changes, time=None):$/;"	m	class:DataToChange
makeCreateResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def makeCreateResource(self, path, is_folder):$/;"	m	class:DataToChange
makeMoveResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def makeMoveResource(self, old_path, new_path):$/;"	m	class:DataToChange
makeRemoveResource	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def makeRemoveResource(self, path, is_folder):$/;"	m	class:DataToChange
make_checks	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^    def make_checks(self, string_checks):$/;"	m	class:Restructure
make_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^def make_pattern(code, variables):$/;"	f
map	.\bundle\supertab\plugin\supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	.\bundle\supertab\plugin\supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map_dict	.\bundle\supertab\plugin\supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
matches	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def matches(self, suspect, arg):$/;"	m	class:Wildcard
matches	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^    def matches(self, suspect, arg=''):$/;"	m	class:DefaultWildcard
max_undos	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def max_undos(self):$/;"	m	class:History
merged	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\changestack.py	/^    def merged(self):$/;"	m	class:ChangeStack
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = "'from %s import *' used; unable to detect undefined names"$/;"	v	class:ImportStarUsed
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = "local variable %r (defined in enclosing scope on line %r) referenced before assignment"$/;"	v	class:UndefinedLocal
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = '%r imported but unused'$/;"	v	class:UnusedImport
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = ''$/;"	v	class:Message
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = 'duplicate argument %r in function definition'$/;"	v	class:DuplicateArgument
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = 'future import(s) %r after other statements'$/;"	v	class:LateFutureImport
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = 'import %r from line %r shadowed by loop variable'$/;"	v	class:ImportShadowedByLoopVar
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = 'local variable %r is assigned to but never used'$/;"	v	class:UnusedVariable
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = 'redefinition of function %r from line %r'$/;"	v	class:RedefinedFunction
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = 'redefinition of unused %r from line %r'$/;"	v	class:RedefinedWhileUnused
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = 'undefined name %r in __all__'$/;"	v	class:UndefinedExport
message	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message = 'undefined name %r'$/;"	v	class:UndefinedName
message	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    message = None$/;"	v	class:Logger
message	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def message(self, message):$/;"	m	class:Environment
message	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def message(self, message):$/;"	m	class:VimUtils
message_args	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\messages.py	/^    message_args = ()$/;"	v	class:Message
method	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def method(self):$/;"	m	class:_ExtractInfo
modname	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def modname(self, resource):$/;"	m	class:PyCore
module	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def module(self):$/;"	m	class:BuiltinModule
module_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def module_imports(self, module, imports_filter=None):$/;"	m	class:ImportTools
move	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def move(self, resource, new_resource):$/;"	m	class:_ResourceOperations
move	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def move(self, path, new_location):$/;"	m	class:DarcsCommands
move	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def move(self, path, new_location):$/;"	m	class:FileSystemCommands
move	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def move(self, path, new_location):$/;"	m	class:GITCommands
move	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def move(self, path, new_location):$/;"	m	class:MercurialCommands
move	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def move(self, path, new_location):$/;"	m	class:SubversionCommands
move	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def move(self, new_location):$/;"	m	class:Resource
move	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    def move(self, lineno, blank_lines=0):$/;"	m	class:ImportStatement
moving_code_with_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^def moving_code_with_imports(pycore, resource, source):$/;"	f
multi_line_conditions	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def multi_line_conditions(self, info):$/;"	m	class:_ExceptionalConditionChecker
name	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    name="pyflakes",$/;"	v
name	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def name(self):$/;"	m	class:Resource
name	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def name(self):$/;"	m	class:Refactoring
name_finder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def name_finder(self):$/;"	m	class:_OccurrenceToolsCreator
named_pattern	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^            def named_pattern(name, list_):$/;"	f	function:_DefinitionGenerator._get_return_pattern
names	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def names(self):$/;"	m	class:ExportBinding
names_and_aliases	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\importinfo.py	/^    names_and_aliases = []$/;"	v	class:EmptyImport
nerdtree#bookmarkNode	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#bookmarkNode(...)$/;"	f
nerdtree#bufInWindows	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#bufInWindows(bnum)$/;"	f
nerdtree#centerView	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#centerView()$/;"	f
nerdtree#chRoot	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#chRoot(node)$/;"	f
nerdtree#chRootCwd	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#chRootCwd()$/;"	f
nerdtree#checkForBrowse	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#clearBookmarks	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#clearBookmarks(bookmarks)$/;"	f
nerdtree#closeTree	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#closeTree()$/;"	f
nerdtree#closeTreeIfOpen	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#closeTreeIfOpen()$/;"	f
nerdtree#closeTreeIfQuitOnOpen	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#closeTreeIfQuitOnOpen()$/;"	f
nerdtree#compareBookmarks	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#completeBookmarks	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#createDefaultBindings	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#createDefaultBindings()$/;"	f
nerdtree#deprecated	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#dumpHelp	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#dumpHelp()$/;"	f
nerdtree#echo	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#escChars	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#escChars()$/;"	f
nerdtree#exec	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#findAndRevealPath	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#findAndRevealPath()$/;"	f
nerdtree#firstUsableWindow	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#firstUsableWindow()$/;"	f
nerdtree#getPath	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#getPath(ln)$/;"	f
nerdtree#getTreeWinNum	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#getTreeWinNum()$/;"	f
nerdtree#has_opt	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#indentLevelFor	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#indentLevelFor(line)$/;"	f
nerdtree#invokeKeyMap	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#invokeKeyMap(key)$/;"	f
nerdtree#isTreeOpen	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#isTreeOpen()$/;"	f
nerdtree#isWindowUsable	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#isWindowUsable(winnumber)$/;"	f
nerdtree#jumpToChild	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#jumpToChild(currentNode, direction)$/;"	f
nerdtree#jumpToSibling	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#jumpToSibling(currentNode, forward)$/;"	f
nerdtree#loadClassFiles	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#openBookmark	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#openBookmark(name)$/;"	f
nerdtree#postSourceActions	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#promptToDelBuffer	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#promptToDelBuffer(bufnum, msg)$/;"	f
nerdtree#putCursorInTreeWin	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#putCursorInTreeWin()$/;"	f
nerdtree#putCursorOnBookmarkTable	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#putCursorOnBookmarkTable()$/;"	f
nerdtree#renderBookmarks	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#renderBookmarks()$/;"	f
nerdtree#renderView	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#renderViewSavingPosition	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#renderViewSavingPosition()$/;"	f
nerdtree#restoreScreenState	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#restoreScreenState()$/;"	f
nerdtree#revealBookmark	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#revealBookmark(name)$/;"	f
nerdtree#runningWindows	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#saveScreenState	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#saveScreenState()$/;"	f
nerdtree#stripMarkupFromLine	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
nerdtree#tabpagevar	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#tabpagevar(tabnr, var)$/;"	f
nerdtree#treeExistsForBuf	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#treeExistsForBuf()$/;"	f
nerdtree#treeExistsForTab	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#treeExistsForTab()$/;"	f
nerdtree#treeMarkupReg	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#treeMarkupReg()$/;"	f
nerdtree#treeUpDirLine	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#treeUpDirLine()$/;"	f
nerdtree#treeWid	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#treeWid()$/;"	f
nerdtree#unique	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#unique(list)$/;"	f
nerdtree#upDir	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#upDir(keepState)$/;"	f
nerdtree#version	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! nerdtree#version()$/;"	f
new_pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def new_pymodule(self, pymodule, source):$/;"	m	class:_MoveTools
new_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^        def new_pyname():$/;"	f	function:FixSyntax.pyname_at
new_source	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def new_source(self, pymodule, source):$/;"	m	class:_MoveTools
newfunc	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def newfunc(self, arg):$/;"	f	function:__rope_start_everything._cached
newfunc	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^        def newfunc(*args, **kwds):$/;"	f	function:deprecated._decorator
newfunc	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^        def newfunc(*args, **kwds):$/;"	f	function:ignore_exception._decorator
newfunc	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^        def newfunc(self, *args, **kwds):$/;"	f	function:prevent_recursion.decorator
newfunc	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    def newfunc(*args, **kwds):$/;"	f	function:_exception_handler
newfunc	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    def newfunc(*args, **kwds):$/;"	f	function:lisphook
nodeDepth	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    nodeDepth = 0$/;"	v	class:Checker
node_region	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^def node_region(patched_ast_node):$/;"	f
none_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def none_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
normalize	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def normalize(self):$/;"	m	class:ChangeSignature
not_self	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\findit.py	/^    def not_self(occurrence):$/;"	f	function:find_implementations
occurred_inside_skip	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def occurred_inside_skip(self, change_collector, occurrence):$/;"	m	class:_InlineFunctionCallsForModuleHandle
occurred_inside_skip	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def occurred_inside_skip(self, change_collector, occurrence):$/;"	m	class:ModuleSkipRenamerHandle
occurred_inside_skip	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def occurred_inside_skip(self, change_collector, occurrence):$/;"	m	class:_ChangeMoveOccurrencesHandle
occurred_outside_skip	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def occurred_outside_skip(self, change_collector, occurrence):$/;"	m	class:_InlineFunctionCallsForModuleHandle
occurred_outside_skip	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def occurred_outside_skip(self, change_collector, occurrence):$/;"	m	class:ModuleSkipRenamerHandle
occurred_outside_skip	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def occurred_outside_skip(self, change_collector, occurrence):$/;"	m	class:_ChangeMoveOccurrencesHandle
occurs_in_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def occurs_in_module(self, pymodule=None, resource=None, imports=True):$/;"	m	class:_MoveTools
offset	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def offset(self):$/;"	m	class:_CodeAssist
offset	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def offset(self):$/;"	m	class:Refactoring
offset	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    offset = None$/;"	v	class:MoveCurrentModule
offset	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    offset = None$/;"	v	class:RenameCurrentModule
old_name	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^            old_name = self.old_name$/;"	v	class:_MoveTools.remove_old_imports.CanSelect
old_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^        def old_pyname():$/;"	f	function:FixSyntax.pyname_at
old_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^            old_pyname = self.old_pyname$/;"	v	class:_MoveTools.remove_old_imports.CanSelect
on_function_call	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def on_function_call(self, frame, event, arg):$/;"	m	class:__rope_start_everything._FunctionCallDataSender
one_line	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def one_line(self):$/;"	m	class:_ExtractInfo
one_line_conditions	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def one_line_conditions(self, info):$/;"	m	class:_ExceptionalConditionChecker
only_short	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^    only_short = False$/;"	v	class:Logger
openExplorer	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:openVSplit(target)$/;"	f
open_project	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def open_project(self, root=None):$/;"	m	class:RopeMode
optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    optionals = {'similar': dialog.Boolean('Extract similar pieces: ', True),$/;"	v	class:_Extract
optionals	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    optionals = {}$/;"	v	class:Refactoring
organize_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def organize_imports(self, pymodule,$/;"	m	class:ImportTools
organize_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def organize_imports(self, resource, offset=None):$/;"	m	class:ImportOrganizer
os	.\ftplugin\python.vim	/^import os$/;"	m
os.path	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^import os.path$/;"	m
os.path	.\ftplugin\python.vim	/^import os.path$/;"	m
packages	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    packages=["pyflakes", "pyflakes.scripts", "pyflakes.test"],$/;"	v
parameters	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def parameters(self):$/;"	m	class:CompletionProposal
parent	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def parent(self):$/;"	m	class:Lambda
parent	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def parent(self):$/;"	m	class:_BuiltinElement
parent	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    parent = None$/;"	v	class:BuiltinModule
parent	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def parent(self):$/;"	m	class:Resource
parse	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def parse(expr, filename='<unknown>', mode='exec'):$/;"	f
parse	.\bundle\ropevim\ftplugin\python\libs\rope\base\ast.py	/^def parse(source, filename='<string>'):$/;"	f
parse_arg	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\wildcards.py	/^def parse_arg(arg):$/;"	f
patch_ast	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^def patch_ast(node, source, sorted_children=False):$/;"	f
path	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def path(self):$/;"	m	class:Resource
path_to_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\libutils.py	/^def path_to_resource(project, path, type=None):$/;"	f
path_to_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def path_to_resource(self, path):$/;"	m	class:DOITextualToPyObject
path_to_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def path_to_resource(self, path):$/;"	m	class:TextualToPyObject
pathogen#cycle_filetype	.\autoload\pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#execute	.\autoload\pathogen.vim	/^function! pathogen#execute(...) abort " {{{1$/;"	f
pathogen#fnameescape	.\autoload\pathogen.vim	/^function! pathogen#fnameescape(string) abort " {{{1$/;"	f
pathogen#glob	.\autoload\pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	.\autoload\pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	.\autoload\pathogen.vim	/^function! pathogen#helptags() abort " {{{1$/;"	f
pathogen#incubate	.\autoload\pathogen.vim	/^function! pathogen#incubate(...) abort " {{{1$/;"	f
pathogen#infect	.\autoload\pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	.\autoload\pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	.\autoload\pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	.\autoload\pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	.\autoload\pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) abort " {{{1$/;"	f
pathogen#runtime_findfile	.\autoload\pathogen.vim	/^function! pathogen#runtime_findfile(file,count) abort "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	.\autoload\pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	.\autoload\pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	.\autoload\pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#surround	.\autoload\pathogen.vim	/^function! pathogen#surround(path) abort " {{{1$/;"	f
pathogen#uniq	.\autoload\pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
perform	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^def perform(project_changes):$/;"	f
perform	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^        def perform(handle, self=self, changes=changes):$/;"	f	function:Refactoring._perform
perform_soa_on_changed_scopes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^def perform_soa_on_changed_scopes(project, resource, old_contents):$/;"	f
persist	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def persist(self):$/;"	m	class:MemoryDB
popScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def popScope(self):$/;"	m	class:Checker
pop_all	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\changestack.py	/^    def pop_all(self):$/;"	m	class:ChangeStack
pop_mark	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def pop_mark(self):$/;"	m	class:Environment
pop_mark	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def pop_mark(self):$/;"	m	class:RopeMode
prefix_value	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def prefix_value(self, prefix):$/;"	m	class:Environment
prefix_value	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def prefix_value(self, prefix):$/;"	m	class:VimUtils
prevent_recursion	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^def prevent_recursion(default):$/;"	f
previewNodeCurrent	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:previewNodeVSplit(node)$/;"	f
preview_changes	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def preview_changes(self, diffs):$/;"	m	class:Environment
preview_changes	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def preview_changes(self, diffs):$/;"	m	class:VimUtils
primary_is_found	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\generate.py	/^    def primary_is_found(self):$/;"	m	class:_GenerationInfo
project	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\multiproject.py	/^    def project(self):$/;"	m	class:_MultiRefactoring
project	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def project(self):$/;"	m	class:Refactoring
project_config	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def project_config(self):$/;"	m	class:RopeMode
project_opened	.\bundle\ropevim\ftplugin\python\libs\rope\base\default_config.py	/^def project_opened(project):$/;"	f
promptToDelBuffer	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	.\bundle\nerdtree\nerdtree_plugin\fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
proposed_indent	.\bundle\vim-python-pep8-indent\spec\indent\indent_spec.rb	/^  def proposed_indent$/;"	f
push	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\changestack.py	/^    def push(self, changes):$/;"	m	class:ChangeStack
pushClassScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def pushClassScope(self):$/;"	m	class:Checker
pushFunctionScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def pushFunctionScope(self):$/;"	m	class:Checker
push_mark	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def push_mark(self):$/;"	m	class:Environment
push_mark	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def push_mark(self):$/;"	m	class:VimUtils
pycore	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def pycore(self):$/;"	m	class:_Project
pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def pymodule(self):$/;"	m	class:_ChangeCallsInModule
pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def pymodule(self):$/;"	m	class:_InlineFunctionCallsForModuleHandle
pymodule	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def pymodule(self):$/;"	m	class:_OccurrenceToolsCreator
pyname_at	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def pyname_at(self, offset):$/;"	m	class:FixSyntax
python_modules	.\bundle\ropevim\ftplugin\python\libs\rope\base\stdmods.py	/^def python_modules():$/;"	f
re	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^import re$/;"	m
re	.\ftplugin\python.vim	/^    import re$/;"	m
read	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def read(self):$/;"	m	class:File
read	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def read(primary, pyname, definition_info, code):$/;"	m	class:CallInfo
read	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def read(pyfunction):$/;"	m	class:DefinitionInfo
read_bytes	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def read_bytes(self):$/;"	m	class:File
read_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def read_data(self, name, compress=False, import_=False):$/;"	m	class:_DataFiles
read_file_coding	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^def read_file_coding(path):$/;"	f
read_str_coding	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^def read_str_coding(source):$/;"	f
readline	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def readline(self):$/;"	m	class:LinesToReadline
real_code	.\bundle\ropevim\ftplugin\python\libs\rope\base\simplify.py	/^def real_code(source):$/;"	f
real_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def real_path(self):$/;"	m	class:Resource
recall	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:recall()$/;"	f
receive_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def receive_data(self):$/;"	m	class:_FIFOReceiver
receive_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def receive_data(self):$/;"	m	class:_MessageReceiver
receive_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def receive_data(self):$/;"	m	class:_SocketReceiver
redo	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def redo(self, change=None, task_handle=taskhandle.NullTaskHandle()):$/;"	m	class:History
redo	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^            def redo(handle):$/;"	f	function:RopeMode.redo
redo	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def redo(self):$/;"	m	class:RopeMode
redo_list	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    redo_list = property(lambda self: self._redo_list)$/;"	v	class:History
refactoring_name	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^def refactoring_name(refactoring):$/;"	f
refreshCurrent	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:refreshRoot()$/;"	f
region	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def region(self):$/;"	m	class:Refactoring
relative	.\bundle\ropevim\ftplugin\python\libs\rope\base\libutils.py	/^def relative(root, path):$/;"	f
relatives_to_absolutes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def relatives_to_absolutes(self, pymodule, import_filter=None):$/;"	m	class:ImportTools
relatives_to_absolutes	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def relatives_to_absolutes(self, resource, offset=None):$/;"	m	class:ImportOrganizer
reload_files	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def reload_files(self, filenames, moves={}):$/;"	m	class:Environment
reload_files	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def reload_files(self, filenames, moves={}):$/;"	m	class:VimUtils
remove	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def remove(self, resource):$/;"	m	class:_ResourceOperations
remove	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def remove(self, path):$/;"	m	class:DarcsCommands
remove	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def remove(self, path):$/;"	m	class:FileSystemCommands
remove	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def remove(self, path):$/;"	m	class:GITCommands
remove	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def remove(self, path):$/;"	m	class:MercurialCommands
remove	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def remove(self, path):$/;"	m	class:SubversionCommands
remove	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def remove(self):$/;"	m	class:Resource
remove	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def remove(self, index):$/;"	m	class:ChangeSignature
remove_duplicates	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def remove_duplicates(self):$/;"	m	class:ModuleImports
remove_observer	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def remove_observer(self, observer):$/;"	m	class:_Project
remove_old_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def remove_old_imports(self, pymodule):$/;"	m	class:_MoveTools
remove_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def remove_pyname(self, pyname):$/;"	m	class:ModuleImports
remove_resource	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def remove_resource(self, resource):$/;"	m	class:FilteredResourceObserver
remove_unused_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def remove_unused_imports(self):$/;"	m	class:ModuleImports
removed	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def removed(self, path):$/;"	m	class:FileListObserver
removed	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def removed(self, path):$/;"	m	class:_FileListObserver
rename	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def rename(self, file, newfile):$/;"	m	class:MemoryDB
rename	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def rename(self, key, new_key):$/;"	m	class:FileDict
rename_in_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\move.py	/^    def rename_in_module(self, new_name, pymodule=None,$/;"	m	class:_MoveTools
rename_in_module	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^def rename_in_module(occurrences_finder, new_name, resource=None, pymodule=None,$/;"	f
reorder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def reorder(self, new_ordering):$/;"	m	class:ChangeSignature
replace	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\restructure.py	/^def replace(code, pattern, goal):$/;"	f
repo	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_configured_tree	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_configured_tree() dict abort$/;"	f
repo_dir	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
report	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def report(self, messageClass, *args, **kwargs):$/;"	m	class:Checker
report_change	.\bundle\ropevim\ftplugin\python\libs\rope\base\libutils.py	/^def report_change(project, path, old_content):$/;"	f
resource	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def resource(self):$/;"	m	class:_OccurrenceToolsCreator
resource	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def resource(self):$/;"	m	class:RopeMode
resource	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def resource(self):$/;"	m	class:Refactoring
resource_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def resource_changed(self, resource):$/;"	m	class:FilteredResourceObserver
resource_changed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def resource_changed(self, resource):$/;"	m	class:ResourceObserver
resource_created	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def resource_created(self, resource):$/;"	m	class:FilteredResourceObserver
resource_created	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def resource_created(self, resource):$/;"	m	class:ResourceObserver
resource_moved	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def resource_moved(self, resource, new_resource):$/;"	m	class:FilteredResourceObserver
resource_moved	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def resource_moved(self, resource, new_resource):$/;"	m	class:ResourceObserver
resource_removed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def resource_removed(self, resource):$/;"	m	class:FilteredResourceObserver
resource_removed	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def resource_removed(self, resource):$/;"	m	class:ResourceObserver
resource_to_path	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def resource_to_path(self, resource):$/;"	m	class:PyObjectToTextual
resource_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def resource_to_pyobject(self, resource, force_errors=False):$/;"	m	class:PyCore
resources	.\bundle\ropevim\ftplugin\python\libs\ropemode\filter.py	/^def resources(project, rules):$/;"	f
resources_option	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def resources_option(self):$/;"	m	class:Refactoring
returned	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def returned(self):$/;"	m	class:_ExtractInfo
rfind_token	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def rfind_token(self, token, start, end):$/;"	m	class:_Source
root	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    root = property(lambda self: self.get_resource(''))$/;"	v	class:Project
rope_hook	.\bundle\ropevim\ftplugin\python\libs\ropemode\decorators.py	/^def rope_hook(hook):$/;"	f
ropefolder	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def ropefolder(self):$/;"	m	class:Project
ropefolder	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    ropefolder = None$/;"	v	class:_Project
ropevim	.\bundle\ropevim\ftplugin\python\ropevim.vim	/^import ropevim$/;"	m
run	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def run(self):$/;"	m	class:PythonFileRunner
runFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^        def runFunction():$/;"	f	function:Checker.LAMBDA
run_module	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^    def run_module(self, resource, args=None, stdin=None, stdout=None):$/;"	m	class:PyCore
run_module	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def run_module(self):$/;"	m	class:RopeMode
runtask	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^def runtask(env, command, name, interrupts=True):$/;"	f
s:Bookmark	.\bundle\nerdtree\lib\nerdtree\bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Creator	.\bundle\nerdtree\lib\nerdtree\creator.vim	/^let s:Creator = {}$/;"	v
s:HlGroupName	.\autoload\ShowTrailingWhitespace.vim	/^let s:HlGroupName = 'ShowTrailingWhitespace'$/;"	v
s:KeyMap	.\bundle\nerdtree\lib\nerdtree\key_map.vim	/^let s:KeyMap = {}$/;"	v
s:MenuController	.\bundle\nerdtree\lib\nerdtree\menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	.\bundle\nerdtree\lib\nerdtree\menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTreeSortStarIndex	.\bundle\nerdtree\lib\nerdtree\path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:Opener	.\bundle\nerdtree\lib\nerdtree\opener.vim	/^let s:Opener = {}$/;"	v
s:Path	.\bundle\nerdtree\lib\nerdtree\path.vim	/^let s:Path = {}$/;"	v
s:Tab	.\bundle\supertab\plugin\supertab.vim	/^      let s:Tab = function(substitute(existing, '()$', '', ''))$/;"	v
s:Tlist_Skip_Refresh	.\plugin\taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	.\bundle\nerdtree\lib\nerdtree\tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	.\bundle\nerdtree\lib\nerdtree\tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:abstract_prototype	.\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:buffer_prototype	.\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:commands	.\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:commands = []$/;"	v
s:cpo_save	.\plugin\taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:defaultCommentString	.\bundle\tcomment_vim\autoload\tcomment.vim	/^let s:defaultCommentString = s:DefaultValue('commentstring')$/;"	v
s:defaultComments	.\bundle\tcomment_vim\autoload\tcomment.vim	/^let s:defaultComments      = s:DefaultValue('comments')$/;"	v
s:definitions	.\bundle\tcomment_vim\autoload\tcomment.vim	/^let s:definitions = {}$/;"	v
s:did_snip_helper	.\bundle\snipmate\ftplugin\html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	.\bundle\snipmate\after\plugin\snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:done_bundles	.\autoload\pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:first_completion	.\bundle\tcomment_vim\autoload\tcomment.vim	/^let s:first_completion = 0$/;"	v
s:maxoff	.\bundle\vim-python-pep8-indent\indent\python.vim	/^let s:maxoff = 50$/;"	v
s:menu_char_prefix	.\plugin\taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:modes	.\bundle\supertab\plugin\supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	.\bundle\supertab\plugin\supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:nullCommentString	.\bundle\tcomment_vim\autoload\tcomment.vim	/^let s:nullCommentString    = '%s'$/;"	v
s:old_cpo	.\bundle\nerdtree\plugin\NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:repo_prototype	.\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	.\bundle\vim-fugitive\plugin\fugitive.vim	/^let s:repos = {}$/;"	v
s:save_cpo	.\autoload\ShowTrailingWhitespace.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	.\bundle\supertab\plugin\supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:snippets	.\bundle\snipmate\plugin\snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:tabHelp	.\bundle\supertab\plugin\supertab.vim	/^  let s:tabHelp =$/;"	v
s:temp_files	.\bundle\vim-fugitive\plugin\fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:tlist_app_name	.\plugin\taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	.\plugin\taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	.\plugin\taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	.\plugin\taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	.\plugin\taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	.\plugin\taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	.\plugin\taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	.\plugin\taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	.\plugin\taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	.\plugin\taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	.\plugin\taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	.\plugin\taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	.\plugin\taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	.\plugin\taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	.\plugin\taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	.\plugin\taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	.\plugin\taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	.\plugin\taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	.\plugin\taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	.\plugin\taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	.\plugin\taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	.\plugin\taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	.\plugin\taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	.\plugin\taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	.\plugin\taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	.\plugin\taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	.\plugin\taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	.\plugin\taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	.\plugin\taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	.\plugin\taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	.\plugin\taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	.\plugin\taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	.\plugin\taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	.\plugin\taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	.\plugin\taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	.\plugin\taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	.\plugin\taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	.\plugin\taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	.\plugin\taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	.\plugin\taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	.\plugin\taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	.\plugin\taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	.\plugin\taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	.\plugin\taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	.\plugin\taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	.\plugin\taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	.\plugin\taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	.\plugin\taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	.\plugin\taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	.\plugin\taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	.\plugin\taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	.\plugin\taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	.\plugin\taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tree_up_dir_line	.\bundle\nerdtree\syntax\nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:types	.\bundle\supertab\plugin\supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	.\bundle\supertab\plugin\supertab.vim	/^  let s:types =$/;"	v
s:typesDirty	.\bundle\tcomment_vim\autoload\tcomment.vim	/^let s:typesDirty = 1$/;"	v
s:vopen_warning	.\autoload\pathogen.vim	/^let s:vopen_warning = 0$/;"	v
same_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^def same_pyname(expected, pyname):$/;"	f
save	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def save(self):$/;"	m	class:History
save_files	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def save_files(self, filenames):$/;"	m	class:Environment
save_files	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def save_files(self, filenames):$/;"	m	class:VimUtils
save_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\builtins.py	/^    def save_per_name(self, value):$/;"	m	class:_CallContext
save_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def save_per_name(self, name, value):$/;"	m	class:ScopeInfo
save_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def save_per_name(self, name, value):$/;"	m	class:ScopeInfo
save_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def save_per_name(self, name, value):$/;"	m	class:_NullScopeInfo
save_per_name	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def save_per_name(self, scope, name, data):$/;"	m	class:ObjectInfoManager
saveall	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    saveall = False$/;"	v	class:MethodObject
saveall	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    saveall = False$/;"	v	class:ModuleToPackage
saveall	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    saveall = False$/;"	v	class:OrganizeImports
saveall	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    saveall = False$/;"	v	class:_Extract
saveall	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    saveall = True$/;"	v	class:ChangeSignature
saveall	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    saveall = True$/;"	v	class:IntroduceFactory
saveall	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    saveall = True$/;"	v	class:Refactoring
saveall	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    saveall = True$/;"	v	class:Rename
saveit	.\bundle\ropevim\ftplugin\python\libs\rope\base\utils.py	/^def saveit(func):$/;"	f
scope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    def scope(self):$/;"	m	class:Checker
scope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    scope = property(scope)$/;"	v	class:Checker
scope_indents	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\extract.py	/^    def scope_indents(self):$/;"	m	class:_ExtractInfo
scripts	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    scripts=["bin\/pyflakes"],$/;"	v
search_subscopes	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^            def search_subscopes(pydefined):$/;"	f	function:perform_soa_on_changed_scopes
send_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def send_data(self, data):$/;"	m	class:__rope_start_everything._FileSender
send_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def send_data(self, data):$/;"	m	class:__rope_start_everything._MessageSender
send_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\runmod.py	/^        def send_data(self, data):$/;"	m	class:__rope_start_everything._SocketSender
set	.\bundle\ropevim\ftplugin\python\libs\rope\base\prefs.py	/^    def set(self, key, value):$/;"	m	class:Prefs
set	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def set(self, key, value):$/;"	m	class:Project
set	.\bundle\ropevim\ftplugin\python\libs\rope\base\pynames.py	/^    def set(self, pyobject):$/;"	m	class:_Inferred
set	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    def set(self, data):$/;"	m	class:_ConcludedData
set_patterns	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def set_patterns(self, patterns):$/;"	m	class:_ResourceMatcher
set_prefs	.\bundle\ropevim\ftplugin\python\libs\rope\base\default_config.py	/^def set_prefs(prefs):$/;"	f
shellesc	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:shellslash(path)$/;"	f
shiftwidth	.\bundle\vim-python-pep8-indent\spec\indent\indent_spec.rb	/^  def shiftwidth$/;"	f
shortcuts	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^shortcuts = {'code_assist': '<M-\/>',$/;"	v
should_analyze	.\bundle\ropevim\ftplugin\python\libs\rope\base\pycore.py	/^            def should_analyze(pydefined):$/;"	f	function:perform_soa_on_changed_scopes
show	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^    def show(self, initial_asking=True):$/;"	m	class:Refactoring
showMenu	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:showMenu(node)$/;"	f
show_calltip	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def show_calltip(self, prefix):$/;"	m	class:RopeMode
show_dialog	.\bundle\ropevim\ftplugin\python\libs\ropemode\dialog.py	/^def show_dialog(askdata, actions, confs={}, optionals={}, initial_asking=True):$/;"	f
show_doc	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def show_doc(self, docs, altview=False):$/;"	m	class:Environment
show_doc	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def show_doc(self, prefix):$/;"	m	class:RopeMode
show_doc	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def show_doc(self, docs, altview=False):$/;"	m	class:VimUtils
show_occurrences	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def show_occurrences(self, locations):$/;"	m	class:Environment
show_occurrences	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def show_occurrences(self, locations):$/;"	m	class:VimUtils
skip	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^        skip = "Python 2.6 required for class decorator tests."$/;"	v	class:Python26Tests
skip	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^        skip = "Python 2.5 required for if-else and with tests"$/;"	v	class:Python25Test
skip	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^        skip = "Python 2.7 required for dict\/set comprehension tests"$/;"	v	class:Python27Test
snipMate#expandSnip	.\bundle\snipmate\autoload\snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	.\bundle\snipmate\autoload\snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	.\bundle\snipmate\plugin\snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
sort_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\__init__.py	/^    def sort_imports(self, pymodule, import_filter=None):$/;"	m	class:ImportTools
sort_imports	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def sort_imports(self):$/;"	m	class:ModuleImports
sorted_proposals	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def sorted_proposals(proposals, scopepref=None, typepref=None):$/;"	f
source	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\change_signature.py	/^    def source(self):$/;"	m	class:_ChangeCallsInModule
source	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def source(self):$/;"	m	class:_FindChangesForModule
source	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    def source(self):$/;"	m	class:_InlineFunctionCallsForModuleHandle
source	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def source(self):$/;"	m	class:_CodeAssist
source_code	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def source_code(self):$/;"	m	class:_OccurrenceToolsCreator
stage_info	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
standard_modules	.\bundle\ropevim\ftplugin\python\libs\rope\base\stdmods.py	/^def standard_modules():$/;"	f
start	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyscopes.py	/^    start = property(get_start)$/;"	v	class:Scope
start_walking	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\usefunction.py	/^    def start_walking(self, node):$/;"	m	class:_ReturnOrYieldFinder
started_job	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def started_job(self, name):$/;"	m	class:JobSet
started_job	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def started_job(self, name):$/;"	m	class:NullJobSet
starting	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def starting(self):$/;"	m	class:_CodeAssist
starting_expression	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def starting_expression(source_code, offset):$/;"	f
starting_offset	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^def starting_offset(source_code, offset):$/;"	f
starting_offset	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def starting_offset(self):$/;"	m	class:_CodeAssist
starts	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^    def starts(self):$/;"	m	class:CachingLogicalLineFinder
stop	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def stop(self):$/;"	m	class:NullTaskHandle
stop	.\bundle\ropevim\ftplugin\python\libs\rope\base\taskhandle.py	/^    def stop(self):$/;"	m	class:TaskHandle
sub	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
submodules	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^def submodules(mod):$/;"	f
substitute	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def substitute(self, mapping):$/;"	m	class:Template
substitute	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\similarfinder.py	/^    def substitute(self, mapping):$/;"	m	class:CodeTemplate
supertab_close_preview	.\bundle\supertab\plugin\supertab.vim	/^    augroup supertab_close_preview$/;"	a
sync	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectinfo.py	/^    def sync(self):$/;"	m	class:ObjectInfoManager
sync	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def sync(self):$/;"	m	class:Project
sys	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^import sys$/;"	m
sys	.\ftplugin\python.vim	/^import sys$/;"	m
sys,	.\bundle\ropevim\ftplugin\python\ropevim.vim	/^import sys, vim$/;"	m
tabstop	.\bundle\vim-python-pep8-indent\spec\indent\indent_spec.rb	/^  def tabstop$/;"	f
tcomment#CollectFileTypes	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#CollectFileTypes()$/;"	f
tcomment#Comment	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#Comment(beg, end, ...)$/;"	f
tcomment#CommentAs	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#CommentAs(beg, end, commentAnyway, filetype, ...)$/;"	f
tcomment#Complete	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#Complete(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#CompleteArgs	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#CompleteArgs(ArgLead, CmdLine, CursorPos) "{{{3$/;"	f
tcomment#DefineType	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#DefineType(name, commentdef, ...)$/;"	f
tcomment#GetCommentDef	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#GetCommentDef(name)$/;"	f
tcomment#GuessCommentType	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#GuessCommentType(...) "{{{3$/;"	f
tcomment#Operator	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#Operator(type, ...) "{{{3$/;"	f
tcomment#OperatorAnyway	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#OperatorAnyway(type) "{{{3$/;"	f
tcomment#OperatorLine	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#OperatorLine(type) "{{{3$/;"	f
tcomment#OperatorLineAnyway	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#OperatorLineAnyway(type) "{{{3$/;"	f
tcomment#SetOption	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#SetOption(name, arg) "{{{3$/;"	f
tcomment#TextObjectInlineComment	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#TextObjectInlineComment() "{{{3$/;"	f
tcomment#TypeExists	.\bundle\tcomment_vim\autoload\tcomment.vim	/^function! tcomment#TypeExists(name)$/;"	f
test_aliasedImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_aliasedImport(self):$/;"	m	class:Test
test_assignInForLoop	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_assignInForLoop(self):$/;"	m	class:TestUnusedAssignment
test_assignInListComprehension	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_assignInListComprehension(self):$/;"	m	class:TestUnusedAssignment
test_assignRHSFirst	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_assignRHSFirst(self):$/;"	m	class:Test
test_assignToGlobal	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_assignToGlobal(self):$/;"	m	class:TestUnusedAssignment
test_assignToMember	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_assignToMember(self):$/;"	m	class:TestUnusedAssignment
test_assignmentInsideLoop	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_assignmentInsideLoop(self):$/;"	m	class:TestUnusedAssignment
test_badNestedClass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_badNestedClass(self):$/;"	m	class:Test
test_builtins	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_builtins(self):$/;"	m	class:Test
test_checkPathNonExisting	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^    def test_checkPathNonExisting(self):$/;"	m	class:CheckTests
test_classFunctionDecorator	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_classFunctionDecorator(self):$/;"	m	class:Test
test_classNameDefinedPreviously	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_classNameDefinedPreviously(self):$/;"	m	class:Test
test_classNameUndefinedInClassBody	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_classNameUndefinedInClassBody(self):$/;"	m	class:Test
test_closedOver	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_closedOver(self):$/;"	m	class:TestUnusedAssignment
test_comparison	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_comparison(self):$/;"	m	class:Test
test_containment	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_containment(self):$/;"	m	class:Test
test_definedAsStarArgs	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_definedAsStarArgs(self):$/;"	m	class:Test
test_definedByGlobal	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_definedByGlobal(self):$/;"	m	class:Test
test_definedInGenExp	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_definedInGenExp(self):$/;"	m	class:Test
test_definedInListComp	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_definedInListComp(self):$/;"	m	class:Test
test_del	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_del(self):$/;"	m	class:Test
test_delGlobal	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_delGlobal(self):$/;"	m	class:Test
test_delUndefined	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_delUndefined(self):$/;"	m	class:Test
test_dictComprehension	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_dictComprehension(self):$/;"	m	class:Python27Test
test_differentSubmoduleImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_differentSubmoduleImport(self):$/;"	m	class:Test
test_doubleClosedOver	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_doubleClosedOver(self):$/;"	m	class:TestUnusedAssignment
test_doubleNestingReportsClosestName	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_doubleNestingReportsClosestName(self):$/;"	m	class:Test
test_duplicateArgs	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_duplicateArgs(self):$/;"	m	class:Test
test_duplicateSubmoduleImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_duplicateSubmoduleImport(self):$/;"	m	class:Test
test_ellipsis	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_ellipsis(self):$/;"	m	class:Test
test_eofSyntaxError	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^    def test_eofSyntaxError(self):$/;"	f
test_extendedSlice	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_extendedSlice(self):$/;"	m	class:Test
test_functionDecorator	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_functionDecorator(self):$/;"	m	class:Test
test_functionNamesAreBoundNow	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_functionNamesAreBoundNow(self):$/;"	m	class:Test
test_functionsNeedGlobalScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_functionsNeedGlobalScope(self):$/;"	m	class:Test
test_functionsRunLater	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_functionsRunLater(self):$/;"	m	class:Test
test_futureImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_futureImport(self):$/;"	m	class:Test
test_futureImportFirst	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_futureImportFirst(self):$/;"	m	class:Test
test_generatorExpression	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_generatorExpression(self):$/;"	m	class:TestUnusedAssignment
test_globalFromNestedScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_globalFromNestedScope(self):$/;"	m	class:Test
test_globalImportStar	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_globalImportStar(self):$/;"	m	class:Test
test_globalInGlobalScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_globalInGlobalScope(self):$/;"	m	class:Test
test_identity	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_identity(self):$/;"	m	class:Test
test_ifexp	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_ifexp(self):$/;"	m	class:Python25Test
test_ignoreNonImportRedefinitions	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_ignoreNonImportRedefinitions(self):$/;"	m	class:Test
test_ignoredInClass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_ignoredInClass(self):$/;"	m	class:TestSpecialAll
test_ignoredInFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_ignoredInFunction(self):$/;"	m	class:TestSpecialAll
test_importStar	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_importStar(self):$/;"	m	class:Test
test_importedInClass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_importedInClass(self):$/;"	m	class:Test
test_importingForImportError	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_importingForImportError(self):$/;"	m	class:Test
test_impossibleContext	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_impossibleContext(self):$/;"	m	class:NameTests
test_intermediateClassScopeIgnored	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_intermediateClassScopeIgnored(self):$/;"	m	class:Test
test_laterRedefinedGlobalFromNestedScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_laterRedefinedGlobalFromNestedScope(self):$/;"	m	class:Test
test_laterRedefinedGlobalFromNestedScope2	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_laterRedefinedGlobalFromNestedScope2(self):$/;"	m	class:Test
test_laterRedefinedGlobalFromNestedScope3	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_laterRedefinedGlobalFromNestedScope3(self):$/;"	m	class:Test
test_listUnpacking	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_listUnpacking(self):$/;"	m	class:TestUnusedAssignment
test_localImportStar	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_localImportStar(self):$/;"	m	class:Test
test_localReferencedBeforeAssignment	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_localReferencedBeforeAssignment(self):$/;"	m	class:Test
test_loopControl	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_loopControl(self):$/;"	m	class:Test
test_magicGlobalsBuiltins	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_magicGlobalsBuiltins(self):$/;"	m	class:Test
test_magicGlobalsFile	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_magicGlobalsFile(self):$/;"	m	class:Test
test_magicGlobalsName	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_magicGlobalsName(self):$/;"	m	class:Test
test_magicGlobalsPath	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_magicGlobalsPath(self):$/;"	m	class:Test
test_methodsDontUseClassScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_methodsDontUseClassScope(self):$/;"	m	class:Test
test_misencodedFile	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^    def test_misencodedFile(self):$/;"	f
test_missingTrailingNewline	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^    def test_missingTrailingNewline(self):$/;"	m	class:CheckTests
test_multilineSyntaxError	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^    def test_multilineSyntaxError(self):$/;"	m	class:CheckTests
test_nestedClass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_nestedClass(self):$/;"	m	class:Test
test_nestedClassAndFunctionScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_nestedClassAndFunctionScope(self):$/;"	m	class:Test
test_nestedFunctionsNestScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_nestedFunctionsNestScope(self):$/;"	m	class:Test
test_newAssignment	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_newAssignment(self):$/;"	m	class:Test
test_nonDefaultFollowsDefaultSyntaxError	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^    def test_nonDefaultFollowsDefaultSyntaxError(self):$/;"	f
test_nonGlobalDoesNotRedefine	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_nonGlobalDoesNotRedefine(self):$/;"	m	class:Test
test_nonKeywordAfterKeywordSyntaxError	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^    def test_nonKeywordAfterKeywordSyntaxError(self):$/;"	f
test_notUsedInNestedScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_notUsedInNestedScope(self):$/;"	m	class:Test
test_packageImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_packageImport(self):$/;"	m	class:Test
test_permissionDenied	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^    def test_permissionDenied(self):$/;"	f
test_redefinedByClass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedByClass(self):$/;"	m	class:Test
test_redefinedByExcept	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedByExcept(self):$/;"	m	class:Test
test_redefinedByFor	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedByFor(self):$/;"	m	class:Test
test_redefinedByFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedByFunction(self):$/;"	m	class:Test
test_redefinedByGenExp	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedByGenExp(self):$/;"	m	class:TestSpecialAll
test_redefinedByListComp	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedByListComp(self):$/;"	m	class:Test
test_redefinedBySubclass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedBySubclass(self):$/;"	m	class:Test
test_redefinedClassFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_redefinedClassFunction(self):$/;"	m	class:Test
test_redefinedFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_redefinedFunction(self):$/;"	m	class:Test
test_redefinedInClass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedInClass(self):$/;"	m	class:Test
test_redefinedInNestedFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedInNestedFunction(self):$/;"	m	class:Test
test_redefinedWhileUnused	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_redefinedWhileUnused(self):$/;"	m	class:Test
test_setComprehensionAndLiteral	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_setComprehensionAndLiteral(self):$/;"	m	class:Python27Test
test_shadowedByFor	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_shadowedByFor(self):$/;"	m	class:Test
test_shadowedByForDeep	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_shadowedByForDeep(self):$/;"	m	class:Test
test_shadowedByLambda	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_shadowedByLambda(self):$/;"	m	class:Test
test_shadowedByParameter	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_shadowedByParameter(self):$/;"	m	class:Test
test_tryingMultipleImports	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_tryingMultipleImports(self):$/;"	m	class:Test
test_tupleUnpacking	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_tupleUnpacking(self):$/;"	m	class:TestUnusedAssignment
test_unaryPlus	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_unaryPlus(self):$/;"	m	class:Test
test_unboundExported	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_unboundExported(self):$/;"	m	class:TestSpecialAll
test_undefined	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_undefined(self):$/;"	m	class:Test
test_undefinedBaseClass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_undefinedBaseClass(self):$/;"	m	class:Test
test_unpackedParameter	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_undefined_names.py	/^    def test_unpackedParameter(self):$/;"	m	class:Test
test_unrecognizable	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_unrecognizable(self):$/;"	m	class:TestSpecialAll
test_unusedImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_unusedImport(self):$/;"	m	class:Test
test_unusedInNestedScope	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_unusedInNestedScope(self):$/;"	m	class:Test
test_unusedPackageImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_unusedPackageImport(self):$/;"	m	class:Test
test_unusedVariable	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_unusedVariable(self):$/;"	m	class:TestUnusedAssignment
test_usedAsClassDecorator	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedAsClassDecorator(self):$/;"	m	class:Python26Tests
test_usedAsDecorator	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedAsDecorator(self):$/;"	m	class:TestSpecialAll
test_usedImport	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedImport(self):$/;"	m	class:Test
test_usedInAssert	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInAssert(self):$/;"	m	class:Test
test_usedInAssignment	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInAssignment(self):$/;"	m	class:Test
test_usedInAttributeAssign	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInAttributeAssign(self):$/;"	m	class:Test
test_usedInBackquote	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInBackquote(self):$/;"	m	class:Test
test_usedInCall	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInCall(self):$/;"	m	class:Test
test_usedInClass	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInClass(self):$/;"	m	class:Test
test_usedInClassBase	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInClassBase(self):$/;"	m	class:Test
test_usedInDict	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInDict(self):$/;"	m	class:Test
test_usedInElifConditional	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInElifConditional(self):$/;"	m	class:Test
test_usedInElse	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInElse(self):$/;"	m	class:Test
test_usedInExcept	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInExcept(self):$/;"	m	class:Test
test_usedInExec	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInExec(self):$/;"	m	class:Test
test_usedInFor	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInFor(self):$/;"	m	class:Test
test_usedInForElse	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInForElse(self):$/;"	m	class:Test
test_usedInFunction	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInFunction(self):$/;"	m	class:Test
test_usedInGenExp	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInGenExp(self):$/;"	m	class:TestSpecialAll
test_usedInGetattr	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInGetattr(self):$/;"	m	class:Test
test_usedInGlobal	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInGlobal(self):$/;"	m	class:Test
test_usedInIfBody	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInIfBody(self):$/;"	m	class:Test
test_usedInIfConditional	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInIfConditional(self):$/;"	m	class:Test
test_usedInKeywordArg	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInKeywordArg(self):$/;"	m	class:Test
test_usedInLambda	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInLambda(self):$/;"	m	class:Test
test_usedInList	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInList(self):$/;"	m	class:Test
test_usedInListComp	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInListComp(self):$/;"	m	class:Test
test_usedInLogic	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInLogic(self):$/;"	m	class:Test
test_usedInOperators	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInOperators(self):$/;"	m	class:Test
test_usedInParameterDefault	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInParameterDefault(self):$/;"	m	class:Test
test_usedInRaise	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInRaise(self):$/;"	m	class:Test
test_usedInReturn	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInReturn(self):$/;"	m	class:Test
test_usedInSlice	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInSlice(self):$/;"	m	class:Test
test_usedInSliceObj	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInSliceObj(self):$/;"	m	class:Test
test_usedInSubscript	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInSubscript(self):$/;"	m	class:Test
test_usedInTry	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInTry(self):$/;"	m	class:Test
test_usedInTryFinally	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInTryFinally(self):$/;"	m	class:Test
test_usedInTuple	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInTuple(self):$/;"	m	class:Test
test_usedInWhile	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInWhile(self):$/;"	m	class:Test
test_usedInYield	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_usedInYield(self):$/;"	m	class:Test
test_warningSuppressed	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_imports.py	/^    def test_warningSuppressed(self):$/;"	m	class:TestSpecialAll
test_withStatementAttributeName	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementAttributeName(self):$/;"	m	class:Python25Test
test_withStatementComplicatedTarget	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementComplicatedTarget(self):$/;"	m	class:Python25Test
test_withStatementListNames	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementListNames(self):$/;"	m	class:Python25Test
test_withStatementNameDefinedInBody	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementNameDefinedInBody(self):$/;"	m	class:Python25Test
test_withStatementNoNames	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementNoNames(self):$/;"	m	class:Python25Test
test_withStatementSingleName	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementSingleName(self):$/;"	m	class:Python25Test
test_withStatementSingleNameRedefined	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementSingleNameRedefined(self):$/;"	m	class:Python25Test
test_withStatementSingleNameUndefined	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementSingleNameUndefined(self):$/;"	m	class:Python25Test
test_withStatementSubscript	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementSubscript(self):$/;"	m	class:Python25Test
test_withStatementSubscriptUndefined	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementSubscriptUndefined(self):$/;"	m	class:Python25Test
test_withStatementTupleNames	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementTupleNames(self):$/;"	m	class:Python25Test
test_withStatementTupleNamesRedefined	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementTupleNamesRedefined(self):$/;"	m	class:Python25Test
test_withStatementTupleNamesUndefined	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementTupleNamesUndefined(self):$/;"	m	class:Python25Test
test_withStatementUndefinedInExpression	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementUndefinedInExpression(self):$/;"	m	class:Python25Test
test_withStatementUndefinedInside	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_other.py	/^    def test_withStatementUndefinedInside(self):$/;"	m	class:Python25Test
throw	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:throw(string) abort$/;"	f
till_token	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^    def till_token(self, token):$/;"	m	class:_Source
to_call_info	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def to_call_info(self, definition_info):$/;"	m	class:ArgumentMapping
to_string	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def to_string(self):$/;"	m	class:CallInfo
to_string	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\functionutils.py	/^    def to_string(self):$/;"	m	class:DefinitionInfo
tobe_redone	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def tobe_redone(self):$/;"	m	class:History
tobe_undone	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def tobe_undone(self):$/;"	m	class:History
toggleIgnoreFilter	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:toggleZoom()$/;"	f
tokenizer_generator	.\bundle\ropevim\ftplugin\python\libs\rope\base\codeanalyze.py	/^def tokenizer_generator(lines):$/;"	f
traceTree	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\checker.py	/^    traceTree = False$/;"	v	class:Checker
transfered_offset	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\fixsyntax.py	/^    def transfered_offset(self, offset):$/;"	m	class:_Commenter
transform	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def transform(self, pyobject):$/;"	m	class:PyObjectToTextual
transform	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def transform(self, textual):$/;"	m	class:TextualToPyObject
type	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def type(self):$/;"	m	class:CompletionProposal
u	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^noremap <buffer><silent> u u:PyflakesUpdate<CR>$/;"	m
underline_count	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^        def underline_count(name):$/;"	f	function:_ProposalSorter._compare_underlined_names
undo	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def undo(self):$/;"	m	class:ChangeContents
undo	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def undo(self):$/;"	m	class:CreateResource
undo	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def undo(self):$/;"	m	class:MoveResource
undo	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def undo(self):$/;"	m	class:RemoveResource
undo	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def undo(self, job_set=None):$/;"	m	class:Change
undo	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def undo(self, job_set=taskhandle.NullJobSet()):$/;"	m	class:ChangeSet
undo	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def undo(self, change=None, drop=False,$/;"	m	class:History
undo	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^            def undo(handle):$/;"	f	function:RopeMode.undo
undo	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def undo(self):$/;"	m	class:RopeMode
undo_list	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    undo_list = property(lambda self: self._undo_list)$/;"	v	class:History
unicode_to_file_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^def unicode_to_file_data(contents, encoding=None):$/;"	f
unique_prefix	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^    unique_prefix = unique_prefix()$/;"	v	class:_DefinitionGenerator
unique_prefix	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\inline.py	/^def unique_prefix():$/;"	f
unknown_to_pyobject	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\transform.py	/^    def unknown_to_pyobject(self, textual):$/;"	m	class:TextualToPyObject
unsure_func	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\rename.py	/^            def unsure_func(value=unsure):$/;"	f	function:Rename.get_changes
unsure_pyname	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^def unsure_pyname(pyname, unbound=True):$/;"	f
upDirCurrentRootClosed	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	.\bundle\nerdtree\autoload\nerdtree.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def update(self, percent):$/;"	m	class:VimProgress
update_module	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def update_module(self, modname, underlined=None):$/;"	m	class:AutoImport
update_progress	.\bundle\ropevim\ftplugin\python\libs\ropemode\refactor.py	/^        def update_progress():$/;"	f	function:RunTask.__call__
update_resource	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\autoimport.py	/^    def update_resource(self, resource, underlined=None):$/;"	m	class:AutoImport
url	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    url="http:\/\/www.divmod.org\/trac\/wiki\/DivmodPyflakes",$/;"	v
valid	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\suites.py	/^    def valid(suite):$/;"	f	function:find_visible_for_suite
validate	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def validate(self, folder):$/;"	m	class:_Project
validate	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def validate(self, folder=None):$/;"	m	class:Project
validate	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def validate(self, resource):$/;"	m	class:FilteredResourceObserver
validate	.\bundle\ropevim\ftplugin\python\libs\rope\base\resourceobserver.py	/^    def validate(self, resource):$/;"	m	class:ResourceObserver
validate_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def validate_file(self, file):$/;"	m	class:ObjectDB
validate_files	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def validate_files(self):$/;"	m	class:ObjectDB
variables	.\bundle\ropevim\ftplugin\python\libs\rope\contrib\codeassist.py	/^    def variables(self):$/;"	m	class:Template
variables	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^variables = {'ropevim_enable_autoimport': 1,$/;"	v
version	.\bundle\pyflakes\ftplugin\python\pyflakes\setup.py	/^    version="0.4.0",$/;"	v
vim	.\bundle\pyflakes\ftplugin\python\pyflakes.vim	/^import vim$/;"	m
vim	.\ftplugin\python.vim	/^import vim$/;"	m
visit	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^    def visit(self, node):$/;"	m	class:NodeVisitor
visitEmptyImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitEmptyImport(self, import_stmt, import_info):$/;"	m	class:ImportInfoVisitor
visitFromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitFromImport(self, import_stmt, import_info):$/;"	m	class:AddingVisitor
visitFromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitFromImport(self, import_stmt, import_info):$/;"	m	class:ExpandStarsVisitor
visitFromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitFromImport(self, import_stmt, import_info):$/;"	m	class:FilteringVisitor
visitFromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitFromImport(self, import_stmt, import_info):$/;"	m	class:ImportInfoVisitor
visitFromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitFromImport(self, import_stmt, import_info):$/;"	m	class:RelativeToAbsoluteVisitor
visitFromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitFromImport(self, import_stmt, import_info):$/;"	m	class:RemovePyNameVisitor
visitFromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitFromImport(self, import_stmt, import_info):$/;"	m	class:SelfImportVisitor
visitFromImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitFromImport(self, import_stmt, import_info):$/;"	m	class:SortingVisitor
visitNormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitNormalImport(self, import_stmt, import_info):$/;"	m	class:AddingVisitor
visitNormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitNormalImport(self, import_stmt, import_info):$/;"	m	class:ExpandStarsVisitor
visitNormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitNormalImport(self, import_stmt, import_info):$/;"	m	class:FilteringVisitor
visitNormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitNormalImport(self, import_stmt, import_info):$/;"	m	class:ImportInfoVisitor
visitNormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitNormalImport(self, import_stmt, import_info):$/;"	m	class:LongImportVisitor
visitNormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitNormalImport(self, import_stmt, import_info):$/;"	m	class:RelativeToAbsoluteVisitor
visitNormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitNormalImport(self, import_stmt, import_info):$/;"	m	class:SelfImportVisitor
visitNormalImport	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\actions.py	/^    def visitNormalImport(self, import_stmt, import_info):$/;"	m	class:SortingVisitor
visit_from	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def visit_from(self, node, end_line):$/;"	m	class:_GlobalImportFinder
visit_import	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\importutils\module_imports.py	/^    def visit_import(self, node, end_line):$/;"	m	class:_GlobalImportFinder
visitor_class	.\bundle\ropevim\ftplugin\python\libs\rope\base\pyobjects.py	/^    visitor_class = None$/;"	v	class:PyDefinedObject
wait_process	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\doa.py	/^    def wait_process(self):$/;"	m	class:PythonFileRunner
walk	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\ast.py	/^def walk(node):$/;"	f
walk	.\bundle\ropevim\ftplugin\python\libs\rope\base\ast.py	/^def walk(node, walker):$/;"	f
warn	.\autoload\pathogen.vim	/^function! s:warn(msg)$/;"	f
warn	.\bundle\vim-fugitive\plugin\fugitive.vim	/^function! s:warn(str)$/;"	f
withStderrTo	.\bundle\pyflakes\ftplugin\python\pyflakes\pyflakes\test\test_script.py	/^def withStderrTo(stderr, f):$/;"	f
word_finder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\occurrences.py	/^    def word_finder(self):$/;"	m	class:_OccurrenceToolsCreator
worder	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\encapsulate_field.py	/^    def worder(self):$/;"	m	class:_FindChangesForModule
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def write(self, path, data):$/;"	m	class:DarcsCommands
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def write(self, path, data):$/;"	m	class:FileSystemCommands
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def write(self, path, data):$/;"	m	class:GITCommands
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def write(self, path, data):$/;"	m	class:MercurialCommands
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\fscommands.py	/^    def write(self, path, data):$/;"	m	class:SubversionCommands
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\history.py	/^    def write(self):$/;"	m	class:History
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\memorydb.py	/^    def write(self):$/;"	m	class:MemoryDB
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\oi\objectdb.py	/^    def write(self):$/;"	m	class:ObjectDB
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def write(self):$/;"	m	class:_DataFiles
write	.\bundle\ropevim\ftplugin\python\libs\rope\base\resources.py	/^    def write(self, contents):$/;"	m	class:File
write_ast	.\bundle\ropevim\ftplugin\python\libs\rope\refactor\patchedast.py	/^def write_ast(patched_ast_node):$/;"	f
write_data	.\bundle\ropevim\ftplugin\python\libs\rope\base\project.py	/^    def write_data(self, name, data, compress=False):$/;"	m	class:_DataFiles
write_file	.\bundle\ropevim\ftplugin\python\libs\rope\base\change.py	/^    def write_file(self, resource, contents):$/;"	m	class:_ResourceOperations
write_project	.\bundle\ropevim\ftplugin\python\libs\ropemode\interface.py	/^    def write_project(self):$/;"	m	class:RopeMode
y_or_n	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def y_or_n(self, prompt):$/;"	m	class:Environment
y_or_n	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def y_or_n(self, prompt):$/;"	m	class:VimUtils
yes_or_no	.\bundle\ropevim\ftplugin\python\libs\ropemode\environment.py	/^    def yes_or_no(self, prompt):$/;"	m	class:Environment
yes_or_no	.\bundle\ropevim\ftplugin\python\libs\ropevim.py	/^    def yes_or_no(self, prompt):$/;"	m	class:VimUtils
